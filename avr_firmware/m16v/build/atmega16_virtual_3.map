Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o (exit)
/usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                              obj/net_c.o (__do_clear_bss)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(memcpy.o)
                              obj/net_c.o (memcpy)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(memset.o)
                              obj/core_c.o (memset)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eerd_block.o)
                              obj/core_c.o (eeprom_read_block)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_block.o)
                              obj/net_c.o (eeprom_write_block)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_byte.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_block.o) (eeprom_write_r18)

Allocating common symbols
Common symbol       size              file

info                0xa               obj/net_c.o
rdata               0x64              obj/net_c.o
r_data_cnt          0x1               obj/net_c.o
twi_table           0x3a              obj/core_c.o
twi_buf             0x23              obj/twi.o
adc_value           0x10              obj/core_c.o
timer_cnt_unsafe    0x4               obj/core_c.o
twi_ix              0x1               obj/core_c.o
tt                  0x7e              obj/core_c.o
frame               0x88              obj/net_c.o
internal_time       0xe               obj/core_c.o
twi_result          0x1               obj/twi.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000003c00 xr
nrww             0x0000000000003c00 0x0000000000000400 xr
data             0x0000000000800062 0x0000000000000400 rw !x
eeprom           0x0000000000810000 0x0000000000000200 rw !x
tab              0x0000000000000000 0xffffffffffffffff
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
LOAD obj/net_c.o
LOAD obj/core_c.o
LOAD obj/twi.o
LOAD obj/net_s.o
LOAD obj/crc.o
LOAD obj/tables.o
LOAD obj/self_prog.o
LOAD obj/core_s.o
LOAD obj/zero_memory.o
                0x0000000000004000                __TEXT_REGION_LENGTH__ = 0x4000
                0x0000000000000400                __DATA_REGION_LENGTH__ = 0x400
                0x0000000000000200                __EEPROM_REGION_LENGTH__ = 0x200
                0x0000000000000080                __PAZESIZE__ = 0x80
                0x0000000000003c00                __NRWW_ORIGIN__ = 0x3c00
                0x0000000000000400                __NRWW_LENGTH__ = 0x400
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a
END GROUP

.text           0x0000000000000000     0x120a
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x0000000000000054                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
 *(.init2)
 *(.init3)
 .init3         0x0000000000000060        0xe obj/zero_memory.o
 *(.init3)
 *(.init4)
 .init4         0x000000000000006e       0x10 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                0x000000000000006e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000007e        0x8 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
 *(.init9)
 *(.text)
 .text          0x0000000000000086        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
                0x0000000000000086                __vector_12
                0x0000000000000086                __bad_interrupt
                0x0000000000000086                __vector_6
                0x0000000000000086                __vector_19
                0x0000000000000086                __vector_7
                0x0000000000000086                __vector_5
                0x0000000000000086                __vector_4
                0x0000000000000086                __vector_2
                0x0000000000000086                __vector_15
                0x0000000000000086                __vector_8
                0x0000000000000086                __vector_14
                0x0000000000000086                __vector_10
                0x0000000000000086                __vector_16
                0x0000000000000086                __vector_18
                0x0000000000000086                __vector_20
 .text          0x000000000000008a        0x0 obj/net_c.o
 .text          0x000000000000008a        0x0 obj/core_c.o
 .text          0x000000000000008a        0x0 obj/twi.o
 .text          0x000000000000008a       0x10 obj/net_s.o
                0x000000000000008a                __vector_3
 .text          0x000000000000009a       0x1c obj/crc.o
                0x000000000000009a                get_crc
 .text          0x00000000000000b6        0x0 obj/tables.o
 .text          0x00000000000000b6        0x0 obj/self_prog.o
 .text          0x00000000000000b6        0x0 obj/core_s.o
 .text          0x00000000000000b6        0x0 obj/zero_memory.o
 .text          0x00000000000000b6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text          0x00000000000000b6        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text          0x00000000000000b6        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(memcpy.o)
 .text          0x00000000000000b6        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(memset.o)
 .text          0x00000000000000b6        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eerd_block.o)
 .text          0x00000000000000b6        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_block.o)
 .text          0x00000000000000b6        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_byte.o)
                0x00000000000000b6                . = ALIGN (0x2)
 *(.text.*)
 .text.propagation_delay
                0x00000000000000b6       0x24 obj/net_c.o
 .text.start_transmit
                0x00000000000000da       0x64 obj/net_c.o
 .text.send_sync_frame
                0x000000000000013e       0x2a obj/net_c.o
 .text.read_answer
                0x0000000000000168      0x1e6 obj/net_c.o
 .text.timeout_for_answer
                0x000000000000034e       0x24 obj/net_c.o
 .text.answer_has_been_recived
                0x0000000000000372       0x1c obj/net_c.o
 .text.inc_ac   0x000000000000038e       0x28 obj/net_c.o
 .text.idle_40  0x00000000000003b6       0x26 obj/net_c.o
 .text.idle_10  0x00000000000003dc       0x2c obj/net_c.o
 .text.access_time
                0x0000000000000408      0x15c obj/net_c.o
 .text.net_init
                0x0000000000000564       0x66 obj/net_c.o
                0x0000000000000564                net_init
 .text.net_poll
                0x00000000000005ca       0x5a obj/net_c.o
                0x00000000000005ca                net_poll
 .text.__vector_11
                0x0000000000000624       0x54 obj/net_c.o
                0x0000000000000624                __vector_11
 .text.__vector_13
                0x0000000000000678       0x62 obj/net_c.o
                0x0000000000000678                __vector_13
 .text.__vector_1
                0x00000000000006da      0x120 obj/net_c.o
                0x00000000000006da                __vector_1
 .text.prepare_answer
                0x00000000000007fa      0x1f6 obj/net_c.o
                0x00000000000007fa                prepare_answer
 .text.send_answer
                0x00000000000009f0       0x22 obj/net_c.o
 .text.core     0x0000000000000a12      0x324 obj/core_c.o
                0x0000000000000a86                core_init
                0x0000000000000ac6                adc_task
                0x0000000000000b74                twi_task
                0x0000000000000c42                replace_alg
                0x0000000000000c98                remove_alg
                0x0000000000000d0e                stop_alg
 .text.update_counter
                0x0000000000000d36       0xaa obj/core_c.o
                0x0000000000000d36                update_counter
 .text.reset    0x0000000000000de0       0x22 obj/core_c.o
                0x0000000000000de0                reset
 .text.startup.main
                0x0000000000000e02       0x28 obj/core_c.o
                0x0000000000000e02                main
 .text.twi_init
                0x0000000000000e2a        0xc obj/twi.o
                0x0000000000000e2a                twi_init
 .text.twi_write
                0x0000000000000e36       0x2a obj/twi.o
                0x0000000000000e36                twi_write
 .text.twi_write_bytes
                0x0000000000000e60       0x52 obj/twi.o
                0x0000000000000e60                twi_write_bytes
 .text.twi_read
                0x0000000000000eb2       0x28 obj/twi.o
                0x0000000000000eb2                twi_read
 .text.twi_read_bytes
                0x0000000000000eda       0x40 obj/twi.o
                0x0000000000000eda                twi_read_bytes
 .text.__vector_17
                0x0000000000000f1a      0x134 obj/twi.o
                0x0000000000000f1a                __vector_17
 .text.core     0x000000000000104e      0x14a obj/core_s.o
                0x000000000000104e                load_flash
                0x0000000000001062                load_tt
                0x0000000000001098                append_alg_to_end
                0x00000000000010ba                core_run
                0x000000000000111a                __vector_9
 .text.libgcc.mul
                0x0000000000001198        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000001198        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000001198        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000001198        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000001198        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000001198        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000001198        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000001198        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000001198        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000001198        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000001198        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000001198        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000001198        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000001198        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000000000001198       0x12 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(memcpy.o)
                0x0000000000001198                memcpy
 .text.avr-libc
                0x00000000000011aa        0xe /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(memset.o)
                0x00000000000011aa                memset
 .text.avr-libc
                0x00000000000011b8       0x20 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eerd_block.o)
                0x00000000000011b8                eeprom_read_block
                0x00000000000011bc                eeprom_read_blraw
 .text.avr-libc
                0x00000000000011d8       0x14 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_block.o)
                0x00000000000011d8                eeprom_write_block
 .text.avr-libc
                0x00000000000011ec       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_byte.o)
                0x00000000000011ec                eeprom_write_byte
                0x00000000000011ee                eeprom_write_r18
                0x0000000000001206                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000001206        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
                0x0000000000001206                exit
                0x0000000000001206                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000001206        0x4 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000120a                _etext = .

.nrww           0x0000000000003c00      0x3fa
                0x0000000000003c00                _nrww_start = .
 *(.nrww.crc)
 .nrww.crc      0x0000000000003c00      0x200 obj/crc.o
                0x0000000000003e00                . = ALIGN (0x2)
 *(.nrww.tt)
 .nrww.tt       0x0000000000003e00        0x2 obj/tables.o
                0x0000000000003e00                FLASH_TT
                0x0000000000003e80                . = ALIGN (__PAZESIZE__)
 *fill*         0x0000000000003e02       0x7e 
 *(.nrww.rd)
 .nrww.rd       0x0000000000003e80        0x4 obj/tables.o
                0x0000000000003e80                FLASH_RD
                0x0000000000003f00                . = ALIGN (__PAZESIZE__)
 *fill*         0x0000000000003e84       0x7c 
 *(.nrww.io)
 .nrww.io       0x0000000000003f00       0x44 obj/tables.o
                0x0000000000003f00                init_io
                0x0000000000003f80                . = ALIGN (__PAZESIZE__)
 *fill*         0x0000000000003f44       0x3c 
 *(.nrww)
 .nrww          0x0000000000003f80       0x7a obj/self_prog.o
                0x0000000000003f80                write_page
                0x0000000000003ffa                . = ALIGN (0x2)

.data           0x0000000000800062        0x0 load address 0x000000000000120a
                0x0000000000800062                _sys_ram_start = .
                [!provide]                        PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
 .data          0x0000000000800062        0x0 obj/net_c.o
 .data          0x0000000000800062        0x0 obj/core_c.o
 .data          0x0000000000800062        0x0 obj/twi.o
 .data          0x0000000000800062        0x0 obj/net_s.o
 .data          0x0000000000800062        0x0 obj/crc.o
 .data          0x0000000000800062        0x0 obj/tables.o
 .data          0x0000000000800062        0x0 obj/self_prog.o
 .data          0x0000000000800062        0x0 obj/core_s.o
 .data          0x0000000000800062        0x0 obj/zero_memory.o
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(memcpy.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(memset.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eerd_block.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_block.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_byte.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800062                . = ALIGN (0x2)
                0x0000000000800062                _edata = .
                [!provide]                        PROVIDE (__data_end, .)

.bss            0x0000000000800062      0x211
                0x0000000000800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
 .bss           0x0000000000800062        0x0 obj/net_c.o
 .bss           0x0000000000800062        0x0 obj/core_c.o
 .bss           0x0000000000800062        0x0 obj/twi.o
 .bss           0x0000000000800062        0x0 obj/net_s.o
 .bss           0x0000000000800062        0x0 obj/crc.o
 .bss           0x0000000000800062        0x0 obj/tables.o
 .bss           0x0000000000800062        0x0 obj/self_prog.o
 .bss           0x0000000000800062        0x0 obj/core_s.o
 .bss           0x0000000000800062        0x0 obj/zero_memory.o
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(memcpy.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(memset.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eerd_block.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_block.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_byte.o)
 *(.bss*)
 .bss.saved_ocr
                0x0000000000800062        0x1 obj/net_c.o
 .bss.saved_ptf
                0x0000000000800063        0x2 obj/net_c.o
 .bss.ptf       0x0000000000800065        0x2 obj/net_c.o
 .bss.rx_len    0x0000000000800067        0x1 obj/net_c.o
 .bss.tx_count  0x0000000000800068        0x1 obj/net_c.o
 .bss.ac        0x0000000000800069        0x1 obj/net_c.o
 .bss.ibbpc     0x000000000080006a        0x1 obj/net_c.o
 .bss.cur_req_num
                0x000000000080006b        0x1 obj/net_c.o
 .bss.pCurBufPtr
                0x000000000080006c        0x2 obj/net_c.o
 .bss.pend_data
                0x000000000080006e        0x2 obj/net_c.o
 .bss.pbegin_data
                0x0000000000800070        0x2 obj/net_c.o
 .bss.last_1s.2270
                0x0000000000800072        0x2 obj/core_c.o
 .bss.last.2269
                0x0000000000800074        0x1 obj/core_c.o
 .bss.cnt.2328  0x0000000000800075        0x1 obj/core_c.o
 .bss.index.2319
                0x0000000000800076        0x1 obj/core_c.o
 .bss.twi_master_state
                0x0000000000800077        0x1 obj/twi.o
 .bss.r_ix      0x0000000000800078        0x1 obj/twi.o
 .bss.r_last_index
                0x0000000000800079        0x1 obj/twi.o
 .bss.w_ix      0x000000000080007a        0x1 obj/twi.o
 .bss.t_header_len
                0x000000000080007b        0x1 obj/twi.o
 .bss.t_len     0x000000000080007c        0x1 obj/twi.o
 *(COMMON)
 COMMON         0x000000000080007d       0xf7 obj/net_c.o
                0x000000000080007d                info
                0x0000000000800087                rdata
                0x00000000008000eb                r_data_cnt
                0x00000000008000ec                frame
 COMMON         0x0000000000800174       0xdb obj/core_c.o
                0x0000000000800174                twi_table
                0x00000000008001ae                adc_value
                0x00000000008001be                timer_cnt_unsafe
                0x00000000008001c2                twi_ix
                0x00000000008001c3                tt
                0x0000000000800241                internal_time
 COMMON         0x000000000080024f       0x24 obj/twi.o
                0x000000000080024f                twi_buf
                0x0000000000800272                twi_result
                0x0000000000800273                PROVIDE (__bss_end, .)
                0x000000000000120a                __data_load_start = LOADADDR (.data)
                0x000000000000120a                __data_load_end = (__data_load_start + SIZEOF (.data))

.tab            0x000000000000120a       0xf6
                0x0000000000001280                . = ALIGN (__PAZESIZE__)
 *fill*         0x000000000000120a       0x76 
 *(.tab)
 *(.tab*)
 .tab.twi       0x0000000000001280        0x1 obj/tables.o
                0x0000000000001280                FLASH_TWI
                0x0000000000001300                . = ALIGN (__PAZESIZE__)
 *fill*         0x0000000000001281       0x7f 
                0x0000000000001300                _user_space = .

.noinit         0x0000000000800273        0xa
                0x0000000000800273                _noinit_start = .
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
 .noinit        0x0000000000800273        0xa obj/core_c.o
                0x0000000000800273                eeprcfg
                [!provide]                        PROVIDE (__noinit_end, .)
                0x000000000080027d                _end = .
                0x000000000080027d                _sys_ram_end = .

.eeprom         0x0000000000810000       0xd2
 *(.eeprom.data)
 .eeprom.data   0x0000000000810000        0xa obj/core_c.o
                0x0000000000810000                epr_eeprcfg
 *(.eeprom*)
                0x000000000081000a                _user_eeprom_start = .
 FILL mask 0x00
                0x00000000008100d2                . = (. + 0xc8)
 *fill*         0x000000000081000a       0xc8 00
                0x00000000008100d2                __eeprom_end = .
OUTPUT(../../x64/firmware/atmega16_virtual_3.elf elf32-avr)
LOAD linker stubs

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 obj/net_c.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 obj/core_c.o
 .comment       0x0000000000000011       0x12 obj/twi.o

.debug_abbrev   0x0000000000000000      0x4e7
 .debug_abbrev  0x0000000000000000      0x4e7 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o

.debug_info     0x0000000000000000      0x52e
 .debug_info    0x0000000000000000      0x52e /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o

.debug_line     0x0000000000000000       0x1a
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o

.debug_str      0x0000000000000000      0x1af
 .debug_str     0x0000000000000000      0x1af /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o

.stab           0x0000000000000000     0x2b38
 .stab          0x0000000000000000     0x16a4 obj/net_c.o
 .stab          0x00000000000016a4      0xdd4 obj/core_c.o
                                       0x11a0 (size before relaxing)
 .stab          0x0000000000002478      0x6c0 obj/twi.o
                                        0x8e8 (size before relaxing)

.stabstr        0x0000000000000000     0x24c2
 .stabstr       0x0000000000000000     0x24c2 obj/net_c.o

Cross Reference Table

Symbol                                            File
FLASH_RD                                          obj/tables.o
                                                  obj/core_c.o
FLASH_TT                                          obj/tables.o
                                                  obj/core_s.o
                                                  obj/core_c.o
FLASH_TWI                                         obj/tables.o
                                                  obj/core_c.o
__FUSE_REGION_LENGTH__                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__bad_interrupt                                   /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__bss_end                                         /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
__do_clear_bss                                    /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_clear_bss.o)
                                                  obj/twi.o
                                                  obj/core_c.o
                                                  obj/net_c.o
__heap_end                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__init                                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__stack                                           /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_1                                        obj/net_c.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_10                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_11                                       obj/net_c.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_12                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_13                                       obj/net_c.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_14                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_15                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_16                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_17                                       obj/twi.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_18                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_19                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_2                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_20                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_3                                        obj/net_s.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_4                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_5                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_6                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_7                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_8                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_9                                        obj/core_s.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vector_default                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
__vectors                                         /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
_exit                                             /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
_noinit_start                                     obj/core_c.o
adc_task                                          obj/core_c.o
                                                  obj/core_s.o
adc_value                                         obj/core_c.o
append_alg_to_end                                 obj/core_s.o
                                                  obj/core_c.o
core_init                                         obj/core_c.o
core_run                                          obj/core_s.o
                                                  obj/core_c.o
eeprcfg                                           obj/core_c.o
eeprom_read_block                                 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eerd_block.o)
                                                  obj/core_c.o
eeprom_read_blraw                                 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eerd_block.o)
eeprom_write_block                                /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_block.o)
                                                  obj/net_c.o
eeprom_write_byte                                 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_byte.o)
eeprom_write_r18                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_byte.o)
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libatmega16.a(eewr_block.o)
epr_eeprcfg                                       obj/core_c.o
exit                                              /usr/lib/gcc/avr/5.4.0/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
frame                                             obj/net_c.o
                                                  obj/self_prog.o
                                                  obj/core_c.o
get_crc                                           obj/crc.o
                                                  obj/net_c.o
info                                              obj/net_c.o
                                                  obj/core_c.o
init_io                                           obj/tables.o
                                                  obj/core_c.o
                                                  obj/net_c.o
internal_time                                     obj/core_c.o
load_flash                                        obj/core_s.o
                                                  obj/core_c.o
load_tt                                           obj/core_s.o
                                                  obj/core_c.o
main                                              obj/core_c.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/crtatmega16.o
memcpy                                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(memcpy.o)
                                                  obj/twi.o
                                                  obj/core_c.o
                                                  obj/net_c.o
memset                                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr5/libc.a(memset.o)
                                                  obj/core_c.o
net_init                                          obj/net_c.o
                                                  obj/core_c.o
net_poll                                          obj/net_c.o
                                                  obj/core_s.o
prepare_answer                                    obj/net_c.o
r_data_cnt                                        obj/net_c.o
                                                  obj/core_s.o
rdata                                             obj/net_c.o
                                                  obj/core_c.o
remove_alg                                        obj/core_c.o
                                                  obj/net_c.o
replace_alg                                       obj/core_c.o
                                                  obj/net_c.o
reset                                             obj/core_c.o
stop_alg                                          obj/core_c.o
                                                  obj/net_c.o
timer_cnt_unsafe                                  obj/core_c.o
                                                  obj/core_s.o
tt                                                obj/core_c.o
                                                  obj/core_s.o
twi_buf                                           obj/twi.o
                                                  obj/core_c.o
twi_init                                          obj/twi.o
                                                  obj/core_c.o
twi_ix                                            obj/core_c.o
                                                  obj/net_c.o
twi_read                                          obj/twi.o
                                                  obj/core_c.o
twi_read_bytes                                    obj/twi.o
                                                  obj/core_c.o
twi_result                                        obj/twi.o
                                                  obj/core_c.o
twi_table                                         obj/core_c.o
                                                  obj/net_c.o
twi_task                                          obj/core_c.o
                                                  obj/core_s.o
twi_write                                         obj/twi.o
                                                  obj/core_c.o
twi_write_bytes                                   obj/twi.o
                                                  obj/core_c.o
update_counter                                    obj/core_c.o
                                                  obj/core_s.o
write_page                                        obj/self_prog.o
                                                  obj/core_c.o
                                                  obj/net_c.o
