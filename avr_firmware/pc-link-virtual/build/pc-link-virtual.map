Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o (exit)
/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                              obj/net_c.o (__do_clear_bss)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy.o)
                              obj/net_c.o (memcpy)

Allocating common symbols
Common symbol       size              file

info                0x5               obj/net_c.o
rdata               0x64              obj/net_c.o
v_data_transmitted  0x1               obj/pc_link_v.o
r_data_cnt          0x1               obj/net_c.o
v_busy              0x1               obj/pc_link_v.o
v_data_recieved     0x1               obj/pc_link_v.o
transit_accepted    0x1               obj/net_c.o
frame               0x88              obj/net_c.o
v_buffer            0xc8              obj/pc_link_v.o
transit             0x1               obj/net_c.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000001c00 xr
nrww             0x0000000000001c00 0x0000000000000400 xr
data             0x0000000000800062 0x0000000000000400 rw !x
eeprom           0x0000000000810000 0x0000000000000200 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
LOAD obj/net_c.o
LOAD obj/pc_link_v.o
LOAD obj/net_s.o
LOAD obj/crc.o
LOAD obj/zero_memory.o
                0x0000000000002000                __TEXT_REGION_LENGTH__ = 0x2000
                0x0000000000000400                __DATA_REGION_LENGTH__ = 0x400
                0x0000000000000200                __EEPROM_REGION_LENGTH__ = 0x200
                0x0000000000000040                __PAZESIZE__ = 0x40
                0x0000000000001c00                __NRWW_ORIGIN__ = 0x1c00
                0x0000000000000400                __NRWW_LENGTH__ = 0x400
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libatmega8.a
END GROUP

.text           0x0000000000000000      0x9dc
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 *(.init2)
 *(.init3)
 .init3         0x0000000000000032        0xe obj/zero_memory.o
 *(.init3)
 *(.init4)
 .init4         0x0000000000000040       0x10 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000040                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000050        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 *(.init9)
 *(.text)
 .text          0x0000000000000054        0x2 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000054                __vector_12
                0x0000000000000054                __bad_interrupt
                0x0000000000000054                __vector_6
                0x0000000000000054                __vector_17
                0x0000000000000054                __vector_7
                0x0000000000000054                __vector_5
                0x0000000000000054                __vector_4
                0x0000000000000054                __vector_9
                0x0000000000000054                __vector_2
                0x0000000000000054                __vector_15
                0x0000000000000054                __vector_8
                0x0000000000000054                __vector_14
                0x0000000000000054                __vector_10
                0x0000000000000054                __vector_16
                0x0000000000000054                __vector_18
 .text          0x0000000000000056        0x0 obj/net_c.o
 .text          0x0000000000000056        0x0 obj/pc_link_v.o
 .text          0x0000000000000056       0x10 obj/net_s.o
                0x0000000000000056                __vector_3
 .text          0x0000000000000066       0x1c obj/crc.o
                0x0000000000000066                get_crc
 .text          0x0000000000000082        0x0 obj/zero_memory.o
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy.o)
                0x0000000000000082                . = ALIGN (0x2)
 *(.text.*)
 .text.propagation_delay
                0x0000000000000082       0x24 obj/net_c.o
 .text.start_transmit
                0x00000000000000a6       0x64 obj/net_c.o
 .text.send_sync_frame
                0x000000000000010a       0x28 obj/net_c.o
 .text.read_answer
                0x0000000000000132      0x1e6 obj/net_c.o
 .text.timeout_for_answer
                0x0000000000000318       0x36 obj/net_c.o
 .text.answer_has_been_recived
                0x000000000000034e       0x2e obj/net_c.o
 .text.inc_ac   0x000000000000037c       0x28 obj/net_c.o
 .text.idle_40  0x00000000000003a4       0x24 obj/net_c.o
 .text.idle_10  0x00000000000003c8       0x28 obj/net_c.o
 .text.access_time
                0x00000000000003f0      0x16e obj/net_c.o
 .text.net_init
                0x000000000000055e       0x6c obj/net_c.o
                0x000000000000055e                net_init
 .text.net_poll
                0x00000000000005ca       0x5a obj/net_c.o
                0x00000000000005ca                net_poll
 .text.__vector_11
                0x0000000000000624       0x54 obj/net_c.o
                0x0000000000000624                __vector_11
 .text.__vector_13
                0x0000000000000678       0x62 obj/net_c.o
                0x0000000000000678                __vector_13
 .text.__vector_1
                0x00000000000006da      0x130 obj/net_c.o
                0x00000000000006da                __vector_1
 .text.prepare_answer
                0x000000000000080a      0x12a obj/net_c.o
                0x000000000000080a                prepare_answer
 .text.send_answer
                0x0000000000000934       0x1e obj/net_c.o
 .text.transit_send
                0x0000000000000952       0x10 obj/pc_link_v.o
                0x0000000000000952                transit_send
 .text.transit_answer
                0x0000000000000962       0x1c obj/pc_link_v.o
                0x0000000000000962                transit_answer
 .text.transit_timeout
                0x000000000000097e       0x1c obj/pc_link_v.o
                0x000000000000097e                transit_timeout
 .text.startup.main
                0x000000000000099a       0x2c obj/pc_link_v.o
                0x000000000000099a                main
 .text.libgcc.mul
                0x00000000000009c6        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000009c6        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000009c6        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000009c6        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000009c6        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000009c6        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000009c6        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000009c6        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000009c6        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000009c6        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000009c6        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000009c6        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000009c6        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000009c6        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000000000009c6       0x12 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy.o)
                0x00000000000009c6                memcpy
                0x00000000000009d8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000009d8        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
                0x00000000000009d8                exit
                0x00000000000009d8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000009d8        0x4 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000009dc                _etext = .

.nrww           0x0000000000001c00      0x200
                0x0000000000001c00                _nrww_start = .
 *(.nrww.crc)
 .nrww.crc      0x0000000000001c00      0x200 obj/crc.o
                0x0000000000001e00                . = ALIGN (0x2)
 *(.nrww.tt)
                0x0000000000001e00                . = ALIGN (__PAZESIZE__)
 *(.nrww.rd)
                0x0000000000001e00                . = ALIGN (__PAZESIZE__)
 *(.nrww.io)
                0x0000000000001e00                . = ALIGN (__PAZESIZE__)
 *(.nrww)
                0x0000000000001e00                . = ALIGN (0x2)

.data           0x0000000000800062        0x0 load address 0x00000000000009dc
                0x0000000000800062                _sys_ram_start = .
                [!provide]                        PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 .data          0x0000000000800062        0x0 obj/net_c.o
 .data          0x0000000000800062        0x0 obj/pc_link_v.o
 .data          0x0000000000800062        0x0 obj/net_s.o
 .data          0x0000000000800062        0x0 obj/crc.o
 .data          0x0000000000800062        0x0 obj/zero_memory.o
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800062                . = ALIGN (0x2)
                0x0000000000800062                _edata = .
                [!provide]                        PROVIDE (__data_end, .)

.bss            0x0000000000800062      0x1cf
                0x0000000000800062                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 .bss           0x0000000000800062        0x0 obj/net_c.o
 .bss           0x0000000000800062        0x0 obj/pc_link_v.o
 .bss           0x0000000000800062        0x0 obj/net_s.o
 .bss           0x0000000000800062        0x0 obj/crc.o
 .bss           0x0000000000800062        0x0 obj/zero_memory.o
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800062        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy.o)
 *(.bss*)
 .bss.saved_ocr
                0x0000000000800062        0x1 obj/net_c.o
 .bss.saved_ptf
                0x0000000000800063        0x2 obj/net_c.o
 .bss.ptf       0x0000000000800065        0x2 obj/net_c.o
 .bss.rx_len    0x0000000000800067        0x1 obj/net_c.o
 .bss.tx_count  0x0000000000800068        0x1 obj/net_c.o
 .bss.ac        0x0000000000800069        0x1 obj/net_c.o
 .bss.ibbpc     0x000000000080006a        0x1 obj/net_c.o
 .bss.cur_req_num
                0x000000000080006b        0x1 obj/net_c.o
 .bss.pCurBufPtr
                0x000000000080006c        0x2 obj/net_c.o
 .bss.pend_data
                0x000000000080006e        0x2 obj/net_c.o
 .bss.pbegin_data
                0x0000000000800070        0x2 obj/net_c.o
 *(COMMON)
 COMMON         0x0000000000800072       0xf4 obj/net_c.o
                0x0000000000800072                info
                0x0000000000800077                rdata
                0x00000000008000db                r_data_cnt
                0x00000000008000dc                transit_accepted
                0x00000000008000dd                frame
                0x0000000000800165                transit
 COMMON         0x0000000000800166       0xcb obj/pc_link_v.o
                0x0000000000800166                v_data_transmitted
                0x0000000000800167                v_busy
                0x0000000000800168                v_data_recieved
                0x0000000000800169                v_buffer
                0x0000000000800231                PROVIDE (__bss_end, .)
                0x00000000000009dc                __data_load_start = LOADADDR (.data)
                0x00000000000009dc                __data_load_end = (__data_load_start + SIZEOF (.data))

.user_text      0x00000000000009dc       0x24
                0x0000000000000a00                . = ALIGN (__PAZESIZE__)
 *fill*         0x00000000000009dc       0x24 
                0x0000000000000a00                __user_text = .

.noinit         0x0000000000800231        0x0
                0x0000000000800231                _noinit_start = .
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800231                _end = .
                0x0000000000800231                _sys_ram_end = .

.eeprom         0x0000000000810000       0xc8
 *(.eeprom.data)
 *(.eeprom*)
                0x0000000000810000                _user_eeprom_start = .
 FILL mask 0x00
                0x00000000008100c8                . = (. + 0xc8)
 *fill*         0x0000000000810000       0xc8 00
                0x00000000008100c8                __eeprom_end = .
OUTPUT(../../x64/firmware/pc-link-virtual.elf elf32-avr)
LOAD linker stubs

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 obj/net_c.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 obj/pc_link_v.o

.debug_abbrev   0x0000000000000000      0x44e
 .debug_abbrev  0x0000000000000000      0x44e /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_info     0x0000000000000000      0x48c
 .debug_info    0x0000000000000000      0x48c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_line     0x0000000000000000       0x1a
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_str      0x0000000000000000      0x17a
 .debug_str     0x0000000000000000      0x17a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.stab           0x0000000000000000     0x1c2c
 .stab          0x0000000000000000     0x17ac obj/net_c.o
 .stab          0x00000000000017ac      0x480 obj/pc_link_v.o
                                        0x840 (size before relaxing)

.stabstr        0x0000000000000000     0x2400
 .stabstr       0x0000000000000000     0x2400 obj/net_c.o

Cross Reference Table

Symbol                                            File
__FUSE_REGION_LENGTH__                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__bad_interrupt                                   /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__bss_end                                         /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
__do_clear_bss                                    /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                                                  obj/pc_link_v.o
                                                  obj/net_c.o
__heap_end                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__init                                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__stack                                           /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_1                                        obj/net_c.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_10                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_11                                       obj/net_c.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_12                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_13                                       obj/net_c.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_14                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_15                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_16                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_17                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_18                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_2                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_3                                        obj/net_s.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_4                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_5                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_6                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_7                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_8                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_9                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_default                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vectors                                         /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
_exit                                             /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
frame                                             obj/net_c.o
                                                  obj/pc_link_v.o
get_crc                                           obj/crc.o
                                                  obj/net_c.o
info                                              obj/net_c.o
main                                              obj/pc_link_v.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
memcpy                                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(memcpy.o)
                                                  obj/pc_link_v.o
                                                  obj/net_c.o
net_init                                          obj/net_c.o
                                                  obj/pc_link_v.o
net_poll                                          obj/net_c.o
                                                  obj/pc_link_v.o
prepare_answer                                    obj/net_c.o
r_data_cnt                                        obj/net_c.o
rdata                                             obj/net_c.o
transit                                           obj/net_c.o
                                                  obj/pc_link_v.o
transit_accepted                                  obj/net_c.o
transit_answer                                    obj/pc_link_v.o
                                                  obj/net_c.o
transit_send                                      obj/pc_link_v.o
                                                  obj/net_c.o
transit_timeout                                   obj/pc_link_v.o
                                                  obj/net_c.o
v_buffer                                          obj/pc_link_v.o
                                                  obj/net_c.o
v_busy                                            obj/pc_link_v.o
v_data_recieved                                   obj/pc_link_v.o
v_data_transmitted                                obj/pc_link_v.o
