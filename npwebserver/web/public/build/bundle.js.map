{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/Parameter.svelte","../../src/Category.svelte","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/CollapsibleSection.svelte","../../../nprpc/web/nprpc/index.js","../../src/npwebserver.ts","../../src/server.ts","../../node_modules/svelte/store/index.mjs","../../src/data.ts","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root.host) {\n        return root;\n    }\n    return document;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n\timport type { Writable } from 'svelte/store'\n\n\texport let name: string;\n\texport let desc: string;\n\texport let value: Writable<string>;\n</script>\n\n<li>\n\t<div class=\"name\">{name}</div>\n\t<div class=\"desc\">{desc}</div>\n\t<div class=\"value\">{$value}</div>\n</li>\n\n<style>\n\tli { \n\t\tdisplay: flex; \n\t\tbackground-color: rgba(127, 219, 228, 0.342);\n\t\tmargin: 5px;\n\t}\n\t\n\t.name {\n\t\ttext-align: left;\n\t\tpadding: 1em;\n\t\twidth: 220px;\n\t\tmax-width: 220px;\n\t}\n\n\t.desc {\n\t\ttext-align: left;\n\t\tpadding: 1em;\n\t\twidth: 260px;\n\t\tmax-width: 260px;\n\t}\n\n\t.value {\n\t\ttext-align: right;\n\t\tpadding: 1em;\n\t}\n\t\n</style>","<script lang=\"ts\">\n\timport Parameter from './Parameter.svelte';\n\timport type { WebCategory } from './npwebserver'\n\texport let cat: WebCategory;\n</script>\n\n<ul>\n\t{#each cat.items as param}\n\t\t<Parameter name={param.name} desc={param.description} value={param.ov.value} />\n\t{/each}\n</ul>","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","<script>\n\t// based on suggestions from:\n\t// Inclusive Components by Heydon Pickering https://inclusive-components.design/collapsible-sections/\n\texport let headerText;\n\texport let expanded = false\n\n\timport { slide } from 'svelte/transition';\n\timport { quintOut } from 'svelte/easing';\n\n</script>\n\n<div class=\"collapsible\">\n\t<h3>\n\t\t<button aria-expanded={expanded} on:click={() => expanded = !expanded}>{headerText}\n\t\t\t<svg viewBox=\"0 0 20 20\" fill=\"none\" >\n\t\t\t\t<path class=\"vert\" d=\"M10 1V19\" stroke=\"black\" stroke-width=\"2\"/>\n\t\t\t\t<path d=\"M1 10L19 10\" stroke=\"black\" stroke-width=\"2\"/>\n\t\t\t</svg>\n\t\t</button>\n\t</h3>\n\t{#if expanded}\n\t<div class='contents' transition:slide=\"{{delay: 0, duration: 250, easing: quintOut }}\" >\n\t\t<slot></slot>\n\t</div>\n\t{/if}\n</div>\n\n<style>\n.collapsible {\n\tborder-bottom: 1px solid var(--gray-light, #eee);\n}\n\nh3 {\n\tmargin: 0;\n}\n\nbutton {\n\tbackground-color: var(--background, #fff);\n\tcolor: var(--gray-darkest, #282828);\n\tdisplay: flex;\n\tjustify-content: space-between;\n\twidth: 100%;\n\tborder: none;\n\tmargin: 0;\n\tpadding: 1em 0.5em;\n\tbackground-color: beige;\n\tcursor: pointer;\n}\nbutton:hover {\n\tbackground-color: rgb(246, 217, 184);\n}\n\nbutton[aria-expanded=\"true\"] {\n\tborder-bottom: 1px solid var(--gray-light, #eee);\n}\n\n\tbutton[aria-expanded=\"true\"] .vert {\n\t\t\tdisplay: none;\n\t}\n\n\tbutton:focus svg{\n\t\t\toutline: 2px solid;\n\t}\n\n\tbutton [aria-expanded=\"true\"] rect {\n\t\t\tfill: currentColor;\n\t}\n\n\tsvg {\n\t\t\theight: 0.7em;\n\t\t\twidth: 0.7em;\n\t}\n</style>","/*\n * ATTENTION: The \"eval\" devtool has been used (maybe by default in mode: \"development\").\n * This devtool is neither made for production nor for readable output files.\n * It uses \"eval()\" calls to create a separate source file in the browser devtools.\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\n * or disable the default devtool with \"devtool: false\".\n * If you are looking for production-ready output files, see mode: \"production\" (https://webpack.js.org/configuration/mode/).\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"nprpc_runtime\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nprpc_runtime\"] = factory();\n\telse\n\t\troot[\"nprpc_runtime\"] = factory();\n})(self, function() {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./src/exception.ts\":\n/*!**************************!*\\\n  !*** ./src/exception.ts ***!\n  \\**************************/\n/***/ ((__unused_webpack_module, exports) => {\n\neval(\"\\n// Copyright (c) 2021 nikitapnn1@gmail.com\\n// This file is a part of npsystem (Distributed Control System) and covered by LICENSING file in the topmost directory\\nObject.defineProperty(exports, \\\"__esModule\\\", ({ value: true }));\\nexports.Exception = void 0;\\nclass Exception extends Error {\\n    constructor(message) {\\n        super(message);\\n    }\\n}\\nexports.Exception = Exception;\\n\\n\\n//# sourceURL=webpack://nprpc_runtime/./src/exception.ts?\");\n\n/***/ }),\n\n/***/ \"./src/flat.ts\":\n/*!*********************!*\\\n  !*** ./src/flat.ts ***!\n  \\*********************/\n/***/ ((__unused_webpack_module, exports) => {\n\neval(\"\\n// Copyright (c) 2021 nikitapnn1@gmail.com\\n// This file is a part of npsystem (Distributed Control System) and covered by LICENSING file in the topmost directory\\nObject.defineProperty(exports, \\\"__esModule\\\", ({ value: true }));\\nexports.Array_Direct1_float64 = exports.Array_Direct1_float32 = exports.Array_Direct1_i64 = exports.Array_Direct1_u64 = exports.Array_Direct1_i32 = exports.Array_Direct1_u32 = exports.Array_Direct1_i16 = exports.Array_Direct1_u16 = exports.Array_Direct1_i8 = exports.Array_Direct1_u8 = exports.Vector_Direct1_float64 = exports.Vector_Direct1_float32 = exports.Vector_Direct1_i64 = exports.Vector_Direct1_u64 = exports.Vector_Direct1_i32 = exports.Vector_Direct1_u32 = exports.Vector_Direct1_i16 = exports.Vector_Direct1_u16 = exports.Vector_Direct1_i8 = exports.Vector_Direct1_u8 = exports.String_Direct1 = exports.Array_Direct2 = exports.Vector_Direct2 = exports._alloc = exports.Flat = void 0;\\nclass Flat {\\n    buffer;\\n    offset;\\n    constructor(buffer, offset) {\\n        this.buffer = buffer;\\n        this.offset = offset;\\n    }\\n}\\nexports.Flat = Flat;\\nfunction _alloc(buffer, vector_offset, n, element_size, align) {\\n    let rem = buffer.offset % align;\\n    let offset = rem ? buffer.offset + (align - rem) : buffer.offset;\\n    {\\n        let added_size = n * element_size + (offset - buffer.offset);\\n        buffer.prepare(added_size);\\n        buffer.commit(added_size);\\n    }\\n    buffer.dv.setUint32(vector_offset, offset - vector_offset, true);\\n    buffer.dv.setUint32(vector_offset + 4, n, true);\\n    //\\tconsole.log({\\n    //\\t\\toffset: offset,\\n    //\\t\\tvector_offset: vector_offset,\\n    //\\t\\tvoffset: buffer.dv.getUint32(vector_offset,  true)\\n    //\\t});\\n    return offset;\\n}\\nexports._alloc = _alloc;\\nclass Vector extends Flat {\\n    get elements_offset() { return this.offset + this.buffer.dv.getUint32(this.offset, true); }\\n    get elements_size() { return this.buffer.dv.getUint32(this.offset + 4, true); }\\n}\\nclass FlatArray extends Flat {\\n    buffer;\\n    offset;\\n    size;\\n    get elements_offset() { return this.offset; }\\n    get elements_size() { return this.size; }\\n    constructor(buffer, offset, size) {\\n        super(buffer, offset);\\n        this.buffer = buffer;\\n        this.offset = offset;\\n        this.size = size;\\n    }\\n}\\nfunction Iterable(Base) {\\n    return class _Iterable extends Base {\\n        // *[Symbol.iterator]() {\\n        // \\tlet size: number = (this as any).elements_size;\\n        // \\tfor (let ix = 0; ix < size; ++ix) {\\n        // \\t\\tyield (this as any).get_val(ix);\\n        // \\t}\\n        // }\\n        [Symbol.iterator]() {\\n            let this_ = this;\\n            const size = this_.elements_size;\\n            let index = 0;\\n            return {\\n                next: () => {\\n                    if (index < size)\\n                        return { value: this_.get_val(index++), done: false };\\n                    return { value: size, done: true };\\n                }\\n            };\\n        }\\n    };\\n}\\nfunction Accessor_U8(Base) {\\n    return class _Accessor_U8 extends Base {\\n        get_val(ix) { return this.buffer.dv.getUint8(this.elements_offset + ix); }\\n        set_val(ix, value) { this.buffer.dv.setUint8(this.elements_offset + ix, value); }\\n        copy_from_ts_array(arr) {\\n            let offset = this.elements_offset;\\n            for (let n of arr) {\\n                this.buffer.dv.setUint8(offset, n);\\n                offset += 1;\\n            }\\n        }\\n        get array_buffer() {\\n            let offset = this.elements_offset;\\n            return this.buffer.array_buffer.slice(offset, offset + this.elements_size);\\n        }\\n        get data_view() {\\n            return new DataView(this.buffer.array_buffer, this.elements_offset);\\n        }\\n    };\\n}\\nfunction Accessor_I8(Base) {\\n    return class _Accessor_I8 extends Base {\\n        get_val(ix) { return this.buffer.dv.getInt8(this.elements_offset + ix); }\\n        set_val(ix, value) { this.buffer.dv.setInt8(this.elements_offset + ix, value); }\\n        copy_from_ts_array(arr) {\\n            let offset = this.elements_offset;\\n            for (let n of arr) {\\n                this.buffer.dv.setInt8(offset, n);\\n                offset += 1;\\n            }\\n        }\\n    };\\n}\\nfunction Accessor_U16(Base) {\\n    return class _Accessor_U16 extends Base {\\n        get_val(ix) { return this.buffer.dv.getUint16(this.elements_offset + 2 * ix, true); }\\n        set_val(ix, value) { this.buffer.dv.setUint16(this.elements_offset + 2 * ix, value, true); }\\n        copy_from_ts_array(arr) {\\n            let offset = this.elements_offset;\\n            for (let n of arr) {\\n                this.buffer.dv.setUint16(offset, n, true);\\n                offset += 2;\\n            }\\n        }\\n    };\\n}\\nfunction Accessor_I16(Base) {\\n    return class _Accessor_I16 extends Base {\\n        get_val(ix) { return this.buffer.dv.getInt16(this.elements_offset + 2 * ix, true); }\\n        set_val(ix, value) { this.buffer.dv.setInt16(this.elements_offset + 2 * ix, value, true); }\\n        copy_from_ts_array(arr) {\\n            let offset = this.elements_offset;\\n            for (let n of arr) {\\n                this.buffer.dv.setInt16(offset, n, true);\\n                offset += 2;\\n            }\\n        }\\n    };\\n}\\nfunction Accessor_U32(Base) {\\n    return class _Accessor_U32 extends Base {\\n        get_val(ix) { return this.buffer.dv.getUint32(this.elements_offset + 4 * ix, true); }\\n        set_val(ix, value) { this.buffer.dv.setUint32(this.elements_offset + 4 * ix, value, true); }\\n        copy_from_ts_array(arr) {\\n            let offset = this.elements_offset;\\n            for (let n of arr) {\\n                this.buffer.dv.setUint32(offset, n, true);\\n                offset += 4;\\n            }\\n        }\\n    };\\n}\\nfunction Accessor_I32(Base) {\\n    return class _Accessor_I32 extends Base {\\n        get_val(ix) { return this.buffer.dv.getInt32(this.elements_offset + 4 * ix, true); }\\n        set_val(ix, value) { this.buffer.dv.setInt32(this.elements_offset + 4 * ix, value, true); }\\n        copy_from_ts_array(arr) {\\n            let offset = this.elements_offset;\\n            for (let n of arr) {\\n                this.buffer.dv.setInt32(offset, n, true);\\n                offset += 4;\\n            }\\n        }\\n    };\\n}\\nfunction Accessor_U64(Base) {\\n    return class _Accessor_U64 extends Base {\\n        get_val(ix) { return this.buffer.dv.getBigUint64(this.elements_offset + 8 * ix, true); }\\n        set_val(ix, value) { this.buffer.dv.setBigUint64(this.elements_offset + 8 * ix, value, true); }\\n        copy_from_ts_array(arr) {\\n            let offset = this.elements_offset;\\n            for (let n of arr) {\\n                this.buffer.dv.setBigUint64(offset, n, true);\\n                offset += 8;\\n            }\\n        }\\n    };\\n}\\nfunction Accessor_I64(Base) {\\n    return class _Accessor_I64 extends Base {\\n        get_val(ix) { return this.buffer.dv.getBigInt64(this.elements_offset + 8 * ix, true); }\\n        set_val(ix, value) { this.buffer.dv.setBigInt64(this.elements_offset + 8 * ix, value, true); }\\n        copy_from_ts_array(arr) {\\n            let offset = this.elements_offset;\\n            for (let n of arr) {\\n                this.buffer.dv.setBigInt64(offset, n, true);\\n                offset += 8;\\n            }\\n        }\\n    };\\n}\\nfunction Accessor_Float32(Base) {\\n    return class _Accessor_Float32 extends Base {\\n        get_val(ix) { return this.buffer.dv.getFloat32(this.elements_offset + 4 * ix, true); }\\n        set_val(ix, value) { this.buffer.dv.setFloat32(this.elements_offset + 4 * ix, value, true); }\\n        copy_from_ts_array(arr) {\\n            let offset = this.elements_offset;\\n            for (let n of arr) {\\n                this.buffer.dv.setFloat32(offset, n, true);\\n                offset += 4;\\n            }\\n        }\\n    };\\n}\\nfunction Accessor_Float64(Base) {\\n    return class _Accessor_Float64 extends Base {\\n        get_val(ix) { return this.buffer.dv.getFloat64(this.elements_offset + 8 * ix, true); }\\n        set_val(ix, value) { this.buffer.dv.setFloat64(this.elements_offset + 8 * ix, value, true); }\\n        copy_from_ts_array(arr) {\\n            let offset = this.elements_offset;\\n            for (let n of arr) {\\n                this.buffer.dv.setFloat64(offset, n, true);\\n                offset += 8;\\n            }\\n        }\\n    };\\n}\\nclass Vector_Direct2 extends Vector {\\n    element_size;\\n    flat_struct_constructor;\\n    *[Symbol.iterator]() {\\n        let size = this.elements_size;\\n        for (let ix = 0; ix < size; ++ix) {\\n            yield new this.flat_struct_constructor(this.buffer, this.elements_offset + this.element_size * ix);\\n        }\\n    }\\n    constructor(buffer, offset, element_size, flat_struct_constructor) {\\n        super(buffer, offset);\\n        this.element_size = element_size;\\n        this.flat_struct_constructor = flat_struct_constructor;\\n    }\\n}\\nexports.Vector_Direct2 = Vector_Direct2;\\nclass Array_Direct2 extends FlatArray {\\n    element_size;\\n    flat_struct_constructor;\\n    *[Symbol.iterator]() {\\n        let size = this.elements_size;\\n        for (let ix = 0; ix < size; ++ix) {\\n            yield new this.flat_struct_constructor(this.buffer, this.elements_offset + this.element_size * ix);\\n        }\\n    }\\n    constructor(buffer, offset, element_size, flat_struct_constructor, size) {\\n        super(buffer, offset, size);\\n        this.element_size = element_size;\\n        this.flat_struct_constructor = flat_struct_constructor;\\n    }\\n}\\nexports.Array_Direct2 = Array_Direct2;\\nclass String_Direct1 extends Iterable(Accessor_U8(Vector)) {\\n    assign(str) {\\n        let utf8_string = new TextEncoder().encode(str);\\n        let offset = _alloc(this.buffer, this.offset, utf8_string.length, 1, 1);\\n        new Uint8Array(this.buffer.array_buffer, offset).set(utf8_string);\\n    }\\n}\\nexports.String_Direct1 = String_Direct1;\\nclass Vector_Direct1_u8 extends Iterable(Accessor_U8(Vector)) {\\n}\\nexports.Vector_Direct1_u8 = Vector_Direct1_u8;\\nclass Vector_Direct1_i8 extends Iterable(Accessor_I8(Vector)) {\\n}\\nexports.Vector_Direct1_i8 = Vector_Direct1_i8;\\nclass Vector_Direct1_u16 extends Iterable(Accessor_U16(Vector)) {\\n}\\nexports.Vector_Direct1_u16 = Vector_Direct1_u16;\\nclass Vector_Direct1_i16 extends Iterable(Accessor_I16(Vector)) {\\n}\\nexports.Vector_Direct1_i16 = Vector_Direct1_i16;\\nclass Vector_Direct1_u32 extends Iterable(Accessor_U32(Vector)) {\\n}\\nexports.Vector_Direct1_u32 = Vector_Direct1_u32;\\nclass Vector_Direct1_i32 extends Iterable(Accessor_I32(Vector)) {\\n}\\nexports.Vector_Direct1_i32 = Vector_Direct1_i32;\\nclass Vector_Direct1_u64 extends Iterable(Accessor_U64(Vector)) {\\n}\\nexports.Vector_Direct1_u64 = Vector_Direct1_u64;\\nclass Vector_Direct1_i64 extends Iterable(Accessor_I64(Vector)) {\\n}\\nexports.Vector_Direct1_i64 = Vector_Direct1_i64;\\nclass Vector_Direct1_float32 extends Iterable(Accessor_Float32(Vector)) {\\n}\\nexports.Vector_Direct1_float32 = Vector_Direct1_float32;\\nclass Vector_Direct1_float64 extends Iterable(Accessor_Float64(Vector)) {\\n}\\nexports.Vector_Direct1_float64 = Vector_Direct1_float64;\\nclass Array_Direct1_u8 extends Iterable(Accessor_U8(FlatArray)) {\\n}\\nexports.Array_Direct1_u8 = Array_Direct1_u8;\\nclass Array_Direct1_i8 extends Iterable(Accessor_I8(FlatArray)) {\\n}\\nexports.Array_Direct1_i8 = Array_Direct1_i8;\\nclass Array_Direct1_u16 extends Iterable(Accessor_U16(FlatArray)) {\\n}\\nexports.Array_Direct1_u16 = Array_Direct1_u16;\\nclass Array_Direct1_i16 extends Iterable(Accessor_I16(FlatArray)) {\\n}\\nexports.Array_Direct1_i16 = Array_Direct1_i16;\\nclass Array_Direct1_u32 extends Iterable(Accessor_U32(FlatArray)) {\\n}\\nexports.Array_Direct1_u32 = Array_Direct1_u32;\\nclass Array_Direct1_i32 extends Iterable(Accessor_I32(FlatArray)) {\\n}\\nexports.Array_Direct1_i32 = Array_Direct1_i32;\\nclass Array_Direct1_u64 extends Iterable(Accessor_U64(FlatArray)) {\\n}\\nexports.Array_Direct1_u64 = Array_Direct1_u64;\\nclass Array_Direct1_i64 extends Iterable(Accessor_I64(FlatArray)) {\\n}\\nexports.Array_Direct1_i64 = Array_Direct1_i64;\\nclass Array_Direct1_float32 extends Iterable(Accessor_Float32(FlatArray)) {\\n}\\nexports.Array_Direct1_float32 = Array_Direct1_float32;\\nclass Array_Direct1_float64 extends Iterable(Accessor_Float64(FlatArray)) {\\n}\\nexports.Array_Direct1_float64 = Array_Direct1_float64;\\n\\n\\n//# sourceURL=webpack://nprpc_runtime/./src/flat.ts?\");\n\n/***/ }),\n\n/***/ \"./src/flat_buffer.ts\":\n/*!****************************!*\\\n  !*** ./src/flat_buffer.ts ***!\n  \\****************************/\n/***/ ((__unused_webpack_module, exports) => {\n\neval(\"\\nObject.defineProperty(exports, \\\"__esModule\\\", ({ value: true }));\\nexports.FlatBuffer = void 0;\\nclass FlatBuffer {\\n    capacity;\\n    size_;\\n    array_buffer;\\n    dv;\\n    static from_array_buffer(array_buffer) {\\n        let b = new FlatBuffer();\\n        b.array_buffer = array_buffer;\\n        b.size_ = b.capacity = array_buffer.byteLength;\\n        b.dv = new DataView(b.array_buffer);\\n        return b;\\n    }\\n    static create(initial_capacity = 512) {\\n        let b = new FlatBuffer();\\n        b.capacity = initial_capacity;\\n        b.size_ = 0;\\n        b.array_buffer = new ArrayBuffer(initial_capacity);\\n        b.dv = new DataView(b.array_buffer);\\n        return b;\\n    }\\n    prepare(n) {\\n        if (this.size_ + n > this.capacity) {\\n            this.capacity = Math.max(this.capacity * 2, this.capacity + n);\\n            let new_buffer = new ArrayBuffer(this.capacity);\\n            new Uint8Array(new_buffer).set(new Uint8Array(this.array_buffer));\\n            this.array_buffer = new_buffer;\\n            this.dv = new DataView(this.array_buffer);\\n        }\\n    }\\n    consume(n) { this.size_ -= n; }\\n    commit(n) { this.size_ += n; }\\n    get offset() { return this.size_; }\\n    get size() { return this.size_; }\\n    write_len(msg_len) {\\n        this.dv.setUint32(0, msg_len, true);\\n    }\\n    write_msg_id(msg) {\\n        this.dv.setUint32(4, msg, true);\\n    }\\n    read_msg_id() {\\n        return this.dv.getUint32(4, true);\\n    }\\n    write_msg_type(msg) {\\n        this.dv.setUint32(8, msg, true);\\n    }\\n    read_msg_type() {\\n        return this.dv.getUint32(8, true);\\n    }\\n    read_exception_number() {\\n        return this.dv.getUint32(16, true);\\n    }\\n    get writable_view() {\\n        return new DataView(this.array_buffer, 0, this.size);\\n    }\\n    set_buffer(abuf) {\\n        this.array_buffer = abuf;\\n        this.size_ = this.capacity = abuf.byteLength;\\n        this.dv = new DataView(this.array_buffer);\\n    }\\n    dump() {\\n        let s = new String();\\n        new Uint8Array(this.array_buffer, 0, this.size).forEach((x) => s += x.toString(16) + ' ');\\n        console.log(s);\\n    }\\n}\\nexports.FlatBuffer = FlatBuffer;\\n\\n\\n//# sourceURL=webpack://nprpc_runtime/./src/flat_buffer.ts?\");\n\n/***/ }),\n\n/***/ \"./src/index.ts\":\n/*!**********************!*\\\n  !*** ./src/index.ts ***!\n  \\**********************/\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\neval(\"\\n// Copyright (c) 2021 nikitapnn1@gmail.com\\n// This file is a part of npsystem (Distributed Control System) and covered by LICENSING file in the topmost directory\\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\\n    if (k2 === undefined) k2 = k;\\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\\n}) : (function(o, m, k, k2) {\\n    if (k2 === undefined) k2 = k;\\n    o[k2] = m[k];\\n}));\\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\\n    for (var p in m) if (p !== \\\"default\\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", ({ value: true }));\\nexports.get_nameserver = void 0;\\n__exportStar(__webpack_require__(/*! ./nprpc */ \\\"./src/nprpc.ts\\\"), exports);\\n__exportStar(__webpack_require__(/*! ./nprpc_nameserver */ \\\"./src/nprpc_nameserver.ts\\\"), exports);\\nconst nprpc_nameserver_1 = __webpack_require__(/*! ./nprpc_nameserver */ \\\"./src/nprpc_nameserver.ts\\\");\\nfunction sip4_to_u32(str) {\\n    let rx = /(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)/ig;\\n    let parts = rx.exec(str);\\n    if (parts.length != 5)\\n        throw \\\"ip address is incorrect\\\";\\n    return Number(parts[1]) << 24 | Number(parts[2]) << 16 | Number(parts[3]) << 8 | Number(parts[4]);\\n}\\nfunction get_nameserver(nameserver_ip) {\\n    let obj = new nprpc_nameserver_1.Nameserver();\\n    obj.data.ip4 = sip4_to_u32(nameserver_ip);\\n    obj.data.port = 15000;\\n    obj.data.websocket_port = 15001;\\n    obj.data.poa_idx = 0;\\n    obj.data.object_id = 0n;\\n    obj.data.flags = 0;\\n    obj.data.class_id = nprpc_nameserver_1._INameserver_Servant._get_class();\\n    return obj;\\n}\\nexports.get_nameserver = get_nameserver;\\n\\n\\n//# sourceURL=webpack://nprpc_runtime/./src/index.ts?\");\n\n/***/ }),\n\n/***/ \"./src/nprpc.ts\":\n/*!**********************!*\\\n  !*** ./src/nprpc.ts ***!\n  \\**********************/\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\neval(\"\\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\\n    if (k2 === undefined) k2 = k;\\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\\n}) : (function(o, m, k, k2) {\\n    if (k2 === undefined) k2 = k;\\n    o[k2] = m[k];\\n}));\\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\\n    Object.defineProperty(o, \\\"default\\\", { enumerable: true, value: v });\\n}) : function(o, v) {\\n    o[\\\"default\\\"] = v;\\n});\\nvar __importStar = (this && this.__importStar) || function (mod) {\\n    if (mod && mod.__esModule) return mod;\\n    var result = {};\\n    if (mod != null) for (var k in mod) if (k !== \\\"default\\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\\n    __setModuleDefault(result, mod);\\n    return result;\\n};\\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\\n    for (var p in m) if (p !== \\\"default\\\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", ({ value: true }));\\nexports.set_debug_level = exports.init = exports.rpc = exports.create_object_from_flat = exports.narrow = exports.oid_create_from_flat = exports.handle_standart_reply = exports.ReferenceList = exports.make_simple_answer = exports.ObjectServant = exports.ObjectProxy = exports.Poa = exports.Rpc = exports.Connection = exports.make_ref = exports.FlatBuffer = exports.Flat = void 0;\\nconst Flat = __importStar(__webpack_require__(/*! ./flat */ \\\"./src/flat.ts\\\"));\\nexports.Flat = Flat;\\nconst flat_buffer_1 = __webpack_require__(/*! ./flat_buffer */ \\\"./src/flat_buffer.ts\\\");\\nObject.defineProperty(exports, \\\"FlatBuffer\\\", ({ enumerable: true, get: function () { return flat_buffer_1.FlatBuffer; } }));\\n__exportStar(__webpack_require__(/*! ./exception */ \\\"./src/exception.ts\\\"), exports);\\n__exportStar(__webpack_require__(/*! ./nprpc */ \\\"./src/nprpc.ts\\\"), exports);\\n__exportStar(__webpack_require__(/*! ./nprpc_base */ \\\"./src/nprpc_base.ts\\\"), exports);\\nconst exception_1 = __webpack_require__(/*! ./exception */ \\\"./src/exception.ts\\\");\\n//import { FlatBuffer } from \\\"./flat_buffer\\\";\\nconst nprpc_base_1 = __webpack_require__(/*! ./nprpc_base */ \\\"./src/nprpc_base.ts\\\");\\nconst header_size = 16;\\nlet g_debug_level = 0 /* DebugLevel_Critical */;\\n;\\nfunction make_ref() {\\n    return { value: undefined };\\n}\\nexports.make_ref = make_ref;\\nclass MyPromise {\\n    actual_promise_;\\n    resolve_;\\n    reject_;\\n    constructor() {\\n        this.actual_promise_ = new Promise((resolve, reject) => {\\n            this.resolve_ = (x) => { resolve(x); };\\n            this.reject_ = (x) => { reject(x); };\\n        });\\n    }\\n    get $() { return this.actual_promise_; }\\n    set_promise(value) {\\n        this.resolve_(value);\\n    }\\n    set_exception(ec) {\\n        this.reject_(ec);\\n    }\\n}\\nfunction get_object(buffer, poa_idx, object_id) {\\n    do {\\n        let poa = exports.rpc.get_poa(poa_idx);\\n        if (!poa) {\\n            make_simple_answer(buffer, 6 /* Error_PoaNotExist */);\\n            console.log(\\\"Bad poa index. \\\" + poa_idx);\\n            break;\\n        }\\n        let obj = poa.get_object(object_id);\\n        if (!obj) {\\n            make_simple_answer(buffer, 7 /* Error_ObjectNotExist */);\\n            console.log(\\\"Object not found. \\\" + object_id);\\n            break;\\n        }\\n        return obj;\\n    } while (true);\\n    return null;\\n}\\nclass Connection {\\n    endpoint;\\n    ws;\\n    queue;\\n    async perform_one() {\\n        this.ws.send(this.queue[0].buffer.writable_view);\\n    }\\n    on_open() {\\n        if (this.queue.length)\\n            this.perform_one();\\n    }\\n    async send_receive(buffer, timeout_ms) {\\n        let promise = new MyPromise();\\n        this.queue.push({ buffer: buffer, promise: promise });\\n        if (this.ws.readyState && this.queue.length == 1)\\n            this.perform_one();\\n        return promise.$;\\n    }\\n    on_read(ev) {\\n        let buf = flat_buffer_1.FlatBuffer.from_array_buffer(ev.data);\\n        if (buf.read_msg_type() == 1 /* Answer */) {\\n            let task = this.queue[0];\\n            task.buffer.set_buffer(ev.data);\\n            this.queue.shift();\\n            task.promise.set_promise();\\n            if (this.queue.length)\\n                this.perform_one();\\n        }\\n        else {\\n            switch (buf.read_msg_id()) {\\n                case 0 /* FunctionCall */: {\\n                    let ch = new nprpc_base_1.impl.Flat_nprpc_base.CallHeader_Direct(buf, header_size);\\n                    if (g_debug_level >= 2 /* DebugLevel_EveryCall */) {\\n                        console.log(\\\"FunctionCall. interface_idx: \\\" + ch.interface_idx + \\\" , fn_idx: \\\" + ch.function_idx\\n                            + \\\" , poa_idx: \\\" + ch.poa_idx + \\\" , oid: \\\" + ch.object_id);\\n                    }\\n                    let obj = get_object(buf, ch.poa_idx, ch.object_id);\\n                    if (obj) {\\n                        //console.log(obj);\\n                        obj.dispatch(buf, this.endpoint, false);\\n                    }\\n                    break;\\n                }\\n                case 2 /* AddReference */: {\\n                    let msg = new nprpc_base_1.detail.Flat_nprpc_base.ObjectIdLocal_Direct(buf, header_size);\\n                    //detail::ObjectIdLocal oid{ msg.poa_idx(), msg.object_id() };\\n                    if (g_debug_level >= 2 /* DebugLevel_EveryCall */) {\\n                        console.log(\\\"AddReference. poa_idx: \\\" + msg.poa_idx + \\\" , oid: \\\" + msg.object_id);\\n                    }\\n                    let obj = get_object(buf, msg.poa_idx, msg.object_id);\\n                    if (obj) {\\n                        //\\tif (g_cfg.debug_level >= DebugLevel_EveryCall) {\\n                        //\\t\\tstd::cout << \\\"Refference added.\\\" << std::endl;\\n                        //\\t}\\n                        make_simple_answer(buf, 4 /* Success */);\\n                    }\\n                    break;\\n                }\\n                case 3 /* ReleaseObject */: {\\n                    let msg = new nprpc_base_1.detail.Flat_nprpc_base.ObjectIdLocal_Direct(buf, header_size);\\n                    //detail::ObjectIdLocal oid{ msg.poa_idx(), msg.object_id() };\\n                    //if (g_cfg.debug_level >= DebugLevel_EveryCall) {\\n                    //\\tstd::cout << \\\"ReleaseObject. \\\" << \\\"poa_idx: \\\" << oid.poa_idx << \\\", oid: \\\" << oid.object_id << std::endl;\\n                    //}\\n                    //if (ref_list_.remove_ref(msg.poa_idx(), msg.object_id())) {\\n                    //\\tmake_simple_answer(rx_buffer_(), nprpc::impl::MessageId::Success);\\n                    //} else {\\n                    //\\tmake_simple_answer(rx_buffer_(), nprpc::impl::MessageId::Error_ObjectNotExist);\\n                    //}\\n                    break;\\n                }\\n                default:\\n                    make_simple_answer(buf, 10 /* Error_UnknownMessageId */);\\n                    break;\\n            }\\n            this.ws.send(buf.writable_view);\\n        }\\n    }\\n    on_close() { }\\n    on_error(ev) {\\n        ///\\tif (buf.read_msg_type() == impl.MessageType.Answer) {\\n        //\\t\\tlet task = this.queue[0];\\n        //\\t\\ttask.buffer.set_buffer(ev.data as ArrayBuffer);\\n        //\\t\\tthis.queue.shift();\\n        //\\t\\ttask.promise.set_promise();\\n        //\\t}\\n    }\\n    constructor(endpoint) {\\n        this.endpoint = endpoint;\\n        this.queue = new Array();\\n        let ip4tostr = (ip4) => (ip4 >> 24 & 0xFF) + '.' + (ip4 >> 16 & 0xFF) + '.' + (ip4 >> 8 & 0xFF) + '.' + (ip4 & 0xFF);\\n        this.ws = new WebSocket('ws://' + ip4tostr(this.endpoint.ip4) + ':' + this.endpoint.port.toString(10));\\n        this.ws.binaryType = 'arraybuffer';\\n        this.ws.onopen = this.on_open.bind(this);\\n        this.ws.onclose = this.on_close.bind(this);\\n        this.ws.onmessage = this.on_read.bind(this);\\n        this.ws.onerror = this.on_error.bind(this);\\n    }\\n}\\nexports.Connection = Connection;\\nclass Rpc {\\n    /** @internal */\\n    last_poa_id_;\\n    /** @internal */\\n    opened_connections_;\\n    /** @internal */\\n    poa_list_;\\n    get_connection(endpoint) {\\n        let founded = this.opened_connections_.find(c => c.endpoint.ip4 === endpoint.ip4 && c.endpoint.port == endpoint.port);\\n        if (founded)\\n            return founded;\\n        let con = new Connection(endpoint);\\n        this.opened_connections_.push(con);\\n        return con;\\n    }\\n    create_poa(poa_size) {\\n        let poa = new Poa(this.last_poa_id_++, poa_size);\\n        this.poa_list_.push(poa);\\n        return poa;\\n    }\\n    get_poa(poa_idx) {\\n        if (poa_idx >= this.poa_list_.length || poa_idx < 0)\\n            return null;\\n        return this.poa_list_[poa_idx];\\n    }\\n    async call(endpoint, buffer, timeout_ms = 2500) {\\n        return this.get_connection(endpoint).send_receive(buffer, timeout_ms);\\n    }\\n    constructor() {\\n        this.last_poa_id_ = 0;\\n        this.opened_connections_ = new Array();\\n        this.poa_list_ = new Array();\\n    }\\n}\\nexports.Rpc = Rpc;\\nconst index = (oid) => {\\n    return Number(0xffffffffn & oid);\\n};\\nconst generation_index = (oid) => {\\n    return Number(oid >> 32n);\\n};\\nclass Storage {\\n    max_size_;\\n    data_;\\n    tail_idx_;\\n    add(val) {\\n        let old_free_idx = this.tail_idx_;\\n        if (old_free_idx == this.max_size_)\\n            return invalid_object_id;\\n        let old_free = this.data_[this.tail_idx_];\\n        this.tail_idx_ = index(old_free.oid); // next free\\n        old_free.obj = val;\\n        return BigInt(old_free_idx) | (BigInt(generation_index(old_free.oid)) << 32n);\\n    }\\n    remove(oid) {\\n        let idx = index(oid);\\n        this.data_[idx].oid = BigInt(this.tail_idx_) | BigInt(generation_index(oid) + 1);\\n        this.data_[idx].obj = null;\\n        this.tail_idx_ = idx;\\n    }\\n    get(oid) {\\n        let idx = index(oid);\\n        if (idx >= this.max_size_)\\n            return null;\\n        let obj = this.data_[idx];\\n        if (generation_index(obj.oid) != generation_index(oid))\\n            return null;\\n        return obj.obj;\\n    }\\n    constructor(max_size) {\\n        this.max_size_ = max_size;\\n        this.data_ = new Array(this.max_size_);\\n        for (let i = 0; i < this.max_size_; ++i) {\\n            this.data_[i] = { oid: BigInt(i + 1), obj: null };\\n        }\\n        Object.seal(this.data_);\\n        this.tail_idx_ = 0;\\n    }\\n}\\nclass Poa {\\n    /** @internal */\\n    object_map_;\\n    /** @internal */\\n    index_;\\n    get index() { return this.index_; }\\n    get_object(oid) {\\n        return this.object_map_.get(oid);\\n    }\\n    activate_object(obj) {\\n        //console.log({obj: obj});\\n        obj.poa_ = this;\\n        obj.activation_time_ = Date.now();\\n        let object_id_internal = this.object_map_.add(obj);\\n        if (object_id_internal === invalid_object_id)\\n            throw new exception_1.Exception(\\\"Poa fixed size has been exceeded\\\");\\n        obj.object_id_ = object_id_internal;\\n        obj.ref_cnt_ = 0;\\n        let oid = {\\n            object_id: object_id_internal,\\n            ip4: localhost_ip4,\\n            port: 0,\\n            websocket_port: 0,\\n            poa_idx: this.index,\\n            flags: (1 << 1 /* WebObject */),\\n            class_id: obj.get_class()\\n        };\\n        //if (pl_lifespan == Policy_Lifespan::Type::Transient) {\\n        //\\tstd::lock_guard<std::mutex> lk(g_orb->new_activated_objects_mut_);\\n        //\\tg_orb->new_activated_objects_.push_back(obj);\\n        //}\\n        return oid;\\n    }\\n    deactivate_object(object_id) {\\n        //auto obj = object_map_.get(object_id);\\n        //if (obj) {\\n        //\\tobj->to_delete_.store(true);\\n        //\\tobject_map_.remove(object_id);\\n        //} else {\\n        //\\tstd::cerr << \\\"deactivate_object: object not found. id = \\\" << object_id << '\\\\n';\\n        //}\\n    }\\n    constructor(index, max_size) {\\n        this.index_ = index;\\n        this.object_map_ = new Storage(max_size);\\n    }\\n}\\nexports.Poa = Poa;\\nclass ObjectProxy {\\n    data;\\n    /** @internal */\\n    local_ref_cnt_;\\n    /** @internal */\\n    timeout_ms_;\\n    constructor(data) {\\n        if (!data)\\n            this.data = new Object();\\n        else\\n            this.data = data;\\n        this.timeout_ms_ = 1000;\\n        this.local_ref_cnt_ = 0;\\n    }\\n    get timeout() { return this.timeout_ms_; }\\n    add_ref() {\\n        this.local_ref_cnt_++;\\n        if (this.local_ref_cnt_ != 1)\\n            return this.local_ref_cnt_;\\n        const msg_size = header_size + 16;\\n        let buf = flat_buffer_1.FlatBuffer.create(msg_size);\\n        buf.write_len(msg_size - 4);\\n        buf.write_msg_id(2 /* AddReference */);\\n        buf.write_msg_type(0 /* Request */);\\n        let msg = new nprpc_base_1.detail.Flat_nprpc_base.ObjectIdLocal_Direct(buf, header_size);\\n        msg.poa_idx = this.data.poa_idx;\\n        msg.object_id = this.data.object_id;\\n        buf.commit(msg_size);\\n        exports.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout).then().catch();\\n        return this.local_ref_cnt_;\\n    }\\n    release() {\\n        if (--this.local_ref_cnt_ != 0)\\n            return this.local_ref_cnt_;\\n        const msg_size = header_size + 16;\\n        let buf = flat_buffer_1.FlatBuffer.create(msg_size);\\n        buf.write_len(msg_size - 4);\\n        buf.write_msg_id(3 /* ReleaseObject */);\\n        buf.write_msg_type(0 /* Request */);\\n        let msg = new nprpc_base_1.detail.Flat_nprpc_base.ObjectIdLocal_Direct(buf, header_size);\\n        msg.poa_idx = this.data.poa_idx;\\n        msg.object_id = this.data.object_id;\\n        buf.commit(msg_size);\\n        exports.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout).then().catch();\\n        return 0;\\n    }\\n}\\nexports.ObjectProxy = ObjectProxy;\\nclass ObjectServant {\\n    poa_;\\n    object_id_;\\n    activation_time_;\\n    ref_cnt_;\\n    get poa() { return this.poa_; }\\n    get oid() { return this.object_id_; }\\n    add_ref() {\\n        let cnt = ++this.ref_cnt_;\\n        //if (cnt == 1 && static_cast<impl::PoaImpl*>(poa())->pl_lifespan == Policy_Lifespan::Transient) {\\n        //\\tstd::lock_guard<std::mutex> lk(impl::g_orb->new_activated_objects_mut_);\\n        //\\tauto& list = impl::g_orb->new_activated_objects_;\\n        //\\tlist.erase(std::find(begin(list), end(list), this));\\n        //}\\n        return cnt;\\n    }\\n    constructor() {\\n        this.ref_cnt_ = 0;\\n    }\\n}\\nexports.ObjectServant = ObjectServant;\\n;\\nfunction make_simple_answer(buf, message_id) {\\n    buf.consume(buf.size);\\n    buf.prepare(header_size);\\n    buf.write_len(header_size - 4);\\n    buf.write_msg_id(message_id);\\n    buf.write_msg_type(1 /* Answer */);\\n    buf.commit(header_size);\\n}\\nexports.make_simple_answer = make_simple_answer;\\nclass ReferenceList {\\n    refs;\\n    add_ref(obj) {\\n        this.refs.push({\\n            object_id: { poa_idx: obj.poa.index, object_id: obj.oid },\\n            obj: obj\\n        });\\n        obj.add_ref();\\n    }\\n    // false - reference not exist\\n    remove_ref(poa_idx, oid) {\\n        return false;\\n    }\\n    constructor() {\\n        this.refs = new Array();\\n    }\\n}\\nexports.ReferenceList = ReferenceList;\\n;\\n//  0 - Success\\n//  1 - exception\\n// -1 - not handled\\nfunction handle_standart_reply(buf) {\\n    //if (buf.size < 8) throw new ExceptionCommFailure();\\n    switch (buf.read_msg_id()) {\\n        case 4 /* Success */:\\n            return 0;\\n        case 5 /* Exception */:\\n            return 1;\\n        case 7 /* Error_ObjectNotExist */:\\n            throw new nprpc_base_1.ExceptionObjectNotExist();\\n        case 8 /* Error_CommFailure */:\\n            throw new nprpc_base_1.ExceptionCommFailure();\\n        case 9 /* Error_UnknownFunctionIdx */:\\n            throw new nprpc_base_1.ExceptionUnknownFunctionIndex();\\n        case 10 /* Error_UnknownMessageId */:\\n            throw new nprpc_base_1.ExceptionUnknownMessageId();\\n        default:\\n            return -1;\\n    }\\n}\\nexports.handle_standart_reply = handle_standart_reply;\\nfunction oid_create_from_flat(o) {\\n    return {\\n        object_id: o.object_id,\\n        ip4: o.ip4,\\n        port: o.port,\\n        websocket_port: o.websocket_port,\\n        poa_idx: o.poa_idx,\\n        flags: o.flags,\\n        class_id: o.class_id\\n    };\\n}\\nexports.oid_create_from_flat = oid_create_from_flat;\\nfunction narrow(from, to) {\\n    if (from.data.class_id !== to.servant_t._get_class())\\n        return null;\\n    let obj = new to();\\n    obj.data = from.data;\\n    obj.local_ref_cnt_ = from.local_ref_cnt_;\\n    obj.timeout_ms_ = from.timeout_ms_;\\n    from.data = null;\\n    from.local_ref_cnt_ = 0;\\n    return obj;\\n}\\nexports.narrow = narrow;\\nconst invalid_object_id = 0xffffffffffffffffn;\\nconst localhost_ip4 = 0x7F000001;\\nfunction create_object_from_flat(oid, remote_ip) {\\n    if (oid.object_id == invalid_object_id)\\n        return null;\\n    let obj = new ObjectProxy();\\n    obj.data.object_id = oid.object_id;\\n    if (remote_ip == localhost_ip4) {\\n        // could be the object on the same machine or from any other location\\n        obj.data.ip4 = oid.ip4;\\n    }\\n    else {\\n        if (oid.ip4 == localhost_ip4) {\\n            // remote object has localhost ip converting to endpoint ip\\n            obj.data.ip4 = remote_ip;\\n        }\\n        else {\\n            // remote object with ip != localhost\\n            obj.data.ip4 = oid.ip4;\\n        }\\n    }\\n    obj.data.port = oid.port;\\n    obj.data.websocket_port = oid.websocket_port;\\n    obj.data.poa_idx = oid.poa_idx;\\n    obj.data.flags = oid.flags;\\n    obj.data.class_id = oid.class_id;\\n    return obj;\\n}\\nexports.create_object_from_flat = create_object_from_flat;\\nfunction init() {\\n    exports.rpc = new Rpc();\\n    return exports.rpc;\\n}\\nexports.init = init;\\nfunction set_debug_level(debug_level) {\\n    g_debug_level = debug_level;\\n}\\nexports.set_debug_level = set_debug_level;\\n\\n\\n//# sourceURL=webpack://nprpc_runtime/./src/nprpc.ts?\");\n\n/***/ }),\n\n/***/ \"./src/nprpc_base.ts\":\n/*!***************************!*\\\n  !*** ./src/nprpc_base.ts ***!\n  \\***************************/\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\neval(\"\\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\\n    if (k2 === undefined) k2 = k;\\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\\n}) : (function(o, m, k, k2) {\\n    if (k2 === undefined) k2 = k;\\n    o[k2] = m[k];\\n}));\\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\\n    Object.defineProperty(o, \\\"default\\\", { enumerable: true, value: v });\\n}) : function(o, v) {\\n    o[\\\"default\\\"] = v;\\n});\\nvar __importStar = (this && this.__importStar) || function (mod) {\\n    if (mod && mod.__esModule) return mod;\\n    var result = {};\\n    if (mod != null) for (var k in mod) if (k !== \\\"default\\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\\n    __setModuleDefault(result, mod);\\n    return result;\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", ({ value: true }));\\nexports.impl = exports.detail = exports.ExceptionUnknownMessageId = exports.ExceptionUnknownFunctionIndex = exports.ExceptionObjectNotExist = exports.ExceptionTimeout = exports.Flat_nprpc_base = exports.ExceptionCommFailure = void 0;\\nconst NPRPC = __importStar(__webpack_require__(/*! ./nprpc */ \\\"./src/nprpc.ts\\\"));\\nclass ExceptionCommFailure extends NPRPC.Exception {\\n    constructor() { super(\\\"ExceptionCommFailure\\\"); }\\n}\\nexports.ExceptionCommFailure = ExceptionCommFailure;\\nvar Flat_nprpc_base;\\n(function (Flat_nprpc_base) {\\n    class ExceptionCommFailure_Direct extends NPRPC.Flat.Flat {\\n        get __ex_id() { return this.buffer.dv.getUint32(this.offset + 0, true); }\\n        set __ex_id(value) { this.buffer.dv.setUint32(this.offset + 0, value, true); }\\n    }\\n    Flat_nprpc_base.ExceptionCommFailure_Direct = ExceptionCommFailure_Direct;\\n})(Flat_nprpc_base = exports.Flat_nprpc_base || (exports.Flat_nprpc_base = {})); // namespace Flat \\nclass ExceptionTimeout extends NPRPC.Exception {\\n    constructor() { super(\\\"ExceptionTimeout\\\"); }\\n}\\nexports.ExceptionTimeout = ExceptionTimeout;\\n(function (Flat_nprpc_base) {\\n    class ExceptionTimeout_Direct extends NPRPC.Flat.Flat {\\n        get __ex_id() { return this.buffer.dv.getUint32(this.offset + 0, true); }\\n        set __ex_id(value) { this.buffer.dv.setUint32(this.offset + 0, value, true); }\\n    }\\n    Flat_nprpc_base.ExceptionTimeout_Direct = ExceptionTimeout_Direct;\\n})(Flat_nprpc_base = exports.Flat_nprpc_base || (exports.Flat_nprpc_base = {})); // namespace Flat \\nclass ExceptionObjectNotExist extends NPRPC.Exception {\\n    constructor() { super(\\\"ExceptionObjectNotExist\\\"); }\\n}\\nexports.ExceptionObjectNotExist = ExceptionObjectNotExist;\\n(function (Flat_nprpc_base) {\\n    class ExceptionObjectNotExist_Direct extends NPRPC.Flat.Flat {\\n        get __ex_id() { return this.buffer.dv.getUint32(this.offset + 0, true); }\\n        set __ex_id(value) { this.buffer.dv.setUint32(this.offset + 0, value, true); }\\n    }\\n    Flat_nprpc_base.ExceptionObjectNotExist_Direct = ExceptionObjectNotExist_Direct;\\n})(Flat_nprpc_base = exports.Flat_nprpc_base || (exports.Flat_nprpc_base = {})); // namespace Flat \\nclass ExceptionUnknownFunctionIndex extends NPRPC.Exception {\\n    constructor() { super(\\\"ExceptionUnknownFunctionIndex\\\"); }\\n}\\nexports.ExceptionUnknownFunctionIndex = ExceptionUnknownFunctionIndex;\\n(function (Flat_nprpc_base) {\\n    class ExceptionUnknownFunctionIndex_Direct extends NPRPC.Flat.Flat {\\n        get __ex_id() { return this.buffer.dv.getUint32(this.offset + 0, true); }\\n        set __ex_id(value) { this.buffer.dv.setUint32(this.offset + 0, value, true); }\\n    }\\n    Flat_nprpc_base.ExceptionUnknownFunctionIndex_Direct = ExceptionUnknownFunctionIndex_Direct;\\n})(Flat_nprpc_base = exports.Flat_nprpc_base || (exports.Flat_nprpc_base = {})); // namespace Flat \\nclass ExceptionUnknownMessageId extends NPRPC.Exception {\\n    constructor() { super(\\\"ExceptionUnknownMessageId\\\"); }\\n}\\nexports.ExceptionUnknownMessageId = ExceptionUnknownMessageId;\\n(function (Flat_nprpc_base) {\\n    class ExceptionUnknownMessageId_Direct extends NPRPC.Flat.Flat {\\n        get __ex_id() { return this.buffer.dv.getUint32(this.offset + 0, true); }\\n        set __ex_id(value) { this.buffer.dv.setUint32(this.offset + 0, value, true); }\\n    }\\n    Flat_nprpc_base.ExceptionUnknownMessageId_Direct = ExceptionUnknownMessageId_Direct;\\n})(Flat_nprpc_base = exports.Flat_nprpc_base || (exports.Flat_nprpc_base = {})); // namespace Flat \\nvar detail;\\n(function (detail) {\\n    let Flat_nprpc_base;\\n    (function (Flat_nprpc_base) {\\n        class ObjectIdLocal_Direct extends NPRPC.Flat.Flat {\\n            get poa_idx() { return this.buffer.dv.getUint16(this.offset + 0, true); }\\n            set poa_idx(value) { this.buffer.dv.setUint16(this.offset + 0, value, true); }\\n            get object_id() { return this.buffer.dv.getBigUint64(this.offset + 8, true); }\\n            set object_id(value) { this.buffer.dv.setBigUint64(this.offset + 8, value, true); }\\n        }\\n        Flat_nprpc_base.ObjectIdLocal_Direct = ObjectIdLocal_Direct;\\n    })(Flat_nprpc_base = detail.Flat_nprpc_base || (detail.Flat_nprpc_base = {})); // namespace Flat \\n    (function (Flat_nprpc_base) {\\n        class ObjectId_Direct extends NPRPC.Flat.Flat {\\n            get object_id() { return this.buffer.dv.getBigUint64(this.offset + 0, true); }\\n            set object_id(value) { this.buffer.dv.setBigUint64(this.offset + 0, value, true); }\\n            get ip4() { return this.buffer.dv.getUint32(this.offset + 8, true); }\\n            set ip4(value) { this.buffer.dv.setUint32(this.offset + 8, value, true); }\\n            get port() { return this.buffer.dv.getUint16(this.offset + 12, true); }\\n            set port(value) { this.buffer.dv.setUint16(this.offset + 12, value, true); }\\n            get websocket_port() { return this.buffer.dv.getUint16(this.offset + 14, true); }\\n            set websocket_port(value) { this.buffer.dv.setUint16(this.offset + 14, value, true); }\\n            get poa_idx() { return this.buffer.dv.getUint16(this.offset + 16, true); }\\n            set poa_idx(value) { this.buffer.dv.setUint16(this.offset + 16, value, true); }\\n            get flags() { return this.buffer.dv.getUint32(this.offset + 20, true); }\\n            set flags(value) { this.buffer.dv.setUint32(this.offset + 20, value, true); }\\n            get class_id() {\\n                let enc = new TextDecoder(\\\"utf-8\\\");\\n                let v_begin = this.offset + 24;\\n                let data_offset = v_begin + this.buffer.dv.getUint32(v_begin, true);\\n                let bn = this.buffer.array_buffer.slice(data_offset, data_offset + this.buffer.dv.getUint32(v_begin + 4, true));\\n                return enc.decode(bn);\\n            }\\n            set class_id(str) {\\n                let enc = new TextEncoder();\\n                let bytes = enc.encode(str);\\n                let len = bytes.length;\\n                let offset = NPRPC.Flat._alloc(this.buffer, this.offset + 24, len, 1, 1);\\n                new Uint8Array(this.buffer.array_buffer, offset).set(bytes);\\n            }\\n        }\\n        Flat_nprpc_base.ObjectId_Direct = ObjectId_Direct;\\n    })(Flat_nprpc_base = detail.Flat_nprpc_base || (detail.Flat_nprpc_base = {})); // namespace Flat \\n})(detail = exports.detail || (exports.detail = {})); // namespace detail\\nvar impl;\\n(function (impl) {\\n    let Flat_nprpc_base;\\n    (function (Flat_nprpc_base) {\\n        class Header_Direct extends NPRPC.Flat.Flat {\\n            get size() { return this.buffer.dv.getUint32(this.offset + 0, true); }\\n            set size(value) { this.buffer.dv.setUint32(this.offset + 0, value, true); }\\n            get msg_id() { return this.buffer.dv.getUint32(this.offset + 4, true); }\\n            set msg_id(value) { this.buffer.dv.setUint32(this.offset + 4, value, true); }\\n            get msg_type() { return this.buffer.dv.getUint32(this.offset + 8, true); }\\n            set msg_type(value) { this.buffer.dv.setUint32(this.offset + 8, value, true); }\\n            get reserved() { return this.buffer.dv.getUint32(this.offset + 12, true); }\\n            set reserved(value) { this.buffer.dv.setUint32(this.offset + 12, value, true); }\\n        }\\n        Flat_nprpc_base.Header_Direct = Header_Direct;\\n    })(Flat_nprpc_base = impl.Flat_nprpc_base || (impl.Flat_nprpc_base = {})); // namespace Flat \\n    (function (Flat_nprpc_base) {\\n        class CallHeader_Direct extends NPRPC.Flat.Flat {\\n            get poa_idx() { return this.buffer.dv.getUint16(this.offset + 0, true); }\\n            set poa_idx(value) { this.buffer.dv.setUint16(this.offset + 0, value, true); }\\n            get interface_idx() { return this.buffer.dv.getUint8(this.offset + 2); }\\n            set interface_idx(value) { this.buffer.dv.setUint8(this.offset + 2, value); }\\n            get function_idx() { return this.buffer.dv.getUint8(this.offset + 3); }\\n            set function_idx(value) { this.buffer.dv.setUint8(this.offset + 3, value); }\\n            get object_id() { return this.buffer.dv.getBigUint64(this.offset + 8, true); }\\n            set object_id(value) { this.buffer.dv.setBigUint64(this.offset + 8, value, true); }\\n        }\\n        Flat_nprpc_base.CallHeader_Direct = CallHeader_Direct;\\n    })(Flat_nprpc_base = impl.Flat_nprpc_base || (impl.Flat_nprpc_base = {})); // namespace Flat \\n})(impl = exports.impl || (exports.impl = {})); // namespace impl\\nfunction nprpc_base_throw_exception(buf) {\\n    switch (buf.read_exception_number()) {\\n        case 0:\\n            {\\n                let ex_flat = new Flat_nprpc_base.ExceptionCommFailure_Direct(buf, 16);\\n                let ex = new ExceptionCommFailure();\\n                throw ex;\\n            }\\n        case 1:\\n            {\\n                let ex_flat = new Flat_nprpc_base.ExceptionTimeout_Direct(buf, 16);\\n                let ex = new ExceptionTimeout();\\n                throw ex;\\n            }\\n        case 2:\\n            {\\n                let ex_flat = new Flat_nprpc_base.ExceptionObjectNotExist_Direct(buf, 16);\\n                let ex = new ExceptionObjectNotExist();\\n                throw ex;\\n            }\\n        case 3:\\n            {\\n                let ex_flat = new Flat_nprpc_base.ExceptionUnknownFunctionIndex_Direct(buf, 16);\\n                let ex = new ExceptionUnknownFunctionIndex();\\n                throw ex;\\n            }\\n        case 4:\\n            {\\n                let ex_flat = new Flat_nprpc_base.ExceptionUnknownMessageId_Direct(buf, 16);\\n                let ex = new ExceptionUnknownMessageId();\\n                throw ex;\\n            }\\n        default:\\n            throw \\\"unknown rpc exception\\\";\\n    }\\n}\\n\\n\\n//# sourceURL=webpack://nprpc_runtime/./src/nprpc_base.ts?\");\n\n/***/ }),\n\n/***/ \"./src/nprpc_nameserver.ts\":\n/*!*********************************!*\\\n  !*** ./src/nprpc_nameserver.ts ***!\n  \\*********************************/\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\neval(\"\\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\\n    if (k2 === undefined) k2 = k;\\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\\n}) : (function(o, m, k, k2) {\\n    if (k2 === undefined) k2 = k;\\n    o[k2] = m[k];\\n}));\\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\\n    Object.defineProperty(o, \\\"default\\\", { enumerable: true, value: v });\\n}) : function(o, v) {\\n    o[\\\"default\\\"] = v;\\n});\\nvar __importStar = (this && this.__importStar) || function (mod) {\\n    if (mod && mod.__esModule) return mod;\\n    var result = {};\\n    if (mod != null) for (var k in mod) if (k !== \\\"default\\\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\\n    __setModuleDefault(result, mod);\\n    return result;\\n};\\nObject.defineProperty(exports, \\\"__esModule\\\", ({ value: true }));\\nexports.Flat_nprpc_nameserver = exports._INameserver_Servant = exports.Nameserver = void 0;\\nconst NPRPC = __importStar(__webpack_require__(/*! ./nprpc */ \\\"./src/nprpc.ts\\\"));\\nclass Nameserver extends NPRPC.ObjectProxy {\\n    static get servant_t() {\\n        return _INameserver_Servant;\\n    }\\n    async Bind(obj, name) {\\n        let interface_idx = (arguments.length == 2 ? 0 : arguments[arguments.length - 1]);\\n        let buf = NPRPC.FlatBuffer.create();\\n        buf.prepare(200);\\n        buf.commit(72);\\n        buf.write_msg_id(0 /* FunctionCall */);\\n        buf.write_msg_type(0 /* Request */);\\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\\n        __ch.object_id = this.data.object_id;\\n        __ch.poa_idx = this.data.poa_idx;\\n        __ch.interface_idx = interface_idx;\\n        __ch.function_idx = 0;\\n        let _ = new Flat_nprpc_nameserver.nprpc_nameserver_M1_Direct(buf, 32);\\n        _._1.object_id = obj.object_id;\\n        _._1.ip4 = obj.ip4;\\n        _._1.port = obj.port;\\n        _._1.websocket_port = obj.websocket_port;\\n        _._1.poa_idx = obj.poa_idx;\\n        _._1.flags = obj.flags;\\n        _._1.class_id = obj.class_id;\\n        _._2 = name;\\n        buf.write_len(buf.size - 4);\\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\\n        let std_reply = NPRPC.handle_standart_reply(buf);\\n        if (std_reply != 0) {\\n            console.log(\\\"received an unusual reply for function with no output arguments\\\");\\n        }\\n    }\\n    async Resolve(name, obj) {\\n        let interface_idx = (arguments.length == 2 ? 0 : arguments[arguments.length - 1]);\\n        let buf = NPRPC.FlatBuffer.create();\\n        buf.prepare(168);\\n        buf.commit(40);\\n        buf.write_msg_id(0 /* FunctionCall */);\\n        buf.write_msg_type(0 /* Request */);\\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\\n        __ch.object_id = this.data.object_id;\\n        __ch.poa_idx = this.data.poa_idx;\\n        __ch.interface_idx = interface_idx;\\n        __ch.function_idx = 1;\\n        let _ = new Flat_nprpc_nameserver.nprpc_nameserver_M2_Direct(buf, 32);\\n        _._1 = name;\\n        buf.write_len(buf.size - 4);\\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\\n        let std_reply = NPRPC.handle_standart_reply(buf);\\n        if (std_reply != -1) {\\n            console.log(\\\"received an unusual reply for function with output arguments\\\");\\n            throw new NPRPC.Exception(\\\"Unknown Error\\\");\\n        }\\n        let out = new Flat_nprpc_nameserver.nprpc_nameserver_M3_Direct(buf, 16);\\n        obj.value = NPRPC.create_object_from_flat(out._2, this.data.ip4);\\n        let __ret_value /*boolean*/;\\n        __ret_value = out._1;\\n        return __ret_value;\\n    }\\n}\\nexports.Nameserver = Nameserver;\\n;\\nclass _INameserver_Servant extends NPRPC.ObjectServant {\\n    static _get_class() { return \\\"nprpc_nameserver/nprpc.Nameserver\\\"; }\\n    get_class = () => { return _INameserver_Servant._get_class(); };\\n    dispatch = (buf, remote_endpoint, from_parent) => {\\n        _INameserver_Servant._dispatch(this, buf, remote_endpoint, from_parent);\\n    };\\n    static _dispatch(obj, buf, remote_endpoint, from_parent) {\\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\\n        switch (__ch.function_idx) {\\n            case 0: {\\n                let ia = new Flat_nprpc_nameserver.nprpc_nameserver_M1_Direct(buf, 32);\\n                obj.Bind(NPRPC.create_object_from_flat(ia._1, remote_endpoint.ip4), ia._2);\\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\\n                break;\\n            }\\n            case 1: {\\n                let ia = new Flat_nprpc_nameserver.nprpc_nameserver_M2_Direct(buf, 32);\\n                let obuf = buf;\\n                obuf.consume(obuf.size);\\n                obuf.prepare(184);\\n                obuf.commit(56);\\n                let oa = new Flat_nprpc_nameserver.nprpc_nameserver_M3_Direct(obuf, 16);\\n                let __ret_val /*boolean*/;\\n                __ret_val = obj.Resolve(ia._1, oa._2);\\n                oa._1 = __ret_val;\\n                obuf.write_len(obuf.size - 4);\\n                obuf.write_msg_id(1 /* BlockResponse */);\\n                obuf.write_msg_type(1 /* Answer */);\\n                break;\\n            }\\n            default:\\n                NPRPC.make_simple_answer(buf, 9 /* Error_UnknownFunctionIdx */);\\n        }\\n    }\\n}\\nexports._INameserver_Servant = _INameserver_Servant;\\nvar Flat_nprpc_nameserver;\\n(function (Flat_nprpc_nameserver) {\\n    class nprpc_nameserver_M1_Direct extends NPRPC.Flat.Flat {\\n        get _1() { return new NPRPC.detail.Flat_nprpc_base.ObjectId_Direct(this.buffer, this.offset + 0); }\\n        get _2() {\\n            let enc = new TextDecoder(\\\"utf-8\\\");\\n            let v_begin = this.offset + 32;\\n            let data_offset = v_begin + this.buffer.dv.getUint32(v_begin, true);\\n            let bn = this.buffer.array_buffer.slice(data_offset, data_offset + this.buffer.dv.getUint32(v_begin + 4, true));\\n            return enc.decode(bn);\\n        }\\n        set _2(str) {\\n            let enc = new TextEncoder();\\n            let bytes = enc.encode(str);\\n            let len = bytes.length;\\n            let offset = NPRPC.Flat._alloc(this.buffer, this.offset + 32, len, 1, 1);\\n            new Uint8Array(this.buffer.array_buffer, offset).set(bytes);\\n        }\\n    }\\n    Flat_nprpc_nameserver.nprpc_nameserver_M1_Direct = nprpc_nameserver_M1_Direct;\\n})(Flat_nprpc_nameserver = exports.Flat_nprpc_nameserver || (exports.Flat_nprpc_nameserver = {})); // namespace Flat \\n(function (Flat_nprpc_nameserver) {\\n    class nprpc_nameserver_M2_Direct extends NPRPC.Flat.Flat {\\n        get _1() {\\n            let enc = new TextDecoder(\\\"utf-8\\\");\\n            let v_begin = this.offset + 0;\\n            let data_offset = v_begin + this.buffer.dv.getUint32(v_begin, true);\\n            let bn = this.buffer.array_buffer.slice(data_offset, data_offset + this.buffer.dv.getUint32(v_begin + 4, true));\\n            return enc.decode(bn);\\n        }\\n        set _1(str) {\\n            let enc = new TextEncoder();\\n            let bytes = enc.encode(str);\\n            let len = bytes.length;\\n            let offset = NPRPC.Flat._alloc(this.buffer, this.offset + 0, len, 1, 1);\\n            new Uint8Array(this.buffer.array_buffer, offset).set(bytes);\\n        }\\n    }\\n    Flat_nprpc_nameserver.nprpc_nameserver_M2_Direct = nprpc_nameserver_M2_Direct;\\n})(Flat_nprpc_nameserver = exports.Flat_nprpc_nameserver || (exports.Flat_nprpc_nameserver = {})); // namespace Flat \\n(function (Flat_nprpc_nameserver) {\\n    class nprpc_nameserver_M3_Direct extends NPRPC.Flat.Flat {\\n        get _1() { return (this.buffer.dv.getUint8(this.offset + 0) === 0x01); }\\n        set _1(value) { this.buffer.dv.setUint8(this.offset + 0, value === true ? 0x01 : 0x00); }\\n        get _2() { return new NPRPC.detail.Flat_nprpc_base.ObjectId_Direct(this.buffer, this.offset + 8); }\\n    }\\n    Flat_nprpc_nameserver.nprpc_nameserver_M3_Direct = nprpc_nameserver_M3_Direct;\\n})(Flat_nprpc_nameserver = exports.Flat_nprpc_nameserver || (exports.Flat_nprpc_nameserver = {})); // namespace Flat \\n\\n\\n//# sourceURL=webpack://nprpc_runtime/./src/nprpc_nameserver.ts?\");\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \tvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n/******/ \t\n/******/ \treturn __webpack_exports__;\n/******/ })()\n;\n});","import * as NPRPC from './nprpc';\nexport var Flat_npwebserver;\n(function (Flat_npwebserver) {\n    class WebItem_Direct extends NPRPC.Flat.Flat {\n        get name() {\n            let enc = new TextDecoder(\"utf-8\");\n            let v_begin = this.offset + 0;\n            let data_offset = v_begin + this.buffer.dv.getUint32(v_begin, true);\n            let bn = this.buffer.array_buffer.slice(data_offset, data_offset + this.buffer.dv.getUint32(v_begin + 4, true));\n            return enc.decode(bn);\n        }\n        set name(str) {\n            let enc = new TextEncoder();\n            let bytes = enc.encode(str);\n            let len = bytes.length;\n            let offset = NPRPC.Flat._alloc(this.buffer, this.offset + 0, len, 1, 1);\n            new Uint8Array(this.buffer.array_buffer, offset).set(bytes);\n        }\n        get description() {\n            let enc = new TextDecoder(\"utf-8\");\n            let v_begin = this.offset + 8;\n            let data_offset = v_begin + this.buffer.dv.getUint32(v_begin, true);\n            let bn = this.buffer.array_buffer.slice(data_offset, data_offset + this.buffer.dv.getUint32(v_begin + 4, true));\n            return enc.decode(bn);\n        }\n        set description(str) {\n            let enc = new TextEncoder();\n            let bytes = enc.encode(str);\n            let len = bytes.length;\n            let offset = NPRPC.Flat._alloc(this.buffer, this.offset + 8, len, 1, 1);\n            new Uint8Array(this.buffer.array_buffer, offset).set(bytes);\n        }\n        get path() {\n            let enc = new TextDecoder(\"utf-8\");\n            let v_begin = this.offset + 16;\n            let data_offset = v_begin + this.buffer.dv.getUint32(v_begin, true);\n            let bn = this.buffer.array_buffer.slice(data_offset, data_offset + this.buffer.dv.getUint32(v_begin + 4, true));\n            return enc.decode(bn);\n        }\n        set path(str) {\n            let enc = new TextEncoder();\n            let bytes = enc.encode(str);\n            let len = bytes.length;\n            let offset = NPRPC.Flat._alloc(this.buffer, this.offset + 16, len, 1, 1);\n            new Uint8Array(this.buffer.array_buffer, offset).set(bytes);\n        }\n        get dev_addr() { return this.buffer.dv.getUint8(this.offset + 24); }\n        set dev_addr(value) { this.buffer.dv.setUint8(this.offset + 24, value); }\n        get mem_addr() { return this.buffer.dv.getUint16(this.offset + 26, true); }\n        set mem_addr(value) { this.buffer.dv.setUint16(this.offset + 26, value, true); }\n        get type() { return this.buffer.dv.getUint32(this.offset + 28, true); }\n        set type(value) { this.buffer.dv.setUint32(this.offset + 28, value, true); }\n    }\n    Flat_npwebserver.WebItem_Direct = WebItem_Direct;\n})(Flat_npwebserver || (Flat_npwebserver = {})); // namespace Flat \n(function (Flat_npwebserver) {\n    class WebCategory_Direct extends NPRPC.Flat.Flat {\n        get name() {\n            let enc = new TextDecoder(\"utf-8\");\n            let v_begin = this.offset + 0;\n            let data_offset = v_begin + this.buffer.dv.getUint32(v_begin, true);\n            let bn = this.buffer.array_buffer.slice(data_offset, data_offset + this.buffer.dv.getUint32(v_begin + 4, true));\n            return enc.decode(bn);\n        }\n        set name(str) {\n            let enc = new TextEncoder();\n            let bytes = enc.encode(str);\n            let len = bytes.length;\n            let offset = NPRPC.Flat._alloc(this.buffer, this.offset + 0, len, 1, 1);\n            new Uint8Array(this.buffer.array_buffer, offset).set(bytes);\n        }\n        items(elements_size) {\n            NPRPC.Flat._alloc(this.buffer, this.offset + 8, elements_size, 32, 4);\n        }\n        items_vd() { return new NPRPC.Flat.Vector_Direct2(this.buffer, this.offset + 8, 32, Flat_npwebserver.WebItem_Direct); }\n    }\n    Flat_npwebserver.WebCategory_Direct = WebCategory_Direct;\n})(Flat_npwebserver || (Flat_npwebserver = {})); // namespace Flat \nexport class WebServer extends NPRPC.ObjectProxy {\n    static get servant_t() {\n        return _IWebServer_Servant;\n    }\n    async get_web_categories(cats) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(32);\n        buf.commit(32);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 0;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != -1) {\n            console.log(\"received an unusual reply for function with output arguments\");\n            throw new NPRPC.Exception(\"Unknown Error\");\n        }\n        let out = new Flat_npwebserver.npwebserver_M1_Direct(buf, 16);\n        {\n            let vv = out._1_vd(), index_0 = 0;\n            cats.length = vv.elements_size;\n            for (let e of vv) {\n                cats[index_0] = new Object();\n                cats[index_0] = new Object();\n                cats[index_0].name = e.name;\n                {\n                    let vv = e.items_vd(), index_1 = 0;\n                    cats[index_0].items = new Array(vv.elements_size);\n                    for (let e of vv) {\n                        cats[index_0].items[index_1] = new Object();\n                        cats[index_0].items[index_1] = new Object();\n                        cats[index_0].items[index_1].name = e.name;\n                        cats[index_0].items[index_1].description = e.description;\n                        cats[index_0].items[index_1].path = e.path;\n                        cats[index_0].items[index_1].dev_addr = e.dev_addr;\n                        cats[index_0].items[index_1].mem_addr = e.mem_addr;\n                        cats[index_0].items[index_1].type = e.type;\n                        ++index_1;\n                    }\n                }\n                ++index_0;\n            }\n        }\n    }\n}\n;\nexport class _IWebServer_Servant extends NPRPC.ObjectServant {\n    static _get_class() { return \"npwebserver/npwebserver.WebServer\"; }\n    get_class = () => { return _IWebServer_Servant._get_class(); };\n    dispatch = (buf, remote_endpoint, from_parent) => {\n        _IWebServer_Servant._dispatch(this, buf, remote_endpoint, from_parent);\n    };\n    static _dispatch(obj, buf, remote_endpoint, from_parent) {\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        switch (__ch.function_idx) {\n            case 0: {\n                let obuf = buf;\n                obuf.consume(obuf.size);\n                obuf.prepare(152);\n                obuf.commit(24);\n                let oa = new Flat_npwebserver.npwebserver_M1_Direct(obuf, 16);\n                obj.get_web_categories(oa._1_vd);\n                obuf.write_len(obuf.size - 4);\n                obuf.write_msg_id(1 /* BlockResponse */);\n                obuf.write_msg_type(1 /* Answer */);\n                break;\n            }\n            default:\n                NPRPC.make_simple_answer(buf, 9 /* Error_UnknownFunctionIdx */);\n        }\n    }\n}\n(function (Flat_npwebserver) {\n    class npwebserver_M1_Direct extends NPRPC.Flat.Flat {\n        _1(elements_size) {\n            NPRPC.Flat._alloc(this.buffer, this.offset + 0, elements_size, 16, 4);\n        }\n        _1_vd() { return new NPRPC.Flat.Vector_Direct2(this.buffer, this.offset + 0, 16, Flat_npwebserver.WebCategory_Direct); }\n    }\n    Flat_npwebserver.npwebserver_M1_Direct = npwebserver_M1_Direct;\n})(Flat_npwebserver || (Flat_npwebserver = {})); // namespace Flat \n","import * as NPRPC from './nprpc';\nexport class NPNetCommunicationError extends NPRPC.Exception {\n    code;\n    constructor(code /*i32*/) {\n        super(\"NPNetCommunicationError\");\n        this.code = code;\n    }\n}\nexport var Flat_server;\n(function (Flat_server) {\n    class NPNetCommunicationError_Direct extends NPRPC.Flat.Flat {\n        get __ex_id() { return this.buffer.dv.getUint32(this.offset + 0, true); }\n        set __ex_id(value) { this.buffer.dv.setUint32(this.offset + 0, value, true); }\n        get code() { return this.buffer.dv.getInt32(this.offset + 4, true); }\n        set code(value) { this.buffer.dv.setInt32(this.offset + 4, value, true); }\n    }\n    Flat_server.NPNetCommunicationError_Direct = NPNetCommunicationError_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_value_Direct extends NPRPC.Flat.Flat {\n        get h() { return this.buffer.dv.getBigUint64(this.offset + 0, true); }\n        set h(value) { this.buffer.dv.setBigUint64(this.offset + 0, value, true); }\n        get s() { return this.buffer.dv.getUint32(this.offset + 8, true); }\n        set s(value) { this.buffer.dv.setUint32(this.offset + 8, value, true); }\n        data_vd() { return new NPRPC.Flat.Array_Direct1_u8(this.buffer, this.offset + 12, 8); }\n    }\n    Flat_server.server_value_Direct = server_value_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class RawDataDef_Direct extends NPRPC.Flat.Flat {\n        get dev_addr() { return this.buffer.dv.getUint8(this.offset + 0); }\n        set dev_addr(value) { this.buffer.dv.setUint8(this.offset + 0, value); }\n        get address() { return this.buffer.dv.getUint16(this.offset + 2, true); }\n        set address(value) { this.buffer.dv.setUint16(this.offset + 2, value, true); }\n        get size() { return this.buffer.dv.getUint8(this.offset + 4); }\n        set size(value) { this.buffer.dv.setUint8(this.offset + 4, value); }\n    }\n    Flat_server.RawDataDef_Direct = RawDataDef_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class DataDef_Direct extends NPRPC.Flat.Flat {\n        get dev_addr() { return this.buffer.dv.getUint8(this.offset + 0); }\n        set dev_addr(value) { this.buffer.dv.setUint8(this.offset + 0, value); }\n        get mem_addr() { return this.buffer.dv.getUint16(this.offset + 2, true); }\n        set mem_addr(value) { this.buffer.dv.setUint16(this.offset + 2, value, true); }\n        get type() { return this.buffer.dv.getUint32(this.offset + 4, true); }\n        set type(value) { this.buffer.dv.setUint32(this.offset + 4, value, true); }\n    }\n    Flat_server.DataDef_Direct = DataDef_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \nexport class Pingable extends NPRPC.ObjectProxy {\n    static get servant_t() {\n        return _IPingable_Servant;\n    }\n    async Ping() {\n        let interface_idx = (arguments.length == 0 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(32);\n        buf.commit(32);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 0;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n}\n;\nexport class _IPingable_Servant extends NPRPC.ObjectServant {\n    static _get_class() { return \"server/nps.Pingable\"; }\n    get_class = () => { return _IPingable_Servant._get_class(); };\n    dispatch = (buf, remote_endpoint, from_parent) => {\n        _IPingable_Servant._dispatch(this, buf, remote_endpoint, from_parent);\n    };\n    static _dispatch(obj, buf, remote_endpoint, from_parent) {\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        switch (__ch.function_idx) {\n            case 0: {\n                obj.Ping();\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            default:\n                NPRPC.make_simple_answer(buf, 9 /* Error_UnknownFunctionIdx */);\n        }\n    }\n}\nexport class DataCallBack extends NPRPC.ObjectProxy {\n    static get servant_t() {\n        return _IDataCallBack_Servant;\n    }\n    // Pingable\n    async Ping() {\n        Pingable.prototype.Ping.bind(this, 1)();\n    }\n    async OnDataChanged(a) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(168);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 0;\n        let _ = new Flat_server.server_M1_Direct(buf, 32);\n        _._1(a.length);\n        {\n            let vv = _._1_vd(), index = 0;\n            for (let e of vv) {\n                e.h = a[index].h;\n                e.s = a[index].s;\n                e.data_vd().copy_from_ts_array(a[index].data);\n                ++index;\n            }\n        }\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n}\n;\nexport class _IDataCallBack_Servant extends NPRPC.ObjectServant {\n    static _get_class() { return \"server/nps.DataCallBack\"; }\n    get_class = () => { return _IDataCallBack_Servant._get_class(); };\n    dispatch = (buf, remote_endpoint, from_parent) => {\n        _IDataCallBack_Servant._dispatch(this, buf, remote_endpoint, from_parent);\n    };\n    static _dispatch(obj, buf, remote_endpoint, from_parent) {\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        if (from_parent == false) {\n            switch (__ch.interface_idx) {\n                case 0:\n                    break;\n                case 1:\n                    _IPingable_Servant._dispatch(obj, buf, remote_endpoint, true);\n                    return;\n                default:\n                    throw \"unknown interface\";\n            }\n        }\n        switch (__ch.function_idx) {\n            case 0: {\n                let ia = new Flat_server.server_M1_Direct(buf, 32);\n                obj.OnDataChanged(ia._1_vd());\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            default:\n                NPRPC.make_simple_answer(buf, 9 /* Error_UnknownFunctionIdx */);\n        }\n    }\n}\nexport class ItemManager extends NPRPC.ObjectProxy {\n    static get servant_t() {\n        return _IItemManager_Servant;\n    }\n    // Pingable\n    async Ping() {\n        Pingable.prototype.Ping.bind(this, 1)();\n    }\n    async Activate(client) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(192);\n        buf.commit(64);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 0;\n        let _ = new Flat_server.server_M2_Direct(buf, 32);\n        _._1.object_id = client.object_id;\n        _._1.ip4 = client.ip4;\n        _._1.port = client.port;\n        _._1.websocket_port = client.websocket_port;\n        _._1.poa_idx = client.poa_idx;\n        _._1.flags = client.flags;\n        _._1.class_id = client.class_id;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async Advise(a, h) {\n        let interface_idx = (arguments.length == 2 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(168);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 1;\n        let _ = new Flat_server.server_M3_Direct(buf, 32);\n        _._1(a.length);\n        {\n            let vv = _._1_vd(), index = 0;\n            for (let e of vv) {\n                e.dev_addr = a[index].dev_addr;\n                e.mem_addr = a[index].mem_addr;\n                e.type = a[index].type;\n                ++index;\n            }\n        }\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != -1) {\n            console.log(\"received an unusual reply for function with output arguments\");\n            throw new NPRPC.Exception(\"Unknown Error\");\n        }\n        let out = new Flat_server.server_M4_Direct(buf, 16);\n        {\n            let vv = out._1_vd(), index_0 = 0;\n            h.length = vv.elements_size;\n            for (let e of vv) {\n                h[index_0] = e;\n                ++index_0;\n            }\n        }\n    }\n    async UnAdvise(a) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(168);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 2;\n        let _ = new Flat_server.server_M4_Direct(buf, 32);\n        _._1(a.length);\n        _._1_vd().copy_from_ts_array(a);\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n}\n;\nexport class _IItemManager_Servant extends NPRPC.ObjectServant {\n    static _get_class() { return \"server/nps.ItemManager\"; }\n    get_class = () => { return _IItemManager_Servant._get_class(); };\n    dispatch = (buf, remote_endpoint, from_parent) => {\n        _IItemManager_Servant._dispatch(this, buf, remote_endpoint, from_parent);\n    };\n    static _dispatch(obj, buf, remote_endpoint, from_parent) {\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        if (from_parent == false) {\n            switch (__ch.interface_idx) {\n                case 0:\n                    break;\n                case 1:\n                    _IPingable_Servant._dispatch(obj, buf, remote_endpoint, true);\n                    return;\n                default:\n                    throw \"unknown interface\";\n            }\n        }\n        switch (__ch.function_idx) {\n            case 0: {\n                let ia = new Flat_server.server_M2_Direct(buf, 32);\n                obj.Activate(NPRPC.create_object_from_flat(ia._1, remote_endpoint.ip4));\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 1: {\n                let ia = new Flat_server.server_M3_Direct(buf, 32);\n                let obuf = buf;\n                obuf.consume(obuf.size);\n                obuf.prepare(152);\n                obuf.commit(24);\n                let oa = new Flat_server.server_M4_Direct(obuf, 16);\n                try {\n                    obj.Advise(ia._1_vd(), oa._1_vd);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                obuf.write_len(obuf.size - 4);\n                obuf.write_msg_id(1 /* BlockResponse */);\n                obuf.write_msg_type(1 /* Answer */);\n                break;\n            }\n            case 2: {\n                let ia = new Flat_server.server_M4_Direct(buf, 32);\n                obj.UnAdvise(ia._1_vd());\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            default:\n                NPRPC.make_simple_answer(buf, 9 /* Error_UnknownFunctionIdx */);\n        }\n    }\n}\nexport class Server extends NPRPC.ObjectProxy {\n    static get servant_t() {\n        return _IServer_Servant;\n    }\n    // Pingable\n    async Ping() {\n        Pingable.prototype.Ping.bind(this, 1)();\n    }\n    async GetNetworkStatus(network_status) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(32);\n        buf.commit(32);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 0;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != -1) {\n            console.log(\"received an unusual reply for function with output arguments\");\n            throw new NPRPC.Exception(\"Unknown Error\");\n        }\n        let out = new Flat_server.server_M5_Direct(buf, 16);\n        {\n            let vv = out._1_vd(), index_1 = 0;\n            network_status.length = vv.elements_size;\n            for (let e of vv) {\n                network_status[index_1] = e;\n                ++index_1;\n            }\n        }\n    }\n    async CreateItemManager(im) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(32);\n        buf.commit(32);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 1;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != -1) {\n            console.log(\"received an unusual reply for function with output arguments\");\n            throw new NPRPC.Exception(\"Unknown Error\");\n        }\n        let out = new Flat_server.server_M2_Direct(buf, 16);\n        im.value = NPRPC.create_object_from_flat(out._1, this.data.ip4);\n    }\n    async SendRawData(data) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(168);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 2;\n        let _ = new Flat_server.server_M5_Direct(buf, 32);\n        _._1(data.length);\n        _._1_vd().copy_from_ts_array(data);\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async Write_1(dev_addr, mem_addr, bit, value) {\n        let interface_idx = (arguments.length == 4 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(38);\n        buf.commit(38);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 3;\n        let _ = new Flat_server.server_M6_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = mem_addr;\n        _._3 = bit;\n        _._4 = value;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async Write_q1(dev_addr, mem_addr, bit, value, qvalue) {\n        let interface_idx = (arguments.length == 5 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(40);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 4;\n        let _ = new Flat_server.server_M7_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = mem_addr;\n        _._3 = bit;\n        _._4 = value;\n        _._5 = qvalue;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async Write_8(dev_addr, mem_addr, value) {\n        let interface_idx = (arguments.length == 3 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(38);\n        buf.commit(38);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 5;\n        let _ = new Flat_server.server_M8_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = mem_addr;\n        _._3 = value;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async Write_q8(dev_addr, mem_addr, value, qvalue) {\n        let interface_idx = (arguments.length == 4 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(38);\n        buf.commit(38);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 6;\n        let _ = new Flat_server.server_M6_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = mem_addr;\n        _._3 = value;\n        _._4 = qvalue;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async Write_16(dev_addr, mem_addr, value) {\n        let interface_idx = (arguments.length == 3 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(38);\n        buf.commit(38);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 7;\n        let _ = new Flat_server.server_M9_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = mem_addr;\n        _._3 = value;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async Write_q16(dev_addr, mem_addr, value, qvalue) {\n        let interface_idx = (arguments.length == 4 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(40);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 8;\n        let _ = new Flat_server.server_M10_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = mem_addr;\n        _._3 = value;\n        _._4 = qvalue;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async Write_32(dev_addr, mem_addr, value) {\n        let interface_idx = (arguments.length == 3 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(40);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 9;\n        let _ = new Flat_server.server_M11_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = mem_addr;\n        _._3 = value;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async Write_q32(dev_addr, mem_addr, value, qvalue) {\n        let interface_idx = (arguments.length == 4 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(44);\n        buf.commit(44);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 10;\n        let _ = new Flat_server.server_M12_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = mem_addr;\n        _._3 = value;\n        _._4 = qvalue;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async WriteBlock(dev_addr, mem_addr, data) {\n        let interface_idx = (arguments.length == 3 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(172);\n        buf.commit(44);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 11;\n        let _ = new Flat_server.server_M13_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = mem_addr;\n        _._3(data.length);\n        _._3_vd().copy_from_ts_array(data);\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async ReadByte(dev_addr, addr, value) {\n        let interface_idx = (arguments.length == 3 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(36);\n        buf.commit(36);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 12;\n        let _ = new Flat_server.server_M14_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = addr;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != -1) {\n            console.log(\"received an unusual reply for function with output arguments\");\n            throw new NPRPC.Exception(\"Unknown Error\");\n        }\n        let out = new Flat_server.server_M15_Direct(buf, 16);\n        value.value = out._1;\n    }\n    async ReadBlock(dev_addr, addr, len, data) {\n        let interface_idx = (arguments.length == 4 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(38);\n        buf.commit(38);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 13;\n        let _ = new Flat_server.server_M8_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = addr;\n        _._3 = len;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != -1) {\n            console.log(\"received an unusual reply for function with output arguments\");\n            throw new NPRPC.Exception(\"Unknown Error\");\n        }\n        let out = new Flat_server.server_M5_Direct(buf, 16);\n        {\n            let vv = out._1_vd(), index_2 = 0;\n            data.length = vv.elements_size;\n            for (let e of vv) {\n                data[index_2] = e;\n                ++index_2;\n            }\n        }\n    }\n    async AVR_StopAlgorithm(dev_addr, alg_addr) {\n        let interface_idx = (arguments.length == 2 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(36);\n        buf.commit(36);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 14;\n        let _ = new Flat_server.server_M14_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = alg_addr;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != -1) {\n            console.log(\"received an unusual reply for function with output arguments\");\n            throw new NPRPC.Exception(\"Unknown Error\");\n        }\n        let out = new Flat_server.server_M16_Direct(buf, 16);\n        let __ret_value /*boolean*/;\n        __ret_value = out._1;\n        return __ret_value;\n    }\n    async AVR_ReinitIO(dev_addr) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(33);\n        buf.commit(33);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 15;\n        let _ = new Flat_server.server_M15_Direct(buf, 32);\n        _._1 = dev_addr;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async AVR_SendRemoteData(dev_addr, page_num, data) {\n        let interface_idx = (arguments.length == 3 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(172);\n        buf.commit(44);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 16;\n        let _ = new Flat_server.server_M13_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = page_num;\n        _._3(data.length);\n        _._3_vd().copy_from_ts_array(data);\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async AVR_SendPage(dev_addr, page_num, data) {\n        let interface_idx = (arguments.length == 3 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(172);\n        buf.commit(44);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 17;\n        let _ = new Flat_server.server_M17_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = page_num;\n        _._3(data.length);\n        _._3_vd().copy_from_ts_array(data);\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async AVR_RemoveAlgorithm(dev_addr, alg_addr) {\n        let interface_idx = (arguments.length == 2 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(36);\n        buf.commit(36);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 18;\n        let _ = new Flat_server.server_M14_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = alg_addr;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async AVR_ReplaceAlgorithm(dev_addr, old_addr, new_addr) {\n        let interface_idx = (arguments.length == 3 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(38);\n        buf.commit(38);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 19;\n        let _ = new Flat_server.server_M9_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = old_addr;\n        _._3 = new_addr;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async AVR_WriteEeprom(dev_addr, mem_addr, data) {\n        let interface_idx = (arguments.length == 3 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(172);\n        buf.commit(44);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 20;\n        let _ = new Flat_server.server_M13_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = mem_addr;\n        _._3(data.length);\n        _._3_vd().copy_from_ts_array(data);\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async AVR_WriteTwiTable(dev_addr, page_num, data) {\n        let interface_idx = (arguments.length == 3 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(172);\n        buf.commit(44);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 21;\n        let _ = new Flat_server.server_M17_Direct(buf, 32);\n        _._1 = dev_addr;\n        _._2 = page_num;\n        _._3(data.length);\n        _._3_vd().copy_from_ts_array(data);\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async AVR_V_GetFlash(device_id, data) {\n        let interface_idx = (arguments.length == 2 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(40);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 22;\n        let _ = new Flat_server.server_M18_Direct(buf, 32);\n        _._1 = device_id;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != -1) {\n            console.log(\"received an unusual reply for function with output arguments\");\n            throw new NPRPC.Exception(\"Unknown Error\");\n        }\n        let out = new Flat_server.server_M19_Direct(buf, 16);\n        {\n            let vv = out._1_vd(), index_3 = 0;\n            data.length = vv.elements_size;\n            for (let e of vv) {\n                data[index_3] = e;\n                ++index_3;\n            }\n        }\n    }\n    async AVR_V_StoreFlash(device_id) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(40);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 23;\n        let _ = new Flat_server.server_M18_Direct(buf, 32);\n        _._1 = device_id;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply == 1) {\n            server_throw_exception(buf);\n        }\n        if (std_reply != -1) {\n            console.log(\"received an unusual reply for function with output arguments\");\n            throw new NPRPC.Exception(\"Unknown Error\");\n        }\n        let out = new Flat_server.server_M16_Direct(buf, 16);\n        let __ret_value /*boolean*/;\n        __ret_value = out._1;\n        return __ret_value;\n    }\n    async Notify_DeviceActivated(device_id) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(40);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 24;\n        let _ = new Flat_server.server_M18_Direct(buf, 32);\n        _._1 = device_id;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != -1) {\n            console.log(\"received an unusual reply for function with output arguments\");\n            throw new NPRPC.Exception(\"Unknown Error\");\n        }\n        let out = new Flat_server.server_M16_Direct(buf, 16);\n        let __ret_value /*boolean*/;\n        __ret_value = out._1;\n        return __ret_value;\n    }\n    async Notify_DeviceDeactivated(device_id) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(40);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 25;\n        let _ = new Flat_server.server_M18_Direct(buf, 32);\n        _._1 = device_id;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != -1) {\n            console.log(\"received an unusual reply for function with output arguments\");\n            throw new NPRPC.Exception(\"Unknown Error\");\n        }\n        let out = new Flat_server.server_M16_Direct(buf, 16);\n        let __ret_value /*boolean*/;\n        __ret_value = out._1;\n        return __ret_value;\n    }\n    async Notify_ParameterRemoved(param_id) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(40);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 26;\n        let _ = new Flat_server.server_M18_Direct(buf, 32);\n        _._1 = param_id;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async Notify_TypeOrVariableChanged(param_id) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(40);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 27;\n        let _ = new Flat_server.server_M18_Direct(buf, 32);\n        _._1 = param_id;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async History_AddParameter(param_id) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(40);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 28;\n        let _ = new Flat_server.server_M18_Direct(buf, 32);\n        _._1 = param_id;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n    async History_RemoveParameter(param_id) {\n        let interface_idx = (arguments.length == 1 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(40);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 29;\n        let _ = new Flat_server.server_M18_Direct(buf, 32);\n        _._1 = param_id;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != 0) {\n            console.log(\"received an unusual reply for function with no output arguments\");\n        }\n    }\n}\n;\nexport class _IServer_Servant extends NPRPC.ObjectServant {\n    static _get_class() { return \"server/nps.Server\"; }\n    get_class = () => { return _IServer_Servant._get_class(); };\n    dispatch = (buf, remote_endpoint, from_parent) => {\n        _IServer_Servant._dispatch(this, buf, remote_endpoint, from_parent);\n    };\n    static _dispatch(obj, buf, remote_endpoint, from_parent) {\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        if (from_parent == false) {\n            switch (__ch.interface_idx) {\n                case 0:\n                    break;\n                case 1:\n                    _IPingable_Servant._dispatch(obj, buf, remote_endpoint, true);\n                    return;\n                default:\n                    throw \"unknown interface\";\n            }\n        }\n        switch (__ch.function_idx) {\n            case 0: {\n                let obuf = buf;\n                obuf.consume(obuf.size);\n                obuf.prepare(152);\n                obuf.commit(24);\n                let oa = new Flat_server.server_M5_Direct(obuf, 16);\n                obj.GetNetworkStatus(oa._1_vd);\n                obuf.write_len(obuf.size - 4);\n                obuf.write_msg_id(1 /* BlockResponse */);\n                obuf.write_msg_type(1 /* Answer */);\n                break;\n            }\n            case 1: {\n                let obuf = buf;\n                obuf.consume(obuf.size);\n                obuf.prepare(176);\n                obuf.commit(48);\n                let oa = new Flat_server.server_M2_Direct(obuf, 16);\n                obj.CreateItemManager(oa._1);\n                obuf.write_len(obuf.size - 4);\n                obuf.write_msg_id(1 /* BlockResponse */);\n                obuf.write_msg_type(1 /* Answer */);\n                break;\n            }\n            case 2: {\n                let ia = new Flat_server.server_M5_Direct(buf, 32);\n                try {\n                    obj.SendRawData(ia._1_vd());\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 3: {\n                let ia = new Flat_server.server_M6_Direct(buf, 32);\n                try {\n                    obj.Write_1(ia._1, ia._2, ia._3, ia._4);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 4: {\n                let ia = new Flat_server.server_M7_Direct(buf, 32);\n                try {\n                    obj.Write_q1(ia._1, ia._2, ia._3, ia._4, ia._5);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 5: {\n                let ia = new Flat_server.server_M8_Direct(buf, 32);\n                try {\n                    obj.Write_8(ia._1, ia._2, ia._3);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 6: {\n                let ia = new Flat_server.server_M6_Direct(buf, 32);\n                try {\n                    obj.Write_q8(ia._1, ia._2, ia._3, ia._4);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 7: {\n                let ia = new Flat_server.server_M9_Direct(buf, 32);\n                try {\n                    obj.Write_16(ia._1, ia._2, ia._3);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 8: {\n                let ia = new Flat_server.server_M10_Direct(buf, 32);\n                try {\n                    obj.Write_q16(ia._1, ia._2, ia._3, ia._4);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 9: {\n                let ia = new Flat_server.server_M11_Direct(buf, 32);\n                try {\n                    obj.Write_32(ia._1, ia._2, ia._3);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 10: {\n                let ia = new Flat_server.server_M12_Direct(buf, 32);\n                try {\n                    obj.Write_q32(ia._1, ia._2, ia._3, ia._4);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 11: {\n                let ia = new Flat_server.server_M13_Direct(buf, 32);\n                try {\n                    obj.WriteBlock(ia._1, ia._2, ia._3_vd());\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 12: {\n                let _out_1 /*u8*/;\n                let ia = new Flat_server.server_M14_Direct(buf, 32);\n                try {\n                    obj.ReadByte(ia._1, ia._2, _out_1);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                let obuf = buf;\n                obuf.consume(obuf.size);\n                obuf.prepare(17);\n                obuf.commit(17);\n                let oa = new Flat_server.server_M15_Direct(obuf, 16);\n                oa._1 = _out_1;\n                obuf.write_len(obuf.size - 4);\n                obuf.write_msg_id(1 /* BlockResponse */);\n                obuf.write_msg_type(1 /* Answer */);\n                break;\n            }\n            case 13: {\n                let ia = new Flat_server.server_M8_Direct(buf, 32);\n                let obuf = buf;\n                obuf.consume(obuf.size);\n                obuf.prepare(152);\n                obuf.commit(24);\n                let oa = new Flat_server.server_M5_Direct(obuf, 16);\n                try {\n                    obj.ReadBlock(ia._1, ia._2, ia._3, oa._1_vd);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                obuf.write_len(obuf.size - 4);\n                obuf.write_msg_id(1 /* BlockResponse */);\n                obuf.write_msg_type(1 /* Answer */);\n                break;\n            }\n            case 14: {\n                let ia = new Flat_server.server_M14_Direct(buf, 32);\n                let __ret_val /*boolean*/;\n                try {\n                    __ret_val = obj.AVR_StopAlgorithm(ia._1, ia._2);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                let obuf = buf;\n                obuf.consume(obuf.size);\n                obuf.prepare(17);\n                obuf.commit(17);\n                let oa = new Flat_server.server_M16_Direct(obuf, 16);\n                oa._1 = __ret_val;\n                obuf.write_len(obuf.size - 4);\n                obuf.write_msg_id(1 /* BlockResponse */);\n                obuf.write_msg_type(1 /* Answer */);\n                break;\n            }\n            case 15: {\n                let ia = new Flat_server.server_M15_Direct(buf, 32);\n                try {\n                    obj.AVR_ReinitIO(ia._1);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 16: {\n                let ia = new Flat_server.server_M13_Direct(buf, 32);\n                try {\n                    obj.AVR_SendRemoteData(ia._1, ia._2, ia._3_vd());\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 17: {\n                let ia = new Flat_server.server_M17_Direct(buf, 32);\n                try {\n                    obj.AVR_SendPage(ia._1, ia._2, ia._3_vd());\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 18: {\n                let ia = new Flat_server.server_M14_Direct(buf, 32);\n                try {\n                    obj.AVR_RemoveAlgorithm(ia._1, ia._2);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 19: {\n                let ia = new Flat_server.server_M9_Direct(buf, 32);\n                try {\n                    obj.AVR_ReplaceAlgorithm(ia._1, ia._2, ia._3);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 20: {\n                let ia = new Flat_server.server_M13_Direct(buf, 32);\n                try {\n                    obj.AVR_WriteEeprom(ia._1, ia._2, ia._3_vd());\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 21: {\n                let ia = new Flat_server.server_M17_Direct(buf, 32);\n                try {\n                    obj.AVR_WriteTwiTable(ia._1, ia._2, ia._3_vd());\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 22: {\n                let ia = new Flat_server.server_M18_Direct(buf, 32);\n                let obuf = buf;\n                obuf.consume(obuf.size);\n                obuf.prepare(152);\n                obuf.commit(24);\n                let oa = new Flat_server.server_M19_Direct(obuf, 16);\n                try {\n                    obj.AVR_V_GetFlash(ia._1, oa._1_vd);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                obuf.write_len(obuf.size - 4);\n                obuf.write_msg_id(1 /* BlockResponse */);\n                obuf.write_msg_type(1 /* Answer */);\n                break;\n            }\n            case 23: {\n                let ia = new Flat_server.server_M18_Direct(buf, 32);\n                let __ret_val /*boolean*/;\n                try {\n                    __ret_val = obj.AVR_V_StoreFlash(ia._1);\n                }\n                catch (e) {\n                    let obuf = buf;\n                    obuf.consume(obuf.size);\n                    obuf.prepare(24);\n                    obuf.commit(24);\n                    let oa = new Flat_server.NPNetCommunicationError_Direct(obuf, 16);\n                    oa.__ex_id = 0;\n                    oa.code = e.code;\n                    obuf.write_len(obuf.size - 4);\n                    obuf.write_msg_id(5 /* Exception */);\n                    obuf.write_msg_type(1 /* Answer */);\n                    return;\n                }\n                let obuf = buf;\n                obuf.consume(obuf.size);\n                obuf.prepare(17);\n                obuf.commit(17);\n                let oa = new Flat_server.server_M16_Direct(obuf, 16);\n                oa._1 = __ret_val;\n                obuf.write_len(obuf.size - 4);\n                obuf.write_msg_id(1 /* BlockResponse */);\n                obuf.write_msg_type(1 /* Answer */);\n                break;\n            }\n            case 24: {\n                let ia = new Flat_server.server_M18_Direct(buf, 32);\n                let __ret_val /*boolean*/;\n                __ret_val = obj.Notify_DeviceActivated(ia._1);\n                let obuf = buf;\n                obuf.consume(obuf.size);\n                obuf.prepare(17);\n                obuf.commit(17);\n                let oa = new Flat_server.server_M16_Direct(obuf, 16);\n                oa._1 = __ret_val;\n                obuf.write_len(obuf.size - 4);\n                obuf.write_msg_id(1 /* BlockResponse */);\n                obuf.write_msg_type(1 /* Answer */);\n                break;\n            }\n            case 25: {\n                let ia = new Flat_server.server_M18_Direct(buf, 32);\n                let __ret_val /*boolean*/;\n                __ret_val = obj.Notify_DeviceDeactivated(ia._1);\n                let obuf = buf;\n                obuf.consume(obuf.size);\n                obuf.prepare(17);\n                obuf.commit(17);\n                let oa = new Flat_server.server_M16_Direct(obuf, 16);\n                oa._1 = __ret_val;\n                obuf.write_len(obuf.size - 4);\n                obuf.write_msg_id(1 /* BlockResponse */);\n                obuf.write_msg_type(1 /* Answer */);\n                break;\n            }\n            case 26: {\n                let ia = new Flat_server.server_M18_Direct(buf, 32);\n                obj.Notify_ParameterRemoved(ia._1);\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 27: {\n                let ia = new Flat_server.server_M18_Direct(buf, 32);\n                obj.Notify_TypeOrVariableChanged(ia._1);\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 28: {\n                let ia = new Flat_server.server_M18_Direct(buf, 32);\n                obj.History_AddParameter(ia._1);\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 29: {\n                let ia = new Flat_server.server_M18_Direct(buf, 32);\n                obj.History_RemoveParameter(ia._1);\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            default:\n                NPRPC.make_simple_answer(buf, 9 /* Error_UnknownFunctionIdx */);\n        }\n    }\n}\nfunction server_throw_exception(buf) {\n    switch (buf.read_exception_number()) {\n        case 0:\n            {\n                let ex_flat = new Flat_server.NPNetCommunicationError_Direct(buf, 16);\n                let ex = new NPNetCommunicationError();\n                ex.code = ex_flat.code;\n                throw ex;\n            }\n        default:\n            throw \"unknown rpc exception\";\n    }\n}\n(function (Flat_server) {\n    class server_M1_Direct extends NPRPC.Flat.Flat {\n        _1(elements_size) {\n            NPRPC.Flat._alloc(this.buffer, this.offset + 0, elements_size, 24, 8);\n        }\n        _1_vd() { return new NPRPC.Flat.Vector_Direct2(this.buffer, this.offset + 0, 24, Flat_server.server_value_Direct); }\n    }\n    Flat_server.server_M1_Direct = server_M1_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M2_Direct extends NPRPC.Flat.Flat {\n        get _1() { return new NPRPC.detail.Flat_nprpc_base.ObjectId_Direct(this.buffer, this.offset + 0); }\n    }\n    Flat_server.server_M2_Direct = server_M2_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M3_Direct extends NPRPC.Flat.Flat {\n        _1(elements_size) {\n            NPRPC.Flat._alloc(this.buffer, this.offset + 0, elements_size, 8, 4);\n        }\n        _1_vd() { return new NPRPC.Flat.Vector_Direct2(this.buffer, this.offset + 0, 8, Flat_server.DataDef_Direct); }\n    }\n    Flat_server.server_M3_Direct = server_M3_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M4_Direct extends NPRPC.Flat.Flat {\n        _1(elements_size) {\n            NPRPC.Flat._alloc(this.buffer, this.offset + 0, elements_size, 8, 8);\n        }\n        _1_vd() { return new NPRPC.Flat.Vector_Direct1_u64(this.buffer, this.offset + 0); }\n    }\n    Flat_server.server_M4_Direct = server_M4_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M5_Direct extends NPRPC.Flat.Flat {\n        _1(elements_size) {\n            NPRPC.Flat._alloc(this.buffer, this.offset + 0, elements_size, 1, 1);\n        }\n        _1_vd() { return new NPRPC.Flat.Vector_Direct1_u8(this.buffer, this.offset + 0); }\n    }\n    Flat_server.server_M5_Direct = server_M5_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M6_Direct extends NPRPC.Flat.Flat {\n        get _1() { return this.buffer.dv.getUint8(this.offset + 0); }\n        set _1(value) { this.buffer.dv.setUint8(this.offset + 0, value); }\n        get _2() { return this.buffer.dv.getUint16(this.offset + 2, true); }\n        set _2(value) { this.buffer.dv.setUint16(this.offset + 2, value, true); }\n        get _3() { return this.buffer.dv.getUint8(this.offset + 4); }\n        set _3(value) { this.buffer.dv.setUint8(this.offset + 4, value); }\n        get _4() { return this.buffer.dv.getUint8(this.offset + 5); }\n        set _4(value) { this.buffer.dv.setUint8(this.offset + 5, value); }\n    }\n    Flat_server.server_M6_Direct = server_M6_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M7_Direct extends NPRPC.Flat.Flat {\n        get _1() { return this.buffer.dv.getUint8(this.offset + 0); }\n        set _1(value) { this.buffer.dv.setUint8(this.offset + 0, value); }\n        get _2() { return this.buffer.dv.getUint16(this.offset + 2, true); }\n        set _2(value) { this.buffer.dv.setUint16(this.offset + 2, value, true); }\n        get _3() { return this.buffer.dv.getUint8(this.offset + 4); }\n        set _3(value) { this.buffer.dv.setUint8(this.offset + 4, value); }\n        get _4() { return this.buffer.dv.getUint8(this.offset + 5); }\n        set _4(value) { this.buffer.dv.setUint8(this.offset + 5, value); }\n        get _5() { return this.buffer.dv.getUint8(this.offset + 6); }\n        set _5(value) { this.buffer.dv.setUint8(this.offset + 6, value); }\n    }\n    Flat_server.server_M7_Direct = server_M7_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M8_Direct extends NPRPC.Flat.Flat {\n        get _1() { return this.buffer.dv.getUint8(this.offset + 0); }\n        set _1(value) { this.buffer.dv.setUint8(this.offset + 0, value); }\n        get _2() { return this.buffer.dv.getUint16(this.offset + 2, true); }\n        set _2(value) { this.buffer.dv.setUint16(this.offset + 2, value, true); }\n        get _3() { return this.buffer.dv.getUint8(this.offset + 4); }\n        set _3(value) { this.buffer.dv.setUint8(this.offset + 4, value); }\n    }\n    Flat_server.server_M8_Direct = server_M8_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M9_Direct extends NPRPC.Flat.Flat {\n        get _1() { return this.buffer.dv.getUint8(this.offset + 0); }\n        set _1(value) { this.buffer.dv.setUint8(this.offset + 0, value); }\n        get _2() { return this.buffer.dv.getUint16(this.offset + 2, true); }\n        set _2(value) { this.buffer.dv.setUint16(this.offset + 2, value, true); }\n        get _3() { return this.buffer.dv.getUint16(this.offset + 4, true); }\n        set _3(value) { this.buffer.dv.setUint16(this.offset + 4, value, true); }\n    }\n    Flat_server.server_M9_Direct = server_M9_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M10_Direct extends NPRPC.Flat.Flat {\n        get _1() { return this.buffer.dv.getUint8(this.offset + 0); }\n        set _1(value) { this.buffer.dv.setUint8(this.offset + 0, value); }\n        get _2() { return this.buffer.dv.getUint16(this.offset + 2, true); }\n        set _2(value) { this.buffer.dv.setUint16(this.offset + 2, value, true); }\n        get _3() { return this.buffer.dv.getUint16(this.offset + 4, true); }\n        set _3(value) { this.buffer.dv.setUint16(this.offset + 4, value, true); }\n        get _4() { return this.buffer.dv.getUint8(this.offset + 6); }\n        set _4(value) { this.buffer.dv.setUint8(this.offset + 6, value); }\n    }\n    Flat_server.server_M10_Direct = server_M10_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M11_Direct extends NPRPC.Flat.Flat {\n        get _1() { return this.buffer.dv.getUint8(this.offset + 0); }\n        set _1(value) { this.buffer.dv.setUint8(this.offset + 0, value); }\n        get _2() { return this.buffer.dv.getUint16(this.offset + 2, true); }\n        set _2(value) { this.buffer.dv.setUint16(this.offset + 2, value, true); }\n        get _3() { return this.buffer.dv.getUint32(this.offset + 4, true); }\n        set _3(value) { this.buffer.dv.setUint32(this.offset + 4, value, true); }\n    }\n    Flat_server.server_M11_Direct = server_M11_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M12_Direct extends NPRPC.Flat.Flat {\n        get _1() { return this.buffer.dv.getUint8(this.offset + 0); }\n        set _1(value) { this.buffer.dv.setUint8(this.offset + 0, value); }\n        get _2() { return this.buffer.dv.getUint16(this.offset + 2, true); }\n        set _2(value) { this.buffer.dv.setUint16(this.offset + 2, value, true); }\n        get _3() { return this.buffer.dv.getUint32(this.offset + 4, true); }\n        set _3(value) { this.buffer.dv.setUint32(this.offset + 4, value, true); }\n        get _4() { return this.buffer.dv.getUint8(this.offset + 8); }\n        set _4(value) { this.buffer.dv.setUint8(this.offset + 8, value); }\n    }\n    Flat_server.server_M12_Direct = server_M12_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M13_Direct extends NPRPC.Flat.Flat {\n        get _1() { return this.buffer.dv.getUint8(this.offset + 0); }\n        set _1(value) { this.buffer.dv.setUint8(this.offset + 0, value); }\n        get _2() { return this.buffer.dv.getUint16(this.offset + 2, true); }\n        set _2(value) { this.buffer.dv.setUint16(this.offset + 2, value, true); }\n        _3(elements_size) {\n            NPRPC.Flat._alloc(this.buffer, this.offset + 4, elements_size, 1, 1);\n        }\n        _3_vd() { return new NPRPC.Flat.Vector_Direct1_u8(this.buffer, this.offset + 4); }\n    }\n    Flat_server.server_M13_Direct = server_M13_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M14_Direct extends NPRPC.Flat.Flat {\n        get _1() { return this.buffer.dv.getUint8(this.offset + 0); }\n        set _1(value) { this.buffer.dv.setUint8(this.offset + 0, value); }\n        get _2() { return this.buffer.dv.getUint16(this.offset + 2, true); }\n        set _2(value) { this.buffer.dv.setUint16(this.offset + 2, value, true); }\n    }\n    Flat_server.server_M14_Direct = server_M14_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M15_Direct extends NPRPC.Flat.Flat {\n        get _1() { return this.buffer.dv.getUint8(this.offset + 0); }\n        set _1(value) { this.buffer.dv.setUint8(this.offset + 0, value); }\n    }\n    Flat_server.server_M15_Direct = server_M15_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M16_Direct extends NPRPC.Flat.Flat {\n        get _1() { return (this.buffer.dv.getUint8(this.offset + 0) === 0x01); }\n        set _1(value) { this.buffer.dv.setUint8(this.offset + 0, value === true ? 0x01 : 0x00); }\n    }\n    Flat_server.server_M16_Direct = server_M16_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M17_Direct extends NPRPC.Flat.Flat {\n        get _1() { return this.buffer.dv.getUint8(this.offset + 0); }\n        set _1(value) { this.buffer.dv.setUint8(this.offset + 0, value); }\n        get _2() { return this.buffer.dv.getUint8(this.offset + 1); }\n        set _2(value) { this.buffer.dv.setUint8(this.offset + 1, value); }\n        _3(elements_size) {\n            NPRPC.Flat._alloc(this.buffer, this.offset + 4, elements_size, 1, 1);\n        }\n        _3_vd() { return new NPRPC.Flat.Vector_Direct1_u8(this.buffer, this.offset + 4); }\n    }\n    Flat_server.server_M17_Direct = server_M17_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M18_Direct extends NPRPC.Flat.Flat {\n        get _1() { return this.buffer.dv.getBigUint64(this.offset + 0, true); }\n        set _1(value) { this.buffer.dv.setBigUint64(this.offset + 0, value, true); }\n    }\n    Flat_server.server_M18_Direct = server_M18_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n(function (Flat_server) {\n    class server_M19_Direct extends NPRPC.Flat.Flat {\n        _1(elements_size) {\n            NPRPC.Flat._alloc(this.buffer, this.offset + 0, elements_size, 2, 2);\n        }\n        _1_vd() { return new NPRPC.Flat.Vector_Direct1_u16(this.buffer, this.offset + 0); }\n    }\n    Flat_server.server_M19_Direct = server_M19_Direct;\n})(Flat_server || (Flat_server = {})); // namespace Flat \n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import * as NPRPC from './nprpc';\nimport * as WS from './npwebserver';\nimport * as SRV from './server';\nimport { writable } from 'svelte/store';\nlet webserver;\nlet server;\nlet poa;\nexport let cats = new Array();\nconst VQUALITY = 0x00002000;\nconst IO_SPACE = 0x00004000;\nconst MUTABLE = 0x00008000;\nconst SIGNED = 0x00001000;\nconst INTERNAL = 0x00010000;\nconst SIZE_8 = 0x00000001;\nconst SIZE_16 = 0x00000002;\nconst SIZE_32 = 0x00000004;\nconst FLOAT_VALUE = 0x00000010;\nconst BIT_VALUE = 0x00000020;\nconst INT_VALUE = 0x00000040;\nconst BIT_MASK = 0x00000F00;\nconst SIZE_MASK = 0x0000000F;\nconst TYPE_MASK = BIT_VALUE | INT_VALUE | FLOAT_VALUE | SIGNED | SIZE_8 | SIZE_16 | SIZE_32;\nvar VT;\n(function (VT) {\n    VT[VT[\"VT_UNDEFINE\"] = 0] = \"VT_UNDEFINE\";\n    VT[VT[\"VT_DISCRETE\"] = (SIZE_8 | BIT_VALUE)] = \"VT_DISCRETE\";\n    VT[VT[\"VT_BYTE\"] = (SIZE_8 | INT_VALUE)] = \"VT_BYTE\";\n    VT[VT[\"VT_SIGNED_BYTE\"] = (SIGNED | SIZE_8 | INT_VALUE)] = \"VT_SIGNED_BYTE\";\n    VT[VT[\"VT_WORD\"] = (SIZE_16 | INT_VALUE)] = \"VT_WORD\";\n    VT[VT[\"VT_SIGNED_WORD\"] = (SIGNED | SIZE_16 | INT_VALUE)] = \"VT_SIGNED_WORD\";\n    VT[VT[\"VT_DWORD\"] = (SIZE_32 | INT_VALUE)] = \"VT_DWORD\";\n    VT[VT[\"VT_SIGNED_DWORD\"] = (SIGNED | SIZE_32 | INT_VALUE)] = \"VT_SIGNED_DWORD\";\n    VT[VT[\"VT_FLOAT\"] = (SIGNED | SIZE_32 | FLOAT_VALUE)] = \"VT_FLOAT\";\n})(VT || (VT = {}));\n;\nfunction is_vt_has_quality(type) {\n    return type & VQUALITY ? true : false;\n}\nexport class online_value {\n    type_;\n    value;\n    check_quality_8(data) {\n        if (is_vt_has_quality(this.type_) && data.get_val(1) != 0x01)\n            return false;\n        return true;\n    }\n    check_quality_16(data) {\n        if (is_vt_has_quality(this.type_) && data.get_val(2) != 0x01)\n            return false;\n        return true;\n    }\n    check_quality_32(data) {\n        if (is_vt_has_quality(this.type_) && data.get_val(4) != 0x01)\n            return false;\n        return true;\n    }\n    set_value(val) {\n        switch (val.s) {\n            case 2 /* VST_UNKNOWN */:\n                this.value.set(\"unk\");\n                return;\n            case 1 /* VST_DEVICE_NOT_RESPONDED */:\n                this.value.set(\"nc\");\n                return;\n            case 0 /* VST_DEVICE_RESPONDED */:\n                break;\n            default:\n                console.error();\n        }\n        let data = val.data_vd();\n        const clear_type = this.type_ & TYPE_MASK;\n        switch (clear_type) {\n            case VT.VT_DISCRETE:\n                if (!this.check_quality_8(data)) {\n                    this.value.set(\"x\");\n                    break;\n                }\n                this.value.set((data.data_view.getUint8(0) === 0xFF) ? \"1\" : \"0\");\n                break;\n            case VT.VT_BYTE:\n            case VT.VT_SIGNED_BYTE:\n                if (!this.check_quality_8(data)) {\n                    this.value.set(\"x\");\n                    break;\n                }\n                if (clear_type == VT.VT_BYTE) {\n                    this.value.set(data.data_view.getUint8(0).toString());\n                }\n                else {\n                    this.value.set(data.data_view.getInt8(0).toString());\n                }\n                break;\n            case VT.VT_WORD:\n            case VT.VT_SIGNED_WORD:\n                if (!this.check_quality_16(data)) {\n                    this.value.set(\"x\");\n                    break;\n                }\n                if (clear_type == VT.VT_WORD) {\n                    this.value.set(data.data_view.getUint16(0, true).toString());\n                }\n                else {\n                    this.value.set(data.data_view.getInt16(0, true).toString());\n                }\n                break;\n            case VT.VT_DWORD:\n            case VT.VT_SIGNED_DWORD:\n            case VT.VT_FLOAT:\n                if (!this.check_quality_32(data)) {\n                    this.value.set(\"x\");\n                    break;\n                }\n                switch (clear_type) {\n                    case VT.VT_DWORD:\n                        this.value.set(data.data_view.getUint32(0, true).toString());\n                        break;\n                    case VT.VT_SIGNED_DWORD:\n                        this.value.set(data.data_view.getInt32(0, true).toString());\n                        break;\n                    case VT.VT_FLOAT:\n                        this.value.set(data.data_view.getFloat32(0, true).toFixed(3));\n                        break;\n                }\n                break;\n            default:\n                console.error(\"Unknown type %d\", this.type_ & TYPE_MASK);\n        }\n    }\n    constructor(type) {\n        this.type_ = type;\n        this.value = writable(\"unk\");\n    }\n}\nclass OnDataCallbackImpl extends SRV._IDataCallBack_Servant {\n    items_;\n    OnDataChanged(a) {\n        for (let x of a) {\n            this.items_.get(x.h).ov.set_value(x);\n            //console.log(this.items_.get(x.h).ov.value);\n        }\n        //for (let i of valid_items) {\n        //\tconsole.log(i.desc.name + \" - \" + i.ov.value);\n        //}\n    }\n    constructor() {\n        super();\n        this.items_ = new Map();\n    }\n}\nexport async function rpc_init() {\n    //\tNPRPC.set_debug_level(NPRPC.DebugLevel.DebugLevel_EveryCall);\n    let rpc = NPRPC.init();\n    poa = rpc.create_poa(32);\n    let nameserver = NPRPC.get_nameserver(\"192.168.1.2\");\n    {\n        let obj = NPRPC.make_ref();\n        await nameserver.Resolve(\"npsystem_webserver\", obj);\n        webserver = NPRPC.narrow(obj.value, WS.WebServer);\n        if (!webserver)\n            throw \"WS.WebServer narrowing failed\";\n    }\n    {\n        let obj = NPRPC.make_ref();\n        await nameserver.Resolve(\"npsystem_server\", obj);\n        server = NPRPC.narrow(obj.value, SRV.Server);\n        if (!server)\n            throw \"SRV.Server narrowing failed\";\n    }\n    await webserver.get_web_categories(cats);\n    //console.log(cats);\n    let item_manager = null;\n    {\n        let obj = NPRPC.make_ref();\n        await server.CreateItemManager(obj);\n        item_manager = NPRPC.narrow(obj.value, SRV.ItemManager);\n        if (!item_manager)\n            throw \"SRV.ItemManager narrowing failed\";\n        item_manager.add_ref();\n    }\n    let data_callback = new OnDataCallbackImpl();\n    let oid = poa.activate_object(data_callback);\n    await item_manager.Activate(oid);\n    let valid_items = new Array();\n    for (let cat of cats) {\n        for (let item of cat.items) {\n            let ov = new online_value(item.type);\n            item.ov = ov;\n            if (item.dev_addr != 0xFF)\n                valid_items.push({ desc: item, ov: ov });\n        }\n    }\n    let ar = new Array(valid_items.length);\n    for (let i = 0; i < valid_items.length; ++i) {\n        ar[i] = {\n            dev_addr: valid_items[i].desc.dev_addr,\n            mem_addr: valid_items[i].desc.mem_addr,\n            type: valid_items[i].desc.type\n        };\n    }\n    let handles = new Array();\n    await item_manager.Advise(ar, handles);\n    for (let i = 0; i < valid_items.length; ++i) {\n        data_callback.items_.set(handles[i], valid_items[i]);\n    }\n}\n","<script lang=\"ts\">\n\timport Category from './Category.svelte';\n\timport CollapsibleSection from './CollapsibleSection.svelte';\n\timport {cats} from './data'\n\t\n</script>\n\n<main>\n\t{#each cats as cat}\n\t<CollapsibleSection headerText={cat.name} expanded={true}>\n\t\t<Category cat={cat} />\n\t</CollapsibleSection>\n\t{/each}\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\twidth: 800px;\n\t\tmargin: auto;      /* Center it */\n    max-width: 100%;   /* Make it fit window if under 500px */ \n\t}\n\n/*\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n*/\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>","import App from './App.svelte';\nimport { rpc_init } from './data';\nlet app;\nrpc_init().then(() => {\n    app = new App({\n        target: document.body,\n        props: {}\n    });\n}).catch((e) => console.log(e));\nexport default app;\n"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","is_empty","obj","keys","length","subscribe","store","callbacks","unsub","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","callback","promise","Promise","fulfill","add","abort","append","target","node","appendChild","get_root_for_style","document","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","append_stylesheet","style","head","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","name","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","children","Array","from","childNodes","set_data","wholeText","custom_event","type","detail","bubbles","e","createEvent","initCustomEvent","active_docs","active","current_component","hash","str","charCodeAt","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","doc","stylesheet","__svelte_stylesheet","sheet","current_rules","__svelte_rules","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","clear_rules","deleteRule","clear","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","push","flushing","seen_callbacks","update","$$","pop","has","fragment","before_update","after_update","wait","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","tick","css","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","l","SvelteComponent","$destroy","this","$on","index","splice","$set","$$props","$$set","desc","description","ov","items","cat","cubicOut","quintOut","slide","getComputedStyle","opacity","height","parseFloat","padding_top","paddingTop","padding_bottom","paddingBottom","margin_top","marginTop","margin_bottom","marginBottom","border_top_width","borderTopWidth","border_bottom_width","borderBottomWidth","min","headerText","expanded","factory","self","__webpack_modules__","__unused_webpack_module","exports","eval","__webpack_require__","__webpack_module_cache__","moduleId","cachedModule","module","call","__webpack_exports__","Flat_npwebserver","Flat_server","WebItem_Direct","NPRPC.Flat","Flat","enc","TextDecoder","v_begin","offset","data_offset","buffer","dv","getUint32","bn","array_buffer","decode","bytes","TextEncoder","encode","_alloc","Uint8Array","set","path","dev_addr","getUint8","setUint8","mem_addr","getUint16","setUint16","setUint32","WebCategory_Direct","elements_size","items_vd","Vector_Direct2","WebServer","NPRPC.ObjectProxy","servant_t","_IWebServer_Servant","get_web_categories","cats","interface_idx","arguments","buf","NPRPC.FlatBuffer","prepare","commit","write_msg_id","write_msg_type","__ch","NPRPC.impl","Flat_nprpc_base","CallHeader_Direct","object_id","poa_idx","function_idx","write_len","NPRPC.rpc","ip4","port","websocket_port","timeout","NPRPC.handle_standart_reply","console","log","NPRPC.Exception","vv","npwebserver_M1_Direct","_1_vd","index_0","index_1","NPRPC.ObjectServant","_get_class","get_class","remote_endpoint","from_parent","_dispatch","obuf","consume","oa","NPRPC.make_simple_answer","_1","NPNetCommunicationError","code","constructor","super","NPNetCommunicationError_Direct","__ex_id","getInt32","setInt32","server_value_Direct","h","getBigUint64","setBigUint64","s","data_vd","Array_Direct1_u8","RawDataDef_Direct","address","DataDef_Direct","Pingable","_IPingable_Servant","Ping","_IDataCallBack_Servant","ia","server_M1_Direct","OnDataChanged","ItemManager","_IItemManager_Servant","prototype","bind","Activate","client","_","server_M2_Direct","flags","class_id","Advise","server_M3_Direct","std_reply","server_throw_exception","server_M4_Direct","UnAdvise","copy_from_ts_array","NPRPC.create_object_from_flat","Server","_IServer_Servant","GetNetworkStatus","network_status","server_M5_Direct","CreateItemManager","im","out","SendRawData","Write_1","bit","server_M6_Direct","_2","_3","_4","Write_q1","qvalue","server_M7_Direct","_5","Write_8","server_M8_Direct","Write_q8","Write_16","server_M9_Direct","Write_q16","server_M10_Direct","Write_32","server_M11_Direct","Write_q32","server_M12_Direct","WriteBlock","server_M13_Direct","_3_vd","ReadByte","addr","server_M14_Direct","server_M15_Direct","ReadBlock","index_2","AVR_StopAlgorithm","alg_addr","__ret_value","server_M16_Direct","AVR_ReinitIO","AVR_SendRemoteData","page_num","AVR_SendPage","server_M17_Direct","AVR_RemoveAlgorithm","AVR_ReplaceAlgorithm","old_addr","new_addr","AVR_WriteEeprom","AVR_WriteTwiTable","AVR_V_GetFlash","device_id","server_M18_Direct","server_M19_Direct","index_3","AVR_V_StoreFlash","Notify_DeviceActivated","Notify_DeviceDeactivated","Notify_ParameterRemoved","param_id","Notify_TypeOrVariableChanged","History_AddParameter","History_RemoveParameter","_out_1","__ret_val","read_exception_number","ex_flat","ex","NPRPC.detail","ObjectId_Direct","Vector_Direct1_u64","Vector_Direct1_u8","Vector_Direct1_u16","subscriber_queue","writable","stop","subscribers","new_value","run_queue","subscriber","invalidate","webserver","server","poa","VQUALITY","SIGNED","SIZE_8","SIZE_16","SIZE_32","FLOAT_VALUE","BIT_VALUE","INT_VALUE","TYPE_MASK","VT","is_vt_has_quality","online_value","type_","check_quality_8","get_val","check_quality_16","check_quality_32","set_value","val","error","clear_type","VT_DISCRETE","data_view","VT_BYTE","VT_SIGNED_BYTE","toString","getInt8","VT_WORD","VT_SIGNED_WORD","getInt16","VT_DWORD","VT_SIGNED_DWORD","VT_FLOAT","getFloat32","toFixed","OnDataCallbackImpl","SRV._IDataCallBack_Servant","items_","get","async","rpc_init","rpc","NPRPC.init","create_poa","nameserver","NPRPC.get_nameserver","NPRPC.make_ref","Resolve","NPRPC.narrow","WS.WebServer","SRV.Server","item_manager","SRV.ItemManager","add_ref","data_callback","oid","activate_object","valid_items","item","ar","handles","app","App","body","catch"],"mappings":"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"}