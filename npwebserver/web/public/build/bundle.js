var app=function(){"use strict";function noop(){}const identity=e=>e;function assign(e,t){for(const r in t)e[r]=t[r];return e}function run(e){return e()}function blank_object(){return Object.create(null)}function run_all(e){e.forEach(run)}function is_function(e){return"function"==typeof e}function safe_not_equal(e,t){return e!=e?t==t:e!==t||e&&"object"==typeof e||"function"==typeof e}function is_empty(e){return 0===Object.keys(e).length}function subscribe(e,...t){if(null==e)return noop;const r=e.subscribe(...t);return r.unsubscribe?()=>r.unsubscribe():r}function create_slot(e,t,r,n){if(e){const s=get_slot_context(e,t,r,n);return e[0](s)}}function get_slot_context(e,t,r,n){return e[1]&&n?assign(r.ctx.slice(),e[1](n(t))):r.ctx}function get_slot_changes(e,t,r,n){if(e[2]&&n){const s=e[2](n(r));if(void 0===t.dirty)return s;if("object"==typeof s){const e=[],r=Math.max(t.dirty.length,s.length);for(let n=0;n<r;n+=1)e[n]=t.dirty[n]|s[n];return e}return t.dirty|s}return t.dirty}function update_slot_base(e,t,r,n,s,i){if(s){const a=get_slot_context(t,r,n,i);e.p(a,s)}}function get_all_dirty_from_scope(e){if(e.ctx.length>32){const t=[],r=e.ctx.length/32;for(let e=0;e<r;e++)t[e]=-1;return t}return-1}const is_client="undefined"!=typeof window;let now=is_client?()=>window.performance.now():()=>Date.now(),raf=is_client?e=>requestAnimationFrame(e):noop;const tasks=new Set;function run_tasks(e){tasks.forEach((t=>{t.c(e)||(tasks.delete(t),t.f())})),0!==tasks.size&&raf(run_tasks)}function loop(e){let t;return 0===tasks.size&&raf(run_tasks),{promise:new Promise((r=>{tasks.add(t={c:e,f:r})})),abort(){tasks.delete(t)}}}function append(e,t){e.appendChild(t)}function get_root_for_style(e){if(!e)return document;const t=e.getRootNode?e.getRootNode():e.ownerDocument;return t.host?t:document}function append_empty_stylesheet(e){const t=element("style");return append_stylesheet(get_root_for_style(e),t),t}function append_stylesheet(e,t){append(e.head||e,t)}function insert(e,t,r){e.insertBefore(t,r||null)}function detach(e){e.parentNode.removeChild(e)}function destroy_each(e,t){for(let r=0;r<e.length;r+=1)e[r]&&e[r].d(t)}function element(e){return document.createElement(e)}function svg_element(e){return document.createElementNS("http://www.w3.org/2000/svg",e)}function text(e){return document.createTextNode(e)}function space(){return text(" ")}function listen(e,t,r,n){return e.addEventListener(t,r,n),()=>e.removeEventListener(t,r,n)}function attr(e,t,r){null==r?e.removeAttribute(t):e.getAttribute(t)!==r&&e.setAttribute(t,r)}function children(e){return Array.from(e.childNodes)}function set_data(e,t){t=""+t,e.wholeText!==t&&(e.data=t)}function custom_event(e,t,r=!1){const n=document.createEvent("CustomEvent");return n.initCustomEvent(e,r,!1,t),n}const active_docs=new Set;let active=0,current_component;function hash(e){let t=5381,r=e.length;for(;r--;)t=(t<<5)-t^e.charCodeAt(r);return t>>>0}function create_rule(e,t,r,n,s,i,a,_=0){const o=16.666/n;let c="{\n";for(let e=0;e<=1;e+=o){const n=t+(r-t)*i(e);c+=100*e+`%{${a(n,1-n)}}\n`}const l=c+`100% {${a(r,1-r)}}\n}`,p=`__svelte_${hash(l)}_${_}`,f=get_root_for_style(e);active_docs.add(f);const u=f.__svelte_stylesheet||(f.__svelte_stylesheet=append_empty_stylesheet(e).sheet),d=f.__svelte_rules||(f.__svelte_rules={});d[p]||(d[p]=!0,u.insertRule(`@keyframes ${p} ${l}`,u.cssRules.length));const h=e.style.animation||"";return e.style.animation=`${h?`${h}, `:""}${p} ${n}ms linear ${s}ms 1 both`,active+=1,p}function delete_rule(e,t){const r=(e.style.animation||"").split(", "),n=r.filter(t?e=>e.indexOf(t)<0:e=>-1===e.indexOf("__svelte")),s=r.length-n.length;s&&(e.style.animation=n.join(", "),active-=s,active||clear_rules())}function clear_rules(){raf((()=>{active||(active_docs.forEach((e=>{const t=e.__svelte_stylesheet;let r=t.cssRules.length;for(;r--;)t.deleteRule(r);e.__svelte_rules={}})),active_docs.clear())}))}function set_current_component(e){current_component=e}const dirty_components=[],binding_callbacks=[],render_callbacks=[],flush_callbacks=[],resolved_promise=Promise.resolve();let update_scheduled=!1;function schedule_update(){update_scheduled||(update_scheduled=!0,resolved_promise.then(flush))}function add_render_callback(e){render_callbacks.push(e)}let flushing=!1;const seen_callbacks=new Set;function flush(){if(!flushing){flushing=!0;do{for(let e=0;e<dirty_components.length;e+=1){const t=dirty_components[e];set_current_component(t),update(t.$$)}for(set_current_component(null),dirty_components.length=0;binding_callbacks.length;)binding_callbacks.pop()();for(let e=0;e<render_callbacks.length;e+=1){const t=render_callbacks[e];seen_callbacks.has(t)||(seen_callbacks.add(t),t())}render_callbacks.length=0}while(dirty_components.length);for(;flush_callbacks.length;)flush_callbacks.pop()();update_scheduled=!1,flushing=!1,seen_callbacks.clear()}}function update(e){if(null!==e.fragment){e.update(),run_all(e.before_update);const t=e.dirty;e.dirty=[-1],e.fragment&&e.fragment.p(e.ctx,t),e.after_update.forEach(add_render_callback)}}let promise;function wait(){return promise||(promise=Promise.resolve(),promise.then((()=>{promise=null}))),promise}function dispatch(e,t,r){e.dispatchEvent(custom_event(`${t?"intro":"outro"}${r}`))}const outroing=new Set;let outros;function group_outros(){outros={r:0,c:[],p:outros}}function check_outros(){outros.r||run_all(outros.c),outros=outros.p}function transition_in(e,t){e&&e.i&&(outroing.delete(e),e.i(t))}function transition_out(e,t,r,n){if(e&&e.o){if(outroing.has(e))return;outroing.add(e),outros.c.push((()=>{outroing.delete(e),n&&(r&&e.d(1),n())})),e.o(t)}}const null_transition={duration:0};function create_bidirectional_transition(e,t,r,n){let s=t(e,r),i=n?0:1,a=null,_=null,o=null;function c(){o&&delete_rule(e,o)}function l(e,t){const r=e.b-i;return t*=Math.abs(r),{a:i,b:e.b,d:r,duration:t,start:e.start,end:e.start+t,group:e.group}}function p(t){const{delay:r=0,duration:n=300,easing:p=identity,tick:f=noop,css:u}=s||null_transition,d={start:now()+r,b:t};t||(d.group=outros,outros.r+=1),a||_?_=d:(u&&(c(),o=create_rule(e,i,t,n,r,p,u)),t&&f(0,1),a=l(d,n),add_render_callback((()=>dispatch(e,t,"start"))),loop((t=>{if(_&&t>_.start&&(a=l(_,n),_=null,dispatch(e,a.b,"start"),u&&(c(),o=create_rule(e,i,a.b,a.duration,0,p,s.css))),a)if(t>=a.end)f(i=a.b,1-i),dispatch(e,a.b,"end"),_||(a.b?c():--a.group.r||run_all(a.group.c)),a=null;else if(t>=a.start){const e=t-a.start;i=a.a+a.d*p(e/a.duration),f(i,1-i)}return!(!a&&!_)})))}return{run(e){is_function(s)?wait().then((()=>{s=s(),p(e)})):p(e)},end(){c(),a=_=null}}}function create_component(e){e&&e.c()}function mount_component(e,t,r,n){const{fragment:s,on_mount:i,on_destroy:a,after_update:_}=e.$$;s&&s.m(t,r),n||add_render_callback((()=>{const t=i.map(run).filter(is_function);a?a.push(...t):run_all(t),e.$$.on_mount=[]})),_.forEach(add_render_callback)}function destroy_component(e,t){const r=e.$$;null!==r.fragment&&(run_all(r.on_destroy),r.fragment&&r.fragment.d(t),r.on_destroy=r.fragment=null,r.ctx=[])}function make_dirty(e,t){-1===e.$$.dirty[0]&&(dirty_components.push(e),schedule_update(),e.$$.dirty.fill(0)),e.$$.dirty[t/31|0]|=1<<t%31}function init(e,t,r,n,s,i,a,_=[-1]){const o=current_component;set_current_component(e);const c=e.$$={fragment:null,ctx:null,props:i,update:noop,not_equal:s,bound:blank_object(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(o?o.$$.context:t.context||[]),callbacks:blank_object(),dirty:_,skip_bound:!1,root:t.target||o.$$.root};a&&a(c.root);let l=!1;if(c.ctx=r?r(e,t.props||{},((t,r,...n)=>{const i=n.length?n[0]:r;return c.ctx&&s(c.ctx[t],c.ctx[t]=i)&&(!c.skip_bound&&c.bound[t]&&c.bound[t](i),l&&make_dirty(e,t)),r})):[],c.update(),l=!0,run_all(c.before_update),c.fragment=!!n&&n(c.ctx),t.target){if(t.hydrate){const e=children(t.target);c.fragment&&c.fragment.l(e),e.forEach(detach)}else c.fragment&&c.fragment.c();t.intro&&transition_in(e.$$.fragment),mount_component(e,t.target,t.anchor,t.customElement),flush()}set_current_component(o)}class SvelteComponent{$destroy(){destroy_component(this,1),this.$destroy=noop}$on(e,t){const r=this.$$.callbacks[e]||(this.$$.callbacks[e]=[]);return r.push(t),()=>{const e=r.indexOf(t);-1!==e&&r.splice(e,1)}}$set(e){this.$$set&&!is_empty(e)&&(this.$$.skip_bound=!0,this.$$set(e),this.$$.skip_bound=!1)}}function create_fragment$3(e){let t,r,n,s,i,a,_,o,c;return{c(){t=element("li"),r=element("div"),n=text(e[0]),s=space(),i=element("div"),a=text(e[1]),_=space(),o=element("div"),c=text(e[3]),attr(r,"class","name svelte-19y940p"),attr(i,"class","desc svelte-19y940p"),attr(o,"class","value svelte-19y940p"),attr(t,"class","svelte-19y940p")},m(e,l){insert(e,t,l),append(t,r),append(r,n),append(t,s),append(t,i),append(i,a),append(t,_),append(t,o),append(o,c)},p(e,[t]){1&t&&set_data(n,e[0]),2&t&&set_data(a,e[1]),8&t&&set_data(c,e[3])},i:noop,o:noop,d(e){e&&detach(t)}}}function instance$2(e,t,r){let n,s=noop,i=()=>(s(),s=subscribe(o,(e=>r(3,n=e))),o);e.$$.on_destroy.push((()=>s()));let{name:a}=t,{desc:_}=t,{value:o}=t;return i(),e.$$set=e=>{"name"in e&&r(0,a=e.name),"desc"in e&&r(1,_=e.desc),"value"in e&&i(r(2,o=e.value))},[a,_,o,n]}class Parameter extends SvelteComponent{constructor(e){super(),init(this,e,instance$2,create_fragment$3,safe_not_equal,{name:0,desc:1,value:2})}}function get_each_context$1(e,t,r){const n=e.slice();return n[1]=t[r],n}function create_each_block$1(e){let t,r;return t=new Parameter({props:{name:e[1].name,desc:e[1].description,value:e[1].ov.value}}),{c(){create_component(t.$$.fragment)},m(e,n){mount_component(t,e,n),r=!0},p(e,r){const n={};1&r&&(n.name=e[1].name),1&r&&(n.desc=e[1].description),1&r&&(n.value=e[1].ov.value),t.$set(n)},i(e){r||(transition_in(t.$$.fragment,e),r=!0)},o(e){transition_out(t.$$.fragment,e),r=!1},d(e){destroy_component(t,e)}}}function create_fragment$2(e){let t,r,n=e[0].items,s=[];for(let t=0;t<n.length;t+=1)s[t]=create_each_block$1(get_each_context$1(e,n,t));const i=e=>transition_out(s[e],1,1,(()=>{s[e]=null}));return{c(){t=element("ul");for(let e=0;e<s.length;e+=1)s[e].c()},m(e,n){insert(e,t,n);for(let e=0;e<s.length;e+=1)s[e].m(t,null);r=!0},p(e,[r]){if(1&r){let a;for(n=e[0].items,a=0;a<n.length;a+=1){const i=get_each_context$1(e,n,a);s[a]?(s[a].p(i,r),transition_in(s[a],1)):(s[a]=create_each_block$1(i),s[a].c(),transition_in(s[a],1),s[a].m(t,null))}for(group_outros(),a=n.length;a<s.length;a+=1)i(a);check_outros()}},i(e){if(!r){for(let e=0;e<n.length;e+=1)transition_in(s[e]);r=!0}},o(e){s=s.filter(Boolean);for(let e=0;e<s.length;e+=1)transition_out(s[e]);r=!1},d(e){e&&detach(t),destroy_each(s,e)}}}function instance$1(e,t,r){let{cat:n}=t;return e.$$set=e=>{"cat"in e&&r(0,n=e.cat)},[n]}class Category extends SvelteComponent{constructor(e){super(),init(this,e,instance$1,create_fragment$2,safe_not_equal,{cat:0})}}function cubicOut(e){const t=e-1;return t*t*t+1}function quintOut(e){return--e*e*e*e*e+1}function slide(e,{delay:t=0,duration:r=400,easing:n=cubicOut}={}){const s=getComputedStyle(e),i=+s.opacity,a=parseFloat(s.height),_=parseFloat(s.paddingTop),o=parseFloat(s.paddingBottom),c=parseFloat(s.marginTop),l=parseFloat(s.marginBottom),p=parseFloat(s.borderTopWidth),f=parseFloat(s.borderBottomWidth);return{delay:t,duration:r,easing:n,css:e=>`overflow: hidden;opacity: ${Math.min(20*e,1)*i};height: ${e*a}px;padding-top: ${e*_}px;padding-bottom: ${e*o}px;margin-top: ${e*c}px;margin-bottom: ${e*l}px;border-top-width: ${e*p}px;border-bottom-width: ${e*f}px;`}}function create_if_block(e){let t,r,n;const s=e[3].default,i=create_slot(s,e,e[2],null);return{c(){t=element("div"),i&&i.c(),attr(t,"class","contents")},m(e,r){insert(e,t,r),i&&i.m(t,null),n=!0},p(t,r){e=t,i&&i.p&&(!n||4&r)&&update_slot_base(i,s,e,e[2],n?get_slot_changes(s,e[2],r,null):get_all_dirty_from_scope(e[2]),null)},i(e){n||(transition_in(i,e),add_render_callback((()=>{r||(r=create_bidirectional_transition(t,slide,{delay:0,duration:250,easing:quintOut},!0)),r.run(1)})),n=!0)},o(e){transition_out(i,e),r||(r=create_bidirectional_transition(t,slide,{delay:0,duration:250,easing:quintOut},!1)),r.run(0),n=!1},d(e){e&&detach(t),i&&i.d(e),e&&r&&r.end()}}}function create_fragment$1(e){let t,r,n,s,i,a,_,o,c,l,p,f,u=e[0]&&create_if_block(e);return{c(){t=element("div"),r=element("h3"),n=element("button"),s=text(e[1]),i=space(),a=svg_element("svg"),_=svg_element("path"),o=svg_element("path"),c=space(),u&&u.c(),attr(_,"class","vert svelte-rb8agq"),attr(_,"d","M10 1V19"),attr(_,"stroke","black"),attr(_,"stroke-width","2"),attr(o,"d","M1 10L19 10"),attr(o,"stroke","black"),attr(o,"stroke-width","2"),attr(a,"viewBox","0 0 20 20"),attr(a,"fill","none"),attr(a,"class","svelte-rb8agq"),attr(n,"aria-expanded",e[0]),attr(n,"class","svelte-rb8agq"),attr(r,"class","svelte-rb8agq"),attr(t,"class","collapsible svelte-rb8agq")},m(d,h){insert(d,t,h),append(t,r),append(r,n),append(n,s),append(n,i),append(n,a),append(a,_),append(a,o),append(t,c),u&&u.m(t,null),l=!0,p||(f=listen(n,"click",e[4]),p=!0)},p(e,[r]){(!l||2&r)&&set_data(s,e[1]),(!l||1&r)&&attr(n,"aria-expanded",e[0]),e[0]?u?(u.p(e,r),1&r&&transition_in(u,1)):(u=create_if_block(e),u.c(),transition_in(u,1),u.m(t,null)):u&&(group_outros(),transition_out(u,1,1,(()=>{u=null})),check_outros())},i(e){l||(transition_in(u),l=!0)},o(e){transition_out(u),l=!1},d(e){e&&detach(t),u&&u.d(),p=!1,f()}}}function instance(e,t,r){let{$$slots:n={},$$scope:s}=t,{headerText:i}=t,{expanded:a=!1}=t;return e.$$set=e=>{"headerText"in e&&r(1,i=e.headerText),"expanded"in e&&r(0,a=e.expanded),"$$scope"in e&&r(2,s=e.$$scope)},[a,i,s,n,()=>r(0,a=!a)]}class CollapsibleSection extends SvelteComponent{constructor(e){super(),init(this,e,instance,create_fragment$1,safe_not_equal,{headerText:1,expanded:0})}}function createCommonjsModule(e){var t={exports:{}};return e(t,t.exports),t.exports}var nprpc=createCommonjsModule((function(module,exports){var factory;self,factory=function(){return(()=>{var __webpack_modules__={"./src/exception.ts":
/*!**************************!*\
      !*** ./src/exception.ts ***!
      \**************************/(__unused_webpack_module,exports)=>{eval('\n// Copyright (c) 2021 nikitapnn1@gmail.com\n// This file is a part of npsystem (Distributed Control System) and covered by LICENSING file in the topmost directory\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Exception = void 0;\nclass Exception extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nexports.Exception = Exception;\n\n\n//# sourceURL=webpack://nprpc_runtime/./src/exception.ts?')},"./src/flat.ts":
/*!*********************!*\
      !*** ./src/flat.ts ***!
      \*********************/(__unused_webpack_module,exports)=>{eval('\n// Copyright (c) 2021 nikitapnn1@gmail.com\n// This file is a part of npsystem (Distributed Control System) and covered by LICENSING file in the topmost directory\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Array_Direct1_float64 = exports.Array_Direct1_float32 = exports.Array_Direct1_i64 = exports.Array_Direct1_u64 = exports.Array_Direct1_i32 = exports.Array_Direct1_u32 = exports.Array_Direct1_i16 = exports.Array_Direct1_u16 = exports.Array_Direct1_i8 = exports.Array_Direct1_u8 = exports.Vector_Direct1_float64 = exports.Vector_Direct1_float32 = exports.Vector_Direct1_i64 = exports.Vector_Direct1_u64 = exports.Vector_Direct1_i32 = exports.Vector_Direct1_u32 = exports.Vector_Direct1_i16 = exports.Vector_Direct1_u16 = exports.Vector_Direct1_i8 = exports.Vector_Direct1_u8 = exports.String_Direct1 = exports.Array_Direct2 = exports.Vector_Direct2 = exports._alloc = exports.Flat = void 0;\nclass Flat {\n    buffer;\n    offset;\n    constructor(buffer, offset) {\n        this.buffer = buffer;\n        this.offset = offset;\n    }\n}\nexports.Flat = Flat;\nfunction _alloc(buffer, vector_offset, n, element_size, align) {\n    let rem = buffer.offset % align;\n    let offset = rem ? buffer.offset + (align - rem) : buffer.offset;\n    {\n        let added_size = n * element_size + (offset - buffer.offset);\n        buffer.prepare(added_size);\n        buffer.commit(added_size);\n    }\n    buffer.dv.setUint32(vector_offset, offset - vector_offset, true);\n    buffer.dv.setUint32(vector_offset + 4, n, true);\n    //\tconsole.log({\n    //\t\toffset: offset,\n    //\t\tvector_offset: vector_offset,\n    //\t\tvoffset: buffer.dv.getUint32(vector_offset,  true)\n    //\t});\n    return offset;\n}\nexports._alloc = _alloc;\nclass Vector extends Flat {\n    get elements_offset() { return this.offset + this.buffer.dv.getUint32(this.offset, true); }\n    get elements_size() { return this.buffer.dv.getUint32(this.offset + 4, true); }\n}\nclass FlatArray extends Flat {\n    buffer;\n    offset;\n    size;\n    get elements_offset() { return this.offset; }\n    get elements_size() { return this.size; }\n    constructor(buffer, offset, size) {\n        super(buffer, offset);\n        this.buffer = buffer;\n        this.offset = offset;\n        this.size = size;\n    }\n}\nfunction Iterable(Base) {\n    return class _Iterable extends Base {\n        // *[Symbol.iterator]() {\n        // \tlet size: number = (this as any).elements_size;\n        // \tfor (let ix = 0; ix < size; ++ix) {\n        // \t\tyield (this as any).get_val(ix);\n        // \t}\n        // }\n        [Symbol.iterator]() {\n            let this_ = this;\n            const size = this_.elements_size;\n            let index = 0;\n            return {\n                next: () => {\n                    if (index < size)\n                        return { value: this_.get_val(index++), done: false };\n                    return { value: size, done: true };\n                }\n            };\n        }\n    };\n}\nfunction Accessor_U8(Base) {\n    return class _Accessor_U8 extends Base {\n        get_val(ix) { return this.buffer.dv.getUint8(this.elements_offset + ix); }\n        set_val(ix, value) { this.buffer.dv.setUint8(this.elements_offset + ix, value); }\n        copy_from_ts_array(arr) {\n            let offset = this.elements_offset;\n            for (let n of arr) {\n                this.buffer.dv.setUint8(offset, n);\n                offset += 1;\n            }\n        }\n        get array_buffer() {\n            let offset = this.elements_offset;\n            return this.buffer.array_buffer.slice(offset, offset + this.elements_size);\n        }\n        get data_view() {\n            return new DataView(this.buffer.array_buffer, this.elements_offset);\n        }\n    };\n}\nfunction Accessor_I8(Base) {\n    return class _Accessor_I8 extends Base {\n        get_val(ix) { return this.buffer.dv.getInt8(this.elements_offset + ix); }\n        set_val(ix, value) { this.buffer.dv.setInt8(this.elements_offset + ix, value); }\n        copy_from_ts_array(arr) {\n            let offset = this.elements_offset;\n            for (let n of arr) {\n                this.buffer.dv.setInt8(offset, n);\n                offset += 1;\n            }\n        }\n    };\n}\nfunction Accessor_U16(Base) {\n    return class _Accessor_U16 extends Base {\n        get_val(ix) { return this.buffer.dv.getUint16(this.elements_offset + 2 * ix, true); }\n        set_val(ix, value) { this.buffer.dv.setUint16(this.elements_offset + 2 * ix, value, true); }\n        copy_from_ts_array(arr) {\n            let offset = this.elements_offset;\n            for (let n of arr) {\n                this.buffer.dv.setUint16(offset, n, true);\n                offset += 2;\n            }\n        }\n    };\n}\nfunction Accessor_I16(Base) {\n    return class _Accessor_I16 extends Base {\n        get_val(ix) { return this.buffer.dv.getInt16(this.elements_offset + 2 * ix, true); }\n        set_val(ix, value) { this.buffer.dv.setInt16(this.elements_offset + 2 * ix, value, true); }\n        copy_from_ts_array(arr) {\n            let offset = this.elements_offset;\n            for (let n of arr) {\n                this.buffer.dv.setInt16(offset, n, true);\n                offset += 2;\n            }\n        }\n    };\n}\nfunction Accessor_U32(Base) {\n    return class _Accessor_U32 extends Base {\n        get_val(ix) { return this.buffer.dv.getUint32(this.elements_offset + 4 * ix, true); }\n        set_val(ix, value) { this.buffer.dv.setUint32(this.elements_offset + 4 * ix, value, true); }\n        copy_from_ts_array(arr) {\n            let offset = this.elements_offset;\n            for (let n of arr) {\n                this.buffer.dv.setUint32(offset, n, true);\n                offset += 4;\n            }\n        }\n    };\n}\nfunction Accessor_I32(Base) {\n    return class _Accessor_I32 extends Base {\n        get_val(ix) { return this.buffer.dv.getInt32(this.elements_offset + 4 * ix, true); }\n        set_val(ix, value) { this.buffer.dv.setInt32(this.elements_offset + 4 * ix, value, true); }\n        copy_from_ts_array(arr) {\n            let offset = this.elements_offset;\n            for (let n of arr) {\n                this.buffer.dv.setInt32(offset, n, true);\n                offset += 4;\n            }\n        }\n    };\n}\nfunction Accessor_U64(Base) {\n    return class _Accessor_U64 extends Base {\n        get_val(ix) { return this.buffer.dv.getBigUint64(this.elements_offset + 8 * ix, true); }\n        set_val(ix, value) { this.buffer.dv.setBigUint64(this.elements_offset + 8 * ix, value, true); }\n        copy_from_ts_array(arr) {\n            let offset = this.elements_offset;\n            for (let n of arr) {\n                this.buffer.dv.setBigUint64(offset, n, true);\n                offset += 8;\n            }\n        }\n    };\n}\nfunction Accessor_I64(Base) {\n    return class _Accessor_I64 extends Base {\n        get_val(ix) { return this.buffer.dv.getBigInt64(this.elements_offset + 8 * ix, true); }\n        set_val(ix, value) { this.buffer.dv.setBigInt64(this.elements_offset + 8 * ix, value, true); }\n        copy_from_ts_array(arr) {\n            let offset = this.elements_offset;\n            for (let n of arr) {\n                this.buffer.dv.setBigInt64(offset, n, true);\n                offset += 8;\n            }\n        }\n    };\n}\nfunction Accessor_Float32(Base) {\n    return class _Accessor_Float32 extends Base {\n        get_val(ix) { return this.buffer.dv.getFloat32(this.elements_offset + 4 * ix, true); }\n        set_val(ix, value) { this.buffer.dv.setFloat32(this.elements_offset + 4 * ix, value, true); }\n        copy_from_ts_array(arr) {\n            let offset = this.elements_offset;\n            for (let n of arr) {\n                this.buffer.dv.setFloat32(offset, n, true);\n                offset += 4;\n            }\n        }\n    };\n}\nfunction Accessor_Float64(Base) {\n    return class _Accessor_Float64 extends Base {\n        get_val(ix) { return this.buffer.dv.getFloat64(this.elements_offset + 8 * ix, true); }\n        set_val(ix, value) { this.buffer.dv.setFloat64(this.elements_offset + 8 * ix, value, true); }\n        copy_from_ts_array(arr) {\n            let offset = this.elements_offset;\n            for (let n of arr) {\n                this.buffer.dv.setFloat64(offset, n, true);\n                offset += 8;\n            }\n        }\n    };\n}\nclass Vector_Direct2 extends Vector {\n    element_size;\n    flat_struct_constructor;\n    *[Symbol.iterator]() {\n        let size = this.elements_size;\n        for (let ix = 0; ix < size; ++ix) {\n            yield new this.flat_struct_constructor(this.buffer, this.elements_offset + this.element_size * ix);\n        }\n    }\n    constructor(buffer, offset, element_size, flat_struct_constructor) {\n        super(buffer, offset);\n        this.element_size = element_size;\n        this.flat_struct_constructor = flat_struct_constructor;\n    }\n}\nexports.Vector_Direct2 = Vector_Direct2;\nclass Array_Direct2 extends FlatArray {\n    element_size;\n    flat_struct_constructor;\n    *[Symbol.iterator]() {\n        let size = this.elements_size;\n        for (let ix = 0; ix < size; ++ix) {\n            yield new this.flat_struct_constructor(this.buffer, this.elements_offset + this.element_size * ix);\n        }\n    }\n    constructor(buffer, offset, element_size, flat_struct_constructor, size) {\n        super(buffer, offset, size);\n        this.element_size = element_size;\n        this.flat_struct_constructor = flat_struct_constructor;\n    }\n}\nexports.Array_Direct2 = Array_Direct2;\nclass String_Direct1 extends Iterable(Accessor_U8(Vector)) {\n    assign(str) {\n        let utf8_string = new TextEncoder().encode(str);\n        let offset = _alloc(this.buffer, this.offset, utf8_string.length, 1, 1);\n        new Uint8Array(this.buffer.array_buffer, offset).set(utf8_string);\n    }\n}\nexports.String_Direct1 = String_Direct1;\nclass Vector_Direct1_u8 extends Iterable(Accessor_U8(Vector)) {\n}\nexports.Vector_Direct1_u8 = Vector_Direct1_u8;\nclass Vector_Direct1_i8 extends Iterable(Accessor_I8(Vector)) {\n}\nexports.Vector_Direct1_i8 = Vector_Direct1_i8;\nclass Vector_Direct1_u16 extends Iterable(Accessor_U16(Vector)) {\n}\nexports.Vector_Direct1_u16 = Vector_Direct1_u16;\nclass Vector_Direct1_i16 extends Iterable(Accessor_I16(Vector)) {\n}\nexports.Vector_Direct1_i16 = Vector_Direct1_i16;\nclass Vector_Direct1_u32 extends Iterable(Accessor_U32(Vector)) {\n}\nexports.Vector_Direct1_u32 = Vector_Direct1_u32;\nclass Vector_Direct1_i32 extends Iterable(Accessor_I32(Vector)) {\n}\nexports.Vector_Direct1_i32 = Vector_Direct1_i32;\nclass Vector_Direct1_u64 extends Iterable(Accessor_U64(Vector)) {\n}\nexports.Vector_Direct1_u64 = Vector_Direct1_u64;\nclass Vector_Direct1_i64 extends Iterable(Accessor_I64(Vector)) {\n}\nexports.Vector_Direct1_i64 = Vector_Direct1_i64;\nclass Vector_Direct1_float32 extends Iterable(Accessor_Float32(Vector)) {\n}\nexports.Vector_Direct1_float32 = Vector_Direct1_float32;\nclass Vector_Direct1_float64 extends Iterable(Accessor_Float64(Vector)) {\n}\nexports.Vector_Direct1_float64 = Vector_Direct1_float64;\nclass Array_Direct1_u8 extends Iterable(Accessor_U8(FlatArray)) {\n}\nexports.Array_Direct1_u8 = Array_Direct1_u8;\nclass Array_Direct1_i8 extends Iterable(Accessor_I8(FlatArray)) {\n}\nexports.Array_Direct1_i8 = Array_Direct1_i8;\nclass Array_Direct1_u16 extends Iterable(Accessor_U16(FlatArray)) {\n}\nexports.Array_Direct1_u16 = Array_Direct1_u16;\nclass Array_Direct1_i16 extends Iterable(Accessor_I16(FlatArray)) {\n}\nexports.Array_Direct1_i16 = Array_Direct1_i16;\nclass Array_Direct1_u32 extends Iterable(Accessor_U32(FlatArray)) {\n}\nexports.Array_Direct1_u32 = Array_Direct1_u32;\nclass Array_Direct1_i32 extends Iterable(Accessor_I32(FlatArray)) {\n}\nexports.Array_Direct1_i32 = Array_Direct1_i32;\nclass Array_Direct1_u64 extends Iterable(Accessor_U64(FlatArray)) {\n}\nexports.Array_Direct1_u64 = Array_Direct1_u64;\nclass Array_Direct1_i64 extends Iterable(Accessor_I64(FlatArray)) {\n}\nexports.Array_Direct1_i64 = Array_Direct1_i64;\nclass Array_Direct1_float32 extends Iterable(Accessor_Float32(FlatArray)) {\n}\nexports.Array_Direct1_float32 = Array_Direct1_float32;\nclass Array_Direct1_float64 extends Iterable(Accessor_Float64(FlatArray)) {\n}\nexports.Array_Direct1_float64 = Array_Direct1_float64;\n\n\n//# sourceURL=webpack://nprpc_runtime/./src/flat.ts?')},"./src/flat_buffer.ts":
/*!****************************!*\
      !*** ./src/flat_buffer.ts ***!
      \****************************/(__unused_webpack_module,exports)=>{eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.FlatBuffer = void 0;\nclass FlatBuffer {\n    capacity;\n    size_;\n    array_buffer;\n    dv;\n    static from_array_buffer(array_buffer) {\n        let b = new FlatBuffer();\n        b.array_buffer = array_buffer;\n        b.size_ = b.capacity = array_buffer.byteLength;\n        b.dv = new DataView(b.array_buffer);\n        return b;\n    }\n    static create(initial_capacity = 512) {\n        let b = new FlatBuffer();\n        b.capacity = initial_capacity;\n        b.size_ = 0;\n        b.array_buffer = new ArrayBuffer(initial_capacity);\n        b.dv = new DataView(b.array_buffer);\n        return b;\n    }\n    prepare(n) {\n        if (this.size_ + n > this.capacity) {\n            this.capacity = Math.max(this.capacity * 2, this.capacity + n);\n            let new_buffer = new ArrayBuffer(this.capacity);\n            new Uint8Array(new_buffer).set(new Uint8Array(this.array_buffer));\n            this.array_buffer = new_buffer;\n            this.dv = new DataView(this.array_buffer);\n        }\n    }\n    consume(n) { this.size_ -= n; }\n    commit(n) { this.size_ += n; }\n    get offset() { return this.size_; }\n    get size() { return this.size_; }\n    write_len(msg_len) {\n        this.dv.setUint32(0, msg_len, true);\n    }\n    write_msg_id(msg) {\n        this.dv.setUint32(4, msg, true);\n    }\n    read_msg_id() {\n        return this.dv.getUint32(4, true);\n    }\n    write_msg_type(msg) {\n        this.dv.setUint32(8, msg, true);\n    }\n    read_msg_type() {\n        return this.dv.getUint32(8, true);\n    }\n    read_exception_number() {\n        return this.dv.getUint32(16, true);\n    }\n    get writable_view() {\n        return new DataView(this.array_buffer, 0, this.size);\n    }\n    set_buffer(abuf) {\n        this.array_buffer = abuf;\n        this.size_ = this.capacity = abuf.byteLength;\n        this.dv = new DataView(this.array_buffer);\n    }\n    dump() {\n        let s = new String();\n        new Uint8Array(this.array_buffer, 0, this.size).forEach((x) => s += x.toString(16) + ' ');\n        console.log(s);\n    }\n}\nexports.FlatBuffer = FlatBuffer;\n\n\n//# sourceURL=webpack://nprpc_runtime/./src/flat_buffer.ts?")},"./src/index.ts":
/*!**********************!*\
      !*** ./src/index.ts ***!
      \**********************/function(__unused_webpack_module,exports,__webpack_require__){eval('\n// Copyright (c) 2021 nikitapnn1@gmail.com\n// This file is a part of npsystem (Distributed Control System) and covered by LICENSING file in the topmost directory\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.get_nameserver = void 0;\n__exportStar(__webpack_require__(/*! ./nprpc */ "./src/nprpc.ts"), exports);\n__exportStar(__webpack_require__(/*! ./nprpc_nameserver */ "./src/nprpc_nameserver.ts"), exports);\nconst nprpc_nameserver_1 = __webpack_require__(/*! ./nprpc_nameserver */ "./src/nprpc_nameserver.ts");\nfunction sip4_to_u32(str) {\n    let rx = /(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)/ig;\n    let parts = rx.exec(str);\n    if (parts.length != 5)\n        throw "ip address is incorrect";\n    return Number(parts[1]) << 24 | Number(parts[2]) << 16 | Number(parts[3]) << 8 | Number(parts[4]);\n}\nfunction get_nameserver(nameserver_ip) {\n    let obj = new nprpc_nameserver_1.Nameserver();\n    obj.data.ip4 = sip4_to_u32(nameserver_ip);\n    obj.data.port = 15000;\n    obj.data.websocket_port = 15001;\n    obj.data.poa_idx = 0;\n    obj.data.object_id = 0n;\n    obj.data.flags = 0;\n    obj.data.class_id = nprpc_nameserver_1._INameserver_Servant._get_class();\n    return obj;\n}\nexports.get_nameserver = get_nameserver;\n\n\n//# sourceURL=webpack://nprpc_runtime/./src/index.ts?')},"./src/nprpc.ts":
/*!**********************!*\
      !*** ./src/nprpc.ts ***!
      \**********************/function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\n}) : function(o, v) {\n    o["default"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.set_debug_level = exports.init = exports.rpc = exports.create_object_from_flat = exports.narrow = exports.oid_create_from_flat = exports.handle_standart_reply = exports.ReferenceList = exports.make_simple_answer = exports.ObjectServant = exports.ObjectProxy = exports.Poa = exports.Rpc = exports.Connection = exports.make_ref = exports.FlatBuffer = exports.Flat = void 0;\nconst Flat = __importStar(__webpack_require__(/*! ./flat */ "./src/flat.ts"));\nexports.Flat = Flat;\nconst flat_buffer_1 = __webpack_require__(/*! ./flat_buffer */ "./src/flat_buffer.ts");\nObject.defineProperty(exports, "FlatBuffer", ({ enumerable: true, get: function () { return flat_buffer_1.FlatBuffer; } }));\n__exportStar(__webpack_require__(/*! ./exception */ "./src/exception.ts"), exports);\n__exportStar(__webpack_require__(/*! ./nprpc */ "./src/nprpc.ts"), exports);\n__exportStar(__webpack_require__(/*! ./nprpc_base */ "./src/nprpc_base.ts"), exports);\nconst exception_1 = __webpack_require__(/*! ./exception */ "./src/exception.ts");\n//import { FlatBuffer } from "./flat_buffer";\nconst nprpc_base_1 = __webpack_require__(/*! ./nprpc_base */ "./src/nprpc_base.ts");\nconst header_size = 16;\nlet g_debug_level = 0 /* DebugLevel_Critical */;\n;\nfunction make_ref() {\n    return { value: undefined };\n}\nexports.make_ref = make_ref;\nclass MyPromise {\n    actual_promise_;\n    resolve_;\n    reject_;\n    constructor() {\n        this.actual_promise_ = new Promise((resolve, reject) => {\n            this.resolve_ = (x) => { resolve(x); };\n            this.reject_ = (x) => { reject(x); };\n        });\n    }\n    get $() { return this.actual_promise_; }\n    set_promise(value) {\n        this.resolve_(value);\n    }\n    set_exception(ec) {\n        this.reject_(ec);\n    }\n}\nfunction get_object(buffer, poa_idx, object_id) {\n    do {\n        let poa = exports.rpc.get_poa(poa_idx);\n        if (!poa) {\n            make_simple_answer(buffer, 6 /* Error_PoaNotExist */);\n            console.log("Bad poa index. " + poa_idx);\n            break;\n        }\n        let obj = poa.get_object(object_id);\n        if (!obj) {\n            make_simple_answer(buffer, 7 /* Error_ObjectNotExist */);\n            console.log("Object not found. " + object_id);\n            break;\n        }\n        return obj;\n    } while (true);\n    return null;\n}\nclass Connection {\n    endpoint;\n    ws;\n    queue;\n    async perform_one() {\n        this.ws.send(this.queue[0].buffer.writable_view);\n    }\n    on_open() {\n        if (this.queue.length)\n            this.perform_one();\n    }\n    async send_receive(buffer, timeout_ms) {\n        let promise = new MyPromise();\n        this.queue.push({ buffer: buffer, promise: promise });\n        if (this.ws.readyState && this.queue.length == 1)\n            this.perform_one();\n        return promise.$;\n    }\n    on_read(ev) {\n        let buf = flat_buffer_1.FlatBuffer.from_array_buffer(ev.data);\n        if (buf.read_msg_type() == 1 /* Answer */) {\n            let task = this.queue[0];\n            task.buffer.set_buffer(ev.data);\n            this.queue.shift();\n            task.promise.set_promise();\n            if (this.queue.length)\n                this.perform_one();\n        }\n        else {\n            switch (buf.read_msg_id()) {\n                case 0 /* FunctionCall */: {\n                    let ch = new nprpc_base_1.impl.Flat_nprpc_base.CallHeader_Direct(buf, header_size);\n                    if (g_debug_level >= 2 /* DebugLevel_EveryCall */) {\n                        console.log("FunctionCall. interface_idx: " + ch.interface_idx + " , fn_idx: " + ch.function_idx\n                            + " , poa_idx: " + ch.poa_idx + " , oid: " + ch.object_id);\n                    }\n                    let obj = get_object(buf, ch.poa_idx, ch.object_id);\n                    if (obj) {\n                        //console.log(obj);\n                        obj.dispatch(buf, this.endpoint, false);\n                    }\n                    break;\n                }\n                case 2 /* AddReference */: {\n                    let msg = new nprpc_base_1.detail.Flat_nprpc_base.ObjectIdLocal_Direct(buf, header_size);\n                    //detail::ObjectIdLocal oid{ msg.poa_idx(), msg.object_id() };\n                    if (g_debug_level >= 2 /* DebugLevel_EveryCall */) {\n                        console.log("AddReference. poa_idx: " + msg.poa_idx + " , oid: " + msg.object_id);\n                    }\n                    let obj = get_object(buf, msg.poa_idx, msg.object_id);\n                    if (obj) {\n                        //\tif (g_cfg.debug_level >= DebugLevel_EveryCall) {\n                        //\t\tstd::cout << "Refference added." << std::endl;\n                        //\t}\n                        make_simple_answer(buf, 4 /* Success */);\n                    }\n                    break;\n                }\n                case 3 /* ReleaseObject */: {\n                    let msg = new nprpc_base_1.detail.Flat_nprpc_base.ObjectIdLocal_Direct(buf, header_size);\n                    //detail::ObjectIdLocal oid{ msg.poa_idx(), msg.object_id() };\n                    //if (g_cfg.debug_level >= DebugLevel_EveryCall) {\n                    //\tstd::cout << "ReleaseObject. " << "poa_idx: " << oid.poa_idx << ", oid: " << oid.object_id << std::endl;\n                    //}\n                    //if (ref_list_.remove_ref(msg.poa_idx(), msg.object_id())) {\n                    //\tmake_simple_answer(rx_buffer_(), nprpc::impl::MessageId::Success);\n                    //} else {\n                    //\tmake_simple_answer(rx_buffer_(), nprpc::impl::MessageId::Error_ObjectNotExist);\n                    //}\n                    break;\n                }\n                default:\n                    make_simple_answer(buf, 10 /* Error_UnknownMessageId */);\n                    break;\n            }\n            this.ws.send(buf.writable_view);\n        }\n    }\n    on_close() { }\n    on_error(ev) {\n        ///\tif (buf.read_msg_type() == impl.MessageType.Answer) {\n        //\t\tlet task = this.queue[0];\n        //\t\ttask.buffer.set_buffer(ev.data as ArrayBuffer);\n        //\t\tthis.queue.shift();\n        //\t\ttask.promise.set_promise();\n        //\t}\n    }\n    constructor(endpoint) {\n        this.endpoint = endpoint;\n        this.queue = new Array();\n        let ip4tostr = (ip4) => (ip4 >> 24 & 0xFF) + \'.\' + (ip4 >> 16 & 0xFF) + \'.\' + (ip4 >> 8 & 0xFF) + \'.\' + (ip4 & 0xFF);\n        this.ws = new WebSocket(\'ws://\' + ip4tostr(this.endpoint.ip4) + \':\' + this.endpoint.port.toString(10));\n        this.ws.binaryType = \'arraybuffer\';\n        this.ws.onopen = this.on_open.bind(this);\n        this.ws.onclose = this.on_close.bind(this);\n        this.ws.onmessage = this.on_read.bind(this);\n        this.ws.onerror = this.on_error.bind(this);\n    }\n}\nexports.Connection = Connection;\nclass Rpc {\n    /** @internal */\n    last_poa_id_;\n    /** @internal */\n    opened_connections_;\n    /** @internal */\n    poa_list_;\n    get_connection(endpoint) {\n        let founded = this.opened_connections_.find(c => c.endpoint.ip4 === endpoint.ip4 && c.endpoint.port == endpoint.port);\n        if (founded)\n            return founded;\n        let con = new Connection(endpoint);\n        this.opened_connections_.push(con);\n        return con;\n    }\n    create_poa(poa_size) {\n        let poa = new Poa(this.last_poa_id_++, poa_size);\n        this.poa_list_.push(poa);\n        return poa;\n    }\n    get_poa(poa_idx) {\n        if (poa_idx >= this.poa_list_.length || poa_idx < 0)\n            return null;\n        return this.poa_list_[poa_idx];\n    }\n    async call(endpoint, buffer, timeout_ms = 2500) {\n        return this.get_connection(endpoint).send_receive(buffer, timeout_ms);\n    }\n    constructor() {\n        this.last_poa_id_ = 0;\n        this.opened_connections_ = new Array();\n        this.poa_list_ = new Array();\n    }\n}\nexports.Rpc = Rpc;\nconst index = (oid) => {\n    return Number(0xffffffffn & oid);\n};\nconst generation_index = (oid) => {\n    return Number(oid >> 32n);\n};\nclass Storage {\n    max_size_;\n    data_;\n    tail_idx_;\n    add(val) {\n        let old_free_idx = this.tail_idx_;\n        if (old_free_idx == this.max_size_)\n            return invalid_object_id;\n        let old_free = this.data_[this.tail_idx_];\n        this.tail_idx_ = index(old_free.oid); // next free\n        old_free.obj = val;\n        return BigInt(old_free_idx) | (BigInt(generation_index(old_free.oid)) << 32n);\n    }\n    remove(oid) {\n        let idx = index(oid);\n        this.data_[idx].oid = BigInt(this.tail_idx_) | BigInt(generation_index(oid) + 1);\n        this.data_[idx].obj = null;\n        this.tail_idx_ = idx;\n    }\n    get(oid) {\n        let idx = index(oid);\n        if (idx >= this.max_size_)\n            return null;\n        let obj = this.data_[idx];\n        if (generation_index(obj.oid) != generation_index(oid))\n            return null;\n        return obj.obj;\n    }\n    constructor(max_size) {\n        this.max_size_ = max_size;\n        this.data_ = new Array(this.max_size_);\n        for (let i = 0; i < this.max_size_; ++i) {\n            this.data_[i] = { oid: BigInt(i + 1), obj: null };\n        }\n        Object.seal(this.data_);\n        this.tail_idx_ = 0;\n    }\n}\nclass Poa {\n    /** @internal */\n    object_map_;\n    /** @internal */\n    index_;\n    get index() { return this.index_; }\n    get_object(oid) {\n        return this.object_map_.get(oid);\n    }\n    activate_object(obj) {\n        //console.log({obj: obj});\n        obj.poa_ = this;\n        obj.activation_time_ = Date.now();\n        let object_id_internal = this.object_map_.add(obj);\n        if (object_id_internal === invalid_object_id)\n            throw new exception_1.Exception("Poa fixed size has been exceeded");\n        obj.object_id_ = object_id_internal;\n        obj.ref_cnt_ = 0;\n        let oid = {\n            object_id: object_id_internal,\n            ip4: localhost_ip4,\n            port: 0,\n            websocket_port: 0,\n            poa_idx: this.index,\n            flags: (1 << 1 /* WebObject */),\n            class_id: obj.get_class()\n        };\n        //if (pl_lifespan == Policy_Lifespan::Type::Transient) {\n        //\tstd::lock_guard<std::mutex> lk(g_orb->new_activated_objects_mut_);\n        //\tg_orb->new_activated_objects_.push_back(obj);\n        //}\n        return oid;\n    }\n    deactivate_object(object_id) {\n        //auto obj = object_map_.get(object_id);\n        //if (obj) {\n        //\tobj->to_delete_.store(true);\n        //\tobject_map_.remove(object_id);\n        //} else {\n        //\tstd::cerr << "deactivate_object: object not found. id = " << object_id << \'\\n\';\n        //}\n    }\n    constructor(index, max_size) {\n        this.index_ = index;\n        this.object_map_ = new Storage(max_size);\n    }\n}\nexports.Poa = Poa;\nclass ObjectProxy {\n    data;\n    /** @internal */\n    local_ref_cnt_;\n    /** @internal */\n    timeout_ms_;\n    constructor(data) {\n        if (!data)\n            this.data = new Object();\n        else\n            this.data = data;\n        this.timeout_ms_ = 1000;\n        this.local_ref_cnt_ = 0;\n    }\n    get timeout() { return this.timeout_ms_; }\n    add_ref() {\n        this.local_ref_cnt_++;\n        if (this.local_ref_cnt_ != 1)\n            return this.local_ref_cnt_;\n        const msg_size = header_size + 16;\n        let buf = flat_buffer_1.FlatBuffer.create(msg_size);\n        buf.write_len(msg_size - 4);\n        buf.write_msg_id(2 /* AddReference */);\n        buf.write_msg_type(0 /* Request */);\n        let msg = new nprpc_base_1.detail.Flat_nprpc_base.ObjectIdLocal_Direct(buf, header_size);\n        msg.poa_idx = this.data.poa_idx;\n        msg.object_id = this.data.object_id;\n        buf.commit(msg_size);\n        exports.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout).then().catch();\n        return this.local_ref_cnt_;\n    }\n    release() {\n        if (--this.local_ref_cnt_ != 0)\n            return this.local_ref_cnt_;\n        const msg_size = header_size + 16;\n        let buf = flat_buffer_1.FlatBuffer.create(msg_size);\n        buf.write_len(msg_size - 4);\n        buf.write_msg_id(3 /* ReleaseObject */);\n        buf.write_msg_type(0 /* Request */);\n        let msg = new nprpc_base_1.detail.Flat_nprpc_base.ObjectIdLocal_Direct(buf, header_size);\n        msg.poa_idx = this.data.poa_idx;\n        msg.object_id = this.data.object_id;\n        buf.commit(msg_size);\n        exports.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout).then().catch();\n        return 0;\n    }\n}\nexports.ObjectProxy = ObjectProxy;\nclass ObjectServant {\n    poa_;\n    object_id_;\n    activation_time_;\n    ref_cnt_;\n    get poa() { return this.poa_; }\n    get oid() { return this.object_id_; }\n    add_ref() {\n        let cnt = ++this.ref_cnt_;\n        //if (cnt == 1 && static_cast<impl::PoaImpl*>(poa())->pl_lifespan == Policy_Lifespan::Transient) {\n        //\tstd::lock_guard<std::mutex> lk(impl::g_orb->new_activated_objects_mut_);\n        //\tauto& list = impl::g_orb->new_activated_objects_;\n        //\tlist.erase(std::find(begin(list), end(list), this));\n        //}\n        return cnt;\n    }\n    constructor() {\n        this.ref_cnt_ = 0;\n    }\n}\nexports.ObjectServant = ObjectServant;\n;\nfunction make_simple_answer(buf, message_id) {\n    buf.consume(buf.size);\n    buf.prepare(header_size);\n    buf.write_len(header_size - 4);\n    buf.write_msg_id(message_id);\n    buf.write_msg_type(1 /* Answer */);\n    buf.commit(header_size);\n}\nexports.make_simple_answer = make_simple_answer;\nclass ReferenceList {\n    refs;\n    add_ref(obj) {\n        this.refs.push({\n            object_id: { poa_idx: obj.poa.index, object_id: obj.oid },\n            obj: obj\n        });\n        obj.add_ref();\n    }\n    // false - reference not exist\n    remove_ref(poa_idx, oid) {\n        return false;\n    }\n    constructor() {\n        this.refs = new Array();\n    }\n}\nexports.ReferenceList = ReferenceList;\n;\n//  0 - Success\n//  1 - exception\n// -1 - not handled\nfunction handle_standart_reply(buf) {\n    //if (buf.size < 8) throw new ExceptionCommFailure();\n    switch (buf.read_msg_id()) {\n        case 4 /* Success */:\n            return 0;\n        case 5 /* Exception */:\n            return 1;\n        case 7 /* Error_ObjectNotExist */:\n            throw new nprpc_base_1.ExceptionObjectNotExist();\n        case 8 /* Error_CommFailure */:\n            throw new nprpc_base_1.ExceptionCommFailure();\n        case 9 /* Error_UnknownFunctionIdx */:\n            throw new nprpc_base_1.ExceptionUnknownFunctionIndex();\n        case 10 /* Error_UnknownMessageId */:\n            throw new nprpc_base_1.ExceptionUnknownMessageId();\n        default:\n            return -1;\n    }\n}\nexports.handle_standart_reply = handle_standart_reply;\nfunction oid_create_from_flat(o) {\n    return {\n        object_id: o.object_id,\n        ip4: o.ip4,\n        port: o.port,\n        websocket_port: o.websocket_port,\n        poa_idx: o.poa_idx,\n        flags: o.flags,\n        class_id: o.class_id\n    };\n}\nexports.oid_create_from_flat = oid_create_from_flat;\nfunction narrow(from, to) {\n    if (from.data.class_id !== to.servant_t._get_class())\n        return null;\n    let obj = new to();\n    obj.data = from.data;\n    obj.local_ref_cnt_ = from.local_ref_cnt_;\n    obj.timeout_ms_ = from.timeout_ms_;\n    from.data = null;\n    from.local_ref_cnt_ = 0;\n    return obj;\n}\nexports.narrow = narrow;\nconst invalid_object_id = 0xffffffffffffffffn;\nconst localhost_ip4 = 0x7F000001;\nfunction create_object_from_flat(oid, remote_ip) {\n    if (oid.object_id == invalid_object_id)\n        return null;\n    let obj = new ObjectProxy();\n    obj.data.object_id = oid.object_id;\n    if (remote_ip == localhost_ip4) {\n        // could be the object on the same machine or from any other location\n        obj.data.ip4 = oid.ip4;\n    }\n    else {\n        if (oid.ip4 == localhost_ip4) {\n            // remote object has localhost ip converting to endpoint ip\n            obj.data.ip4 = remote_ip;\n        }\n        else {\n            // remote object with ip != localhost\n            obj.data.ip4 = oid.ip4;\n        }\n    }\n    obj.data.port = oid.port;\n    obj.data.websocket_port = oid.websocket_port;\n    obj.data.poa_idx = oid.poa_idx;\n    obj.data.flags = oid.flags;\n    obj.data.class_id = oid.class_id;\n    return obj;\n}\nexports.create_object_from_flat = create_object_from_flat;\nfunction init() {\n    exports.rpc = new Rpc();\n    return exports.rpc;\n}\nexports.init = init;\nfunction set_debug_level(debug_level) {\n    g_debug_level = debug_level;\n}\nexports.set_debug_level = set_debug_level;\n\n\n//# sourceURL=webpack://nprpc_runtime/./src/nprpc.ts?')},"./src/nprpc_base.ts":
/*!***************************!*\
      !*** ./src/nprpc_base.ts ***!
      \***************************/function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\n}) : function(o, v) {\n    o["default"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.impl = exports.detail = exports.ExceptionUnknownMessageId = exports.ExceptionUnknownFunctionIndex = exports.ExceptionObjectNotExist = exports.ExceptionTimeout = exports.Flat_nprpc_base = exports.ExceptionCommFailure = void 0;\nconst NPRPC = __importStar(__webpack_require__(/*! ./nprpc */ "./src/nprpc.ts"));\nclass ExceptionCommFailure extends NPRPC.Exception {\n    constructor() { super("ExceptionCommFailure"); }\n}\nexports.ExceptionCommFailure = ExceptionCommFailure;\nvar Flat_nprpc_base;\n(function (Flat_nprpc_base) {\n    class ExceptionCommFailure_Direct extends NPRPC.Flat.Flat {\n        get __ex_id() { return this.buffer.dv.getUint32(this.offset + 0, true); }\n        set __ex_id(value) { this.buffer.dv.setUint32(this.offset + 0, value, true); }\n    }\n    Flat_nprpc_base.ExceptionCommFailure_Direct = ExceptionCommFailure_Direct;\n})(Flat_nprpc_base = exports.Flat_nprpc_base || (exports.Flat_nprpc_base = {})); // namespace Flat \nclass ExceptionTimeout extends NPRPC.Exception {\n    constructor() { super("ExceptionTimeout"); }\n}\nexports.ExceptionTimeout = ExceptionTimeout;\n(function (Flat_nprpc_base) {\n    class ExceptionTimeout_Direct extends NPRPC.Flat.Flat {\n        get __ex_id() { return this.buffer.dv.getUint32(this.offset + 0, true); }\n        set __ex_id(value) { this.buffer.dv.setUint32(this.offset + 0, value, true); }\n    }\n    Flat_nprpc_base.ExceptionTimeout_Direct = ExceptionTimeout_Direct;\n})(Flat_nprpc_base = exports.Flat_nprpc_base || (exports.Flat_nprpc_base = {})); // namespace Flat \nclass ExceptionObjectNotExist extends NPRPC.Exception {\n    constructor() { super("ExceptionObjectNotExist"); }\n}\nexports.ExceptionObjectNotExist = ExceptionObjectNotExist;\n(function (Flat_nprpc_base) {\n    class ExceptionObjectNotExist_Direct extends NPRPC.Flat.Flat {\n        get __ex_id() { return this.buffer.dv.getUint32(this.offset + 0, true); }\n        set __ex_id(value) { this.buffer.dv.setUint32(this.offset + 0, value, true); }\n    }\n    Flat_nprpc_base.ExceptionObjectNotExist_Direct = ExceptionObjectNotExist_Direct;\n})(Flat_nprpc_base = exports.Flat_nprpc_base || (exports.Flat_nprpc_base = {})); // namespace Flat \nclass ExceptionUnknownFunctionIndex extends NPRPC.Exception {\n    constructor() { super("ExceptionUnknownFunctionIndex"); }\n}\nexports.ExceptionUnknownFunctionIndex = ExceptionUnknownFunctionIndex;\n(function (Flat_nprpc_base) {\n    class ExceptionUnknownFunctionIndex_Direct extends NPRPC.Flat.Flat {\n        get __ex_id() { return this.buffer.dv.getUint32(this.offset + 0, true); }\n        set __ex_id(value) { this.buffer.dv.setUint32(this.offset + 0, value, true); }\n    }\n    Flat_nprpc_base.ExceptionUnknownFunctionIndex_Direct = ExceptionUnknownFunctionIndex_Direct;\n})(Flat_nprpc_base = exports.Flat_nprpc_base || (exports.Flat_nprpc_base = {})); // namespace Flat \nclass ExceptionUnknownMessageId extends NPRPC.Exception {\n    constructor() { super("ExceptionUnknownMessageId"); }\n}\nexports.ExceptionUnknownMessageId = ExceptionUnknownMessageId;\n(function (Flat_nprpc_base) {\n    class ExceptionUnknownMessageId_Direct extends NPRPC.Flat.Flat {\n        get __ex_id() { return this.buffer.dv.getUint32(this.offset + 0, true); }\n        set __ex_id(value) { this.buffer.dv.setUint32(this.offset + 0, value, true); }\n    }\n    Flat_nprpc_base.ExceptionUnknownMessageId_Direct = ExceptionUnknownMessageId_Direct;\n})(Flat_nprpc_base = exports.Flat_nprpc_base || (exports.Flat_nprpc_base = {})); // namespace Flat \nvar detail;\n(function (detail) {\n    let Flat_nprpc_base;\n    (function (Flat_nprpc_base) {\n        class ObjectIdLocal_Direct extends NPRPC.Flat.Flat {\n            get poa_idx() { return this.buffer.dv.getUint16(this.offset + 0, true); }\n            set poa_idx(value) { this.buffer.dv.setUint16(this.offset + 0, value, true); }\n            get object_id() { return this.buffer.dv.getBigUint64(this.offset + 8, true); }\n            set object_id(value) { this.buffer.dv.setBigUint64(this.offset + 8, value, true); }\n        }\n        Flat_nprpc_base.ObjectIdLocal_Direct = ObjectIdLocal_Direct;\n    })(Flat_nprpc_base = detail.Flat_nprpc_base || (detail.Flat_nprpc_base = {})); // namespace Flat \n    (function (Flat_nprpc_base) {\n        class ObjectId_Direct extends NPRPC.Flat.Flat {\n            get object_id() { return this.buffer.dv.getBigUint64(this.offset + 0, true); }\n            set object_id(value) { this.buffer.dv.setBigUint64(this.offset + 0, value, true); }\n            get ip4() { return this.buffer.dv.getUint32(this.offset + 8, true); }\n            set ip4(value) { this.buffer.dv.setUint32(this.offset + 8, value, true); }\n            get port() { return this.buffer.dv.getUint16(this.offset + 12, true); }\n            set port(value) { this.buffer.dv.setUint16(this.offset + 12, value, true); }\n            get websocket_port() { return this.buffer.dv.getUint16(this.offset + 14, true); }\n            set websocket_port(value) { this.buffer.dv.setUint16(this.offset + 14, value, true); }\n            get poa_idx() { return this.buffer.dv.getUint16(this.offset + 16, true); }\n            set poa_idx(value) { this.buffer.dv.setUint16(this.offset + 16, value, true); }\n            get flags() { return this.buffer.dv.getUint32(this.offset + 20, true); }\n            set flags(value) { this.buffer.dv.setUint32(this.offset + 20, value, true); }\n            get class_id() {\n                let enc = new TextDecoder("utf-8");\n                let v_begin = this.offset + 24;\n                let data_offset = v_begin + this.buffer.dv.getUint32(v_begin, true);\n                let bn = this.buffer.array_buffer.slice(data_offset, data_offset + this.buffer.dv.getUint32(v_begin + 4, true));\n                return enc.decode(bn);\n            }\n            set class_id(str) {\n                let enc = new TextEncoder();\n                let bytes = enc.encode(str);\n                let len = bytes.length;\n                let offset = NPRPC.Flat._alloc(this.buffer, this.offset + 24, len, 1, 1);\n                new Uint8Array(this.buffer.array_buffer, offset).set(bytes);\n            }\n        }\n        Flat_nprpc_base.ObjectId_Direct = ObjectId_Direct;\n    })(Flat_nprpc_base = detail.Flat_nprpc_base || (detail.Flat_nprpc_base = {})); // namespace Flat \n})(detail = exports.detail || (exports.detail = {})); // namespace detail\nvar impl;\n(function (impl) {\n    let Flat_nprpc_base;\n    (function (Flat_nprpc_base) {\n        class Header_Direct extends NPRPC.Flat.Flat {\n            get size() { return this.buffer.dv.getUint32(this.offset + 0, true); }\n            set size(value) { this.buffer.dv.setUint32(this.offset + 0, value, true); }\n            get msg_id() { return this.buffer.dv.getUint32(this.offset + 4, true); }\n            set msg_id(value) { this.buffer.dv.setUint32(this.offset + 4, value, true); }\n            get msg_type() { return this.buffer.dv.getUint32(this.offset + 8, true); }\n            set msg_type(value) { this.buffer.dv.setUint32(this.offset + 8, value, true); }\n            get reserved() { return this.buffer.dv.getUint32(this.offset + 12, true); }\n            set reserved(value) { this.buffer.dv.setUint32(this.offset + 12, value, true); }\n        }\n        Flat_nprpc_base.Header_Direct = Header_Direct;\n    })(Flat_nprpc_base = impl.Flat_nprpc_base || (impl.Flat_nprpc_base = {})); // namespace Flat \n    (function (Flat_nprpc_base) {\n        class CallHeader_Direct extends NPRPC.Flat.Flat {\n            get poa_idx() { return this.buffer.dv.getUint16(this.offset + 0, true); }\n            set poa_idx(value) { this.buffer.dv.setUint16(this.offset + 0, value, true); }\n            get interface_idx() { return this.buffer.dv.getUint8(this.offset + 2); }\n            set interface_idx(value) { this.buffer.dv.setUint8(this.offset + 2, value); }\n            get function_idx() { return this.buffer.dv.getUint8(this.offset + 3); }\n            set function_idx(value) { this.buffer.dv.setUint8(this.offset + 3, value); }\n            get object_id() { return this.buffer.dv.getBigUint64(this.offset + 8, true); }\n            set object_id(value) { this.buffer.dv.setBigUint64(this.offset + 8, value, true); }\n        }\n        Flat_nprpc_base.CallHeader_Direct = CallHeader_Direct;\n    })(Flat_nprpc_base = impl.Flat_nprpc_base || (impl.Flat_nprpc_base = {})); // namespace Flat \n})(impl = exports.impl || (exports.impl = {})); // namespace impl\nfunction nprpc_base_throw_exception(buf) {\n    switch (buf.read_exception_number()) {\n        case 0:\n            {\n                let ex_flat = new Flat_nprpc_base.ExceptionCommFailure_Direct(buf, 16);\n                let ex = new ExceptionCommFailure();\n                throw ex;\n            }\n        case 1:\n            {\n                let ex_flat = new Flat_nprpc_base.ExceptionTimeout_Direct(buf, 16);\n                let ex = new ExceptionTimeout();\n                throw ex;\n            }\n        case 2:\n            {\n                let ex_flat = new Flat_nprpc_base.ExceptionObjectNotExist_Direct(buf, 16);\n                let ex = new ExceptionObjectNotExist();\n                throw ex;\n            }\n        case 3:\n            {\n                let ex_flat = new Flat_nprpc_base.ExceptionUnknownFunctionIndex_Direct(buf, 16);\n                let ex = new ExceptionUnknownFunctionIndex();\n                throw ex;\n            }\n        case 4:\n            {\n                let ex_flat = new Flat_nprpc_base.ExceptionUnknownMessageId_Direct(buf, 16);\n                let ex = new ExceptionUnknownMessageId();\n                throw ex;\n            }\n        default:\n            throw "unknown rpc exception";\n    }\n}\n\n\n//# sourceURL=webpack://nprpc_runtime/./src/nprpc_base.ts?')},"./src/nprpc_nameserver.ts":
/*!*********************************!*\
      !*** ./src/nprpc_nameserver.ts ***!
      \*********************************/function(__unused_webpack_module,exports,__webpack_require__){eval('\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, "default", { enumerable: true, value: v });\n}) : function(o, v) {\n    o["default"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.Flat_nprpc_nameserver = exports._INameserver_Servant = exports.Nameserver = void 0;\nconst NPRPC = __importStar(__webpack_require__(/*! ./nprpc */ "./src/nprpc.ts"));\nclass Nameserver extends NPRPC.ObjectProxy {\n    static get servant_t() {\n        return _INameserver_Servant;\n    }\n    async Bind(obj, name) {\n        let interface_idx = (arguments.length == 2 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(200);\n        buf.commit(72);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 0;\n        let _ = new Flat_nprpc_nameserver.nprpc_nameserver_M1_Direct(buf, 32);\n        _._1.object_id = obj.object_id;\n        _._1.ip4 = obj.ip4;\n        _._1.port = obj.port;\n        _._1.websocket_port = obj.websocket_port;\n        _._1.poa_idx = obj.poa_idx;\n        _._1.flags = obj.flags;\n        _._1.class_id = obj.class_id;\n        _._2 = name;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != 0) {\n            console.log("received an unusual reply for function with no output arguments");\n        }\n    }\n    async Resolve(name, obj) {\n        let interface_idx = (arguments.length == 2 ? 0 : arguments[arguments.length - 1]);\n        let buf = NPRPC.FlatBuffer.create();\n        buf.prepare(168);\n        buf.commit(40);\n        buf.write_msg_id(0 /* FunctionCall */);\n        buf.write_msg_type(0 /* Request */);\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        __ch.object_id = this.data.object_id;\n        __ch.poa_idx = this.data.poa_idx;\n        __ch.interface_idx = interface_idx;\n        __ch.function_idx = 1;\n        let _ = new Flat_nprpc_nameserver.nprpc_nameserver_M2_Direct(buf, 32);\n        _._1 = name;\n        buf.write_len(buf.size - 4);\n        await NPRPC.rpc.call({ ip4: this.data.ip4, port: this.data.websocket_port }, buf, this.timeout);\n        let std_reply = NPRPC.handle_standart_reply(buf);\n        if (std_reply != -1) {\n            console.log("received an unusual reply for function with output arguments");\n            throw new NPRPC.Exception("Unknown Error");\n        }\n        let out = new Flat_nprpc_nameserver.nprpc_nameserver_M3_Direct(buf, 16);\n        obj.value = NPRPC.create_object_from_flat(out._2, this.data.ip4);\n        let __ret_value /*boolean*/;\n        __ret_value = out._1;\n        return __ret_value;\n    }\n}\nexports.Nameserver = Nameserver;\n;\nclass _INameserver_Servant extends NPRPC.ObjectServant {\n    static _get_class() { return "nprpc_nameserver/nprpc.Nameserver"; }\n    get_class = () => { return _INameserver_Servant._get_class(); };\n    dispatch = (buf, remote_endpoint, from_parent) => {\n        _INameserver_Servant._dispatch(this, buf, remote_endpoint, from_parent);\n    };\n    static _dispatch(obj, buf, remote_endpoint, from_parent) {\n        let __ch = new NPRPC.impl.Flat_nprpc_base.CallHeader_Direct(buf, 16);\n        switch (__ch.function_idx) {\n            case 0: {\n                let ia = new Flat_nprpc_nameserver.nprpc_nameserver_M1_Direct(buf, 32);\n                obj.Bind(NPRPC.create_object_from_flat(ia._1, remote_endpoint.ip4), ia._2);\n                NPRPC.make_simple_answer(buf, 4 /* Success */);\n                break;\n            }\n            case 1: {\n                let ia = new Flat_nprpc_nameserver.nprpc_nameserver_M2_Direct(buf, 32);\n                let obuf = buf;\n                obuf.consume(obuf.size);\n                obuf.prepare(184);\n                obuf.commit(56);\n                let oa = new Flat_nprpc_nameserver.nprpc_nameserver_M3_Direct(obuf, 16);\n                let __ret_val /*boolean*/;\n                __ret_val = obj.Resolve(ia._1, oa._2);\n                oa._1 = __ret_val;\n                obuf.write_len(obuf.size - 4);\n                obuf.write_msg_id(1 /* BlockResponse */);\n                obuf.write_msg_type(1 /* Answer */);\n                break;\n            }\n            default:\n                NPRPC.make_simple_answer(buf, 9 /* Error_UnknownFunctionIdx */);\n        }\n    }\n}\nexports._INameserver_Servant = _INameserver_Servant;\nvar Flat_nprpc_nameserver;\n(function (Flat_nprpc_nameserver) {\n    class nprpc_nameserver_M1_Direct extends NPRPC.Flat.Flat {\n        get _1() { return new NPRPC.detail.Flat_nprpc_base.ObjectId_Direct(this.buffer, this.offset + 0); }\n        get _2() {\n            let enc = new TextDecoder("utf-8");\n            let v_begin = this.offset + 32;\n            let data_offset = v_begin + this.buffer.dv.getUint32(v_begin, true);\n            let bn = this.buffer.array_buffer.slice(data_offset, data_offset + this.buffer.dv.getUint32(v_begin + 4, true));\n            return enc.decode(bn);\n        }\n        set _2(str) {\n            let enc = new TextEncoder();\n            let bytes = enc.encode(str);\n            let len = bytes.length;\n            let offset = NPRPC.Flat._alloc(this.buffer, this.offset + 32, len, 1, 1);\n            new Uint8Array(this.buffer.array_buffer, offset).set(bytes);\n        }\n    }\n    Flat_nprpc_nameserver.nprpc_nameserver_M1_Direct = nprpc_nameserver_M1_Direct;\n})(Flat_nprpc_nameserver = exports.Flat_nprpc_nameserver || (exports.Flat_nprpc_nameserver = {})); // namespace Flat \n(function (Flat_nprpc_nameserver) {\n    class nprpc_nameserver_M2_Direct extends NPRPC.Flat.Flat {\n        get _1() {\n            let enc = new TextDecoder("utf-8");\n            let v_begin = this.offset + 0;\n            let data_offset = v_begin + this.buffer.dv.getUint32(v_begin, true);\n            let bn = this.buffer.array_buffer.slice(data_offset, data_offset + this.buffer.dv.getUint32(v_begin + 4, true));\n            return enc.decode(bn);\n        }\n        set _1(str) {\n            let enc = new TextEncoder();\n            let bytes = enc.encode(str);\n            let len = bytes.length;\n            let offset = NPRPC.Flat._alloc(this.buffer, this.offset + 0, len, 1, 1);\n            new Uint8Array(this.buffer.array_buffer, offset).set(bytes);\n        }\n    }\n    Flat_nprpc_nameserver.nprpc_nameserver_M2_Direct = nprpc_nameserver_M2_Direct;\n})(Flat_nprpc_nameserver = exports.Flat_nprpc_nameserver || (exports.Flat_nprpc_nameserver = {})); // namespace Flat \n(function (Flat_nprpc_nameserver) {\n    class nprpc_nameserver_M3_Direct extends NPRPC.Flat.Flat {\n        get _1() { return (this.buffer.dv.getUint8(this.offset + 0) === 0x01); }\n        set _1(value) { this.buffer.dv.setUint8(this.offset + 0, value === true ? 0x01 : 0x00); }\n        get _2() { return new NPRPC.detail.Flat_nprpc_base.ObjectId_Direct(this.buffer, this.offset + 8); }\n    }\n    Flat_nprpc_nameserver.nprpc_nameserver_M3_Direct = nprpc_nameserver_M3_Direct;\n})(Flat_nprpc_nameserver = exports.Flat_nprpc_nameserver || (exports.Flat_nprpc_nameserver = {})); // namespace Flat \n\n\n//# sourceURL=webpack://nprpc_runtime/./src/nprpc_nameserver.ts?')}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e].call(r.exports,r,r.exports,__webpack_require__),r.exports}var __webpack_exports__=__webpack_require__("./src/index.ts");return __webpack_exports__})()},module.exports=factory()})),Flat_npwebserver,Flat_server;!function(e){class t extends nprpc.Flat.Flat{get name(){let e=new TextDecoder("utf-8"),t=this.offset+0,r=t+this.buffer.dv.getUint32(t,!0),n=this.buffer.array_buffer.slice(r,r+this.buffer.dv.getUint32(t+4,!0));return e.decode(n)}set name(e){let t=(new TextEncoder).encode(e),r=t.length,n=nprpc.Flat._alloc(this.buffer,this.offset+0,r,1,1);new Uint8Array(this.buffer.array_buffer,n).set(t)}get description(){let e=new TextDecoder("utf-8"),t=this.offset+8,r=t+this.buffer.dv.getUint32(t,!0),n=this.buffer.array_buffer.slice(r,r+this.buffer.dv.getUint32(t+4,!0));return e.decode(n)}set description(e){let t=(new TextEncoder).encode(e),r=t.length,n=nprpc.Flat._alloc(this.buffer,this.offset+8,r,1,1);new Uint8Array(this.buffer.array_buffer,n).set(t)}get path(){let e=new TextDecoder("utf-8"),t=this.offset+16,r=t+this.buffer.dv.getUint32(t,!0),n=this.buffer.array_buffer.slice(r,r+this.buffer.dv.getUint32(t+4,!0));return e.decode(n)}set path(e){let t=(new TextEncoder).encode(e),r=t.length,n=nprpc.Flat._alloc(this.buffer,this.offset+16,r,1,1);new Uint8Array(this.buffer.array_buffer,n).set(t)}get dev_addr(){return this.buffer.dv.getUint8(this.offset+24)}set dev_addr(e){this.buffer.dv.setUint8(this.offset+24,e)}get mem_addr(){return this.buffer.dv.getUint16(this.offset+26,!0)}set mem_addr(e){this.buffer.dv.setUint16(this.offset+26,e,!0)}get type(){return this.buffer.dv.getUint32(this.offset+28,!0)}set type(e){this.buffer.dv.setUint32(this.offset+28,e,!0)}}e.WebItem_Direct=t}(Flat_npwebserver||(Flat_npwebserver={})),function(e){class t extends nprpc.Flat.Flat{get name(){let e=new TextDecoder("utf-8"),t=this.offset+0,r=t+this.buffer.dv.getUint32(t,!0),n=this.buffer.array_buffer.slice(r,r+this.buffer.dv.getUint32(t+4,!0));return e.decode(n)}set name(e){let t=(new TextEncoder).encode(e),r=t.length,n=nprpc.Flat._alloc(this.buffer,this.offset+0,r,1,1);new Uint8Array(this.buffer.array_buffer,n).set(t)}items(e){nprpc.Flat._alloc(this.buffer,this.offset+8,e,32,4)}items_vd(){return new nprpc.Flat.Vector_Direct2(this.buffer,this.offset+8,32,e.WebItem_Direct)}}e.WebCategory_Direct=t}(Flat_npwebserver||(Flat_npwebserver={}));class WebServer extends nprpc.ObjectProxy{static get servant_t(){return _IWebServer_Servant}async get_web_categories(e){let t=1==arguments.length?0:arguments[arguments.length-1],r=nprpc.FlatBuffer.create();r.prepare(32),r.commit(32),r.write_msg_id(0),r.write_msg_type(0);let n=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(r,16);if(n.object_id=this.data.object_id,n.poa_idx=this.data.poa_idx,n.interface_idx=t,n.function_idx=0,r.write_len(r.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},r,this.timeout),-1!=nprpc.handle_standart_reply(r))throw console.log("received an unusual reply for function with output arguments"),new nprpc.Exception("Unknown Error");{let t=new Flat_npwebserver.npwebserver_M1_Direct(r,16)._1_vd(),n=0;e.length=t.elements_size;for(let r of t){e[n]=new Object,e[n]=new Object,e[n].name=r.name;{let t=r.items_vd(),s=0;e[n].items=new Array(t.elements_size);for(let r of t)e[n].items[s]=new Object,e[n].items[s]=new Object,e[n].items[s].name=r.name,e[n].items[s].description=r.description,e[n].items[s].path=r.path,e[n].items[s].dev_addr=r.dev_addr,e[n].items[s].mem_addr=r.mem_addr,e[n].items[s].type=r.type,++s}++n}}}}class _IWebServer_Servant extends nprpc.ObjectServant{static _get_class(){return"npwebserver/npwebserver.WebServer"}get_class=()=>_IWebServer_Servant._get_class();dispatch=(e,t,r)=>{_IWebServer_Servant._dispatch(this,e,t,r)};static _dispatch(e,t,r,n){switch(new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(t,16).function_idx){case 0:{let r=t;r.consume(r.size),r.prepare(152),r.commit(24);let n=new Flat_npwebserver.npwebserver_M1_Direct(r,16);e.get_web_categories(n._1_vd),r.write_len(r.size-4),r.write_msg_id(1),r.write_msg_type(1);break}default:nprpc.make_simple_answer(t,9)}}}!function(e){class t extends nprpc.Flat.Flat{_1(e){nprpc.Flat._alloc(this.buffer,this.offset+0,e,16,4)}_1_vd(){return new nprpc.Flat.Vector_Direct2(this.buffer,this.offset+0,16,e.WebCategory_Direct)}}e.npwebserver_M1_Direct=t}(Flat_npwebserver||(Flat_npwebserver={}));class NPNetCommunicationError extends nprpc.Exception{code;constructor(e){super("NPNetCommunicationError"),this.code=e}}!function(e){class t extends nprpc.Flat.Flat{get __ex_id(){return this.buffer.dv.getUint32(this.offset+0,!0)}set __ex_id(e){this.buffer.dv.setUint32(this.offset+0,e,!0)}get code(){return this.buffer.dv.getInt32(this.offset+4,!0)}set code(e){this.buffer.dv.setInt32(this.offset+4,e,!0)}}e.NPNetCommunicationError_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get h(){return this.buffer.dv.getBigUint64(this.offset+0,!0)}set h(e){this.buffer.dv.setBigUint64(this.offset+0,e,!0)}get s(){return this.buffer.dv.getUint32(this.offset+8,!0)}set s(e){this.buffer.dv.setUint32(this.offset+8,e,!0)}data_vd(){return new nprpc.Flat.Array_Direct1_u8(this.buffer,this.offset+12,8)}}e.server_value_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get dev_addr(){return this.buffer.dv.getUint8(this.offset+0)}set dev_addr(e){this.buffer.dv.setUint8(this.offset+0,e)}get address(){return this.buffer.dv.getUint16(this.offset+2,!0)}set address(e){this.buffer.dv.setUint16(this.offset+2,e,!0)}get size(){return this.buffer.dv.getUint8(this.offset+4)}set size(e){this.buffer.dv.setUint8(this.offset+4,e)}}e.RawDataDef_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get dev_addr(){return this.buffer.dv.getUint8(this.offset+0)}set dev_addr(e){this.buffer.dv.setUint8(this.offset+0,e)}get mem_addr(){return this.buffer.dv.getUint16(this.offset+2,!0)}set mem_addr(e){this.buffer.dv.setUint16(this.offset+2,e,!0)}get type(){return this.buffer.dv.getUint32(this.offset+4,!0)}set type(e){this.buffer.dv.setUint32(this.offset+4,e,!0)}}e.DataDef_Direct=t}(Flat_server||(Flat_server={}));class Pingable extends nprpc.ObjectProxy{static get servant_t(){return _IPingable_Servant}async Ping(){let e=0==arguments.length?0:arguments[arguments.length-1],t=nprpc.FlatBuffer.create();t.prepare(32),t.commit(32),t.write_msg_id(0),t.write_msg_type(0);let r=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(t,16);r.object_id=this.data.object_id,r.poa_idx=this.data.poa_idx,r.interface_idx=e,r.function_idx=0,t.write_len(t.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},t,this.timeout),0!=nprpc.handle_standart_reply(t)&&console.log("received an unusual reply for function with no output arguments")}}class _IPingable_Servant extends nprpc.ObjectServant{static _get_class(){return"server/nps.Pingable"}get_class=()=>_IPingable_Servant._get_class();dispatch=(e,t,r)=>{_IPingable_Servant._dispatch(this,e,t,r)};static _dispatch(e,t,r,n){switch(new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(t,16).function_idx){case 0:e.Ping(),nprpc.make_simple_answer(t,4);break;default:nprpc.make_simple_answer(t,9)}}}class _IDataCallBack_Servant extends nprpc.ObjectServant{static _get_class(){return"server/nps.DataCallBack"}get_class=()=>_IDataCallBack_Servant._get_class();dispatch=(e,t,r)=>{_IDataCallBack_Servant._dispatch(this,e,t,r)};static _dispatch(e,t,r,n){let s=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(t,16);if(0==n)switch(s.interface_idx){case 0:break;case 1:return void _IPingable_Servant._dispatch(e,t,r,!0);default:throw"unknown interface"}switch(s.function_idx){case 0:{let r=new Flat_server.server_M1_Direct(t,32);e.OnDataChanged(r._1_vd()),nprpc.make_simple_answer(t,4);break}default:nprpc.make_simple_answer(t,9)}}}class ItemManager extends nprpc.ObjectProxy{static get servant_t(){return _IItemManager_Servant}async Ping(){Pingable.prototype.Ping.bind(this,1)()}async Activate(e){let t=1==arguments.length?0:arguments[arguments.length-1],r=nprpc.FlatBuffer.create();r.prepare(192),r.commit(64),r.write_msg_id(0),r.write_msg_type(0);let n=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(r,16);n.object_id=this.data.object_id,n.poa_idx=this.data.poa_idx,n.interface_idx=t,n.function_idx=0;let s=new Flat_server.server_M2_Direct(r,32);s._1.object_id=e.object_id,s._1.ip4=e.ip4,s._1.port=e.port,s._1.websocket_port=e.websocket_port,s._1.poa_idx=e.poa_idx,s._1.flags=e.flags,s._1.class_id=e.class_id,r.write_len(r.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},r,this.timeout),0!=nprpc.handle_standart_reply(r)&&console.log("received an unusual reply for function with no output arguments")}async Advise(e,t){let r=2==arguments.length?0:arguments[arguments.length-1],n=nprpc.FlatBuffer.create();n.prepare(168),n.commit(40),n.write_msg_id(0),n.write_msg_type(0);let s=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(n,16);s.object_id=this.data.object_id,s.poa_idx=this.data.poa_idx,s.interface_idx=r,s.function_idx=1;let i=new Flat_server.server_M3_Direct(n,32);i._1(e.length);{let t=i._1_vd(),r=0;for(let n of t)n.dev_addr=e[r].dev_addr,n.mem_addr=e[r].mem_addr,n.type=e[r].type,++r}n.write_len(n.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},n,this.timeout);let a=nprpc.handle_standart_reply(n);if(1==a&&server_throw_exception(n),-1!=a)throw console.log("received an unusual reply for function with output arguments"),new nprpc.Exception("Unknown Error");{let e=new Flat_server.server_M4_Direct(n,16)._1_vd(),r=0;t.length=e.elements_size;for(let n of e)t[r]=n,++r}}async UnAdvise(e){let t=1==arguments.length?0:arguments[arguments.length-1],r=nprpc.FlatBuffer.create();r.prepare(168),r.commit(40),r.write_msg_id(0),r.write_msg_type(0);let n=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(r,16);n.object_id=this.data.object_id,n.poa_idx=this.data.poa_idx,n.interface_idx=t,n.function_idx=2;let s=new Flat_server.server_M4_Direct(r,32);s._1(e.length),s._1_vd().copy_from_ts_array(e),r.write_len(r.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},r,this.timeout),0!=nprpc.handle_standart_reply(r)&&console.log("received an unusual reply for function with no output arguments")}}class _IItemManager_Servant extends nprpc.ObjectServant{static _get_class(){return"server/nps.ItemManager"}get_class=()=>_IItemManager_Servant._get_class();dispatch=(e,t,r)=>{_IItemManager_Servant._dispatch(this,e,t,r)};static _dispatch(e,t,r,n){let s=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(t,16);if(0==n)switch(s.interface_idx){case 0:break;case 1:return void _IPingable_Servant._dispatch(e,t,r,!0);default:throw"unknown interface"}switch(s.function_idx){case 0:{let n=new Flat_server.server_M2_Direct(t,32);e.Activate(nprpc.create_object_from_flat(n._1,r.ip4)),nprpc.make_simple_answer(t,4);break}case 1:{let r=new Flat_server.server_M3_Direct(t,32),n=t;n.consume(n.size),n.prepare(152),n.commit(24);let s=new Flat_server.server_M4_Direct(n,16);try{e.Advise(r._1_vd(),s._1_vd)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}n.write_len(n.size-4),n.write_msg_id(1),n.write_msg_type(1);break}case 2:{let r=new Flat_server.server_M4_Direct(t,32);e.UnAdvise(r._1_vd()),nprpc.make_simple_answer(t,4);break}default:nprpc.make_simple_answer(t,9)}}}class Server extends nprpc.ObjectProxy{static get servant_t(){return _IServer_Servant}async Ping(){Pingable.prototype.Ping.bind(this,1)()}async GetNetworkStatus(e){let t=1==arguments.length?0:arguments[arguments.length-1],r=nprpc.FlatBuffer.create();r.prepare(32),r.commit(32),r.write_msg_id(0),r.write_msg_type(0);let n=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(r,16);if(n.object_id=this.data.object_id,n.poa_idx=this.data.poa_idx,n.interface_idx=t,n.function_idx=0,r.write_len(r.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},r,this.timeout),-1!=nprpc.handle_standart_reply(r))throw console.log("received an unusual reply for function with output arguments"),new nprpc.Exception("Unknown Error");{let t=new Flat_server.server_M5_Direct(r,16)._1_vd(),n=0;e.length=t.elements_size;for(let r of t)e[n]=r,++n}}async CreateItemManager(e){let t=1==arguments.length?0:arguments[arguments.length-1],r=nprpc.FlatBuffer.create();r.prepare(32),r.commit(32),r.write_msg_id(0),r.write_msg_type(0);let n=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(r,16);if(n.object_id=this.data.object_id,n.poa_idx=this.data.poa_idx,n.interface_idx=t,n.function_idx=1,r.write_len(r.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},r,this.timeout),-1!=nprpc.handle_standart_reply(r))throw console.log("received an unusual reply for function with output arguments"),new nprpc.Exception("Unknown Error");let s=new Flat_server.server_M2_Direct(r,16);e.value=nprpc.create_object_from_flat(s._1,this.data.ip4)}async SendRawData(e){let t=1==arguments.length?0:arguments[arguments.length-1],r=nprpc.FlatBuffer.create();r.prepare(168),r.commit(40),r.write_msg_id(0),r.write_msg_type(0);let n=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(r,16);n.object_id=this.data.object_id,n.poa_idx=this.data.poa_idx,n.interface_idx=t,n.function_idx=2;let s=new Flat_server.server_M5_Direct(r,32);s._1(e.length),s._1_vd().copy_from_ts_array(e),r.write_len(r.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},r,this.timeout);let i=nprpc.handle_standart_reply(r);1==i&&server_throw_exception(r),0!=i&&console.log("received an unusual reply for function with no output arguments")}async Write_1(e,t,r,n){let s=4==arguments.length?0:arguments[arguments.length-1],i=nprpc.FlatBuffer.create();i.prepare(38),i.commit(38),i.write_msg_id(0),i.write_msg_type(0);let a=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(i,16);a.object_id=this.data.object_id,a.poa_idx=this.data.poa_idx,a.interface_idx=s,a.function_idx=3;let _=new Flat_server.server_M6_Direct(i,32);_._1=e,_._2=t,_._3=r,_._4=n,i.write_len(i.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},i,this.timeout);let o=nprpc.handle_standart_reply(i);1==o&&server_throw_exception(i),0!=o&&console.log("received an unusual reply for function with no output arguments")}async Write_q1(e,t,r,n,s){let i=5==arguments.length?0:arguments[arguments.length-1],a=nprpc.FlatBuffer.create();a.prepare(40),a.commit(40),a.write_msg_id(0),a.write_msg_type(0);let _=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(a,16);_.object_id=this.data.object_id,_.poa_idx=this.data.poa_idx,_.interface_idx=i,_.function_idx=4;let o=new Flat_server.server_M7_Direct(a,32);o._1=e,o._2=t,o._3=r,o._4=n,o._5=s,a.write_len(a.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},a,this.timeout);let c=nprpc.handle_standart_reply(a);1==c&&server_throw_exception(a),0!=c&&console.log("received an unusual reply for function with no output arguments")}async Write_8(e,t,r){let n=3==arguments.length?0:arguments[arguments.length-1],s=nprpc.FlatBuffer.create();s.prepare(38),s.commit(38),s.write_msg_id(0),s.write_msg_type(0);let i=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(s,16);i.object_id=this.data.object_id,i.poa_idx=this.data.poa_idx,i.interface_idx=n,i.function_idx=5;let a=new Flat_server.server_M8_Direct(s,32);a._1=e,a._2=t,a._3=r,s.write_len(s.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},s,this.timeout);let _=nprpc.handle_standart_reply(s);1==_&&server_throw_exception(s),0!=_&&console.log("received an unusual reply for function with no output arguments")}async Write_q8(e,t,r,n){let s=4==arguments.length?0:arguments[arguments.length-1],i=nprpc.FlatBuffer.create();i.prepare(38),i.commit(38),i.write_msg_id(0),i.write_msg_type(0);let a=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(i,16);a.object_id=this.data.object_id,a.poa_idx=this.data.poa_idx,a.interface_idx=s,a.function_idx=6;let _=new Flat_server.server_M6_Direct(i,32);_._1=e,_._2=t,_._3=r,_._4=n,i.write_len(i.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},i,this.timeout);let o=nprpc.handle_standart_reply(i);1==o&&server_throw_exception(i),0!=o&&console.log("received an unusual reply for function with no output arguments")}async Write_16(e,t,r){let n=3==arguments.length?0:arguments[arguments.length-1],s=nprpc.FlatBuffer.create();s.prepare(38),s.commit(38),s.write_msg_id(0),s.write_msg_type(0);let i=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(s,16);i.object_id=this.data.object_id,i.poa_idx=this.data.poa_idx,i.interface_idx=n,i.function_idx=7;let a=new Flat_server.server_M9_Direct(s,32);a._1=e,a._2=t,a._3=r,s.write_len(s.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},s,this.timeout);let _=nprpc.handle_standart_reply(s);1==_&&server_throw_exception(s),0!=_&&console.log("received an unusual reply for function with no output arguments")}async Write_q16(e,t,r,n){let s=4==arguments.length?0:arguments[arguments.length-1],i=nprpc.FlatBuffer.create();i.prepare(40),i.commit(40),i.write_msg_id(0),i.write_msg_type(0);let a=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(i,16);a.object_id=this.data.object_id,a.poa_idx=this.data.poa_idx,a.interface_idx=s,a.function_idx=8;let _=new Flat_server.server_M10_Direct(i,32);_._1=e,_._2=t,_._3=r,_._4=n,i.write_len(i.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},i,this.timeout);let o=nprpc.handle_standart_reply(i);1==o&&server_throw_exception(i),0!=o&&console.log("received an unusual reply for function with no output arguments")}async Write_32(e,t,r){let n=3==arguments.length?0:arguments[arguments.length-1],s=nprpc.FlatBuffer.create();s.prepare(40),s.commit(40),s.write_msg_id(0),s.write_msg_type(0);let i=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(s,16);i.object_id=this.data.object_id,i.poa_idx=this.data.poa_idx,i.interface_idx=n,i.function_idx=9;let a=new Flat_server.server_M11_Direct(s,32);a._1=e,a._2=t,a._3=r,s.write_len(s.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},s,this.timeout);let _=nprpc.handle_standart_reply(s);1==_&&server_throw_exception(s),0!=_&&console.log("received an unusual reply for function with no output arguments")}async Write_q32(e,t,r,n){let s=4==arguments.length?0:arguments[arguments.length-1],i=nprpc.FlatBuffer.create();i.prepare(44),i.commit(44),i.write_msg_id(0),i.write_msg_type(0);let a=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(i,16);a.object_id=this.data.object_id,a.poa_idx=this.data.poa_idx,a.interface_idx=s,a.function_idx=10;let _=new Flat_server.server_M12_Direct(i,32);_._1=e,_._2=t,_._3=r,_._4=n,i.write_len(i.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},i,this.timeout);let o=nprpc.handle_standart_reply(i);1==o&&server_throw_exception(i),0!=o&&console.log("received an unusual reply for function with no output arguments")}async WriteBlock(e,t,r){let n=3==arguments.length?0:arguments[arguments.length-1],s=nprpc.FlatBuffer.create();s.prepare(172),s.commit(44),s.write_msg_id(0),s.write_msg_type(0);let i=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(s,16);i.object_id=this.data.object_id,i.poa_idx=this.data.poa_idx,i.interface_idx=n,i.function_idx=11;let a=new Flat_server.server_M13_Direct(s,32);a._1=e,a._2=t,a._3(r.length),a._3_vd().copy_from_ts_array(r),s.write_len(s.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},s,this.timeout);let _=nprpc.handle_standart_reply(s);1==_&&server_throw_exception(s),0!=_&&console.log("received an unusual reply for function with no output arguments")}async ReadByte(e,t,r){let n=3==arguments.length?0:arguments[arguments.length-1],s=nprpc.FlatBuffer.create();s.prepare(36),s.commit(36),s.write_msg_id(0),s.write_msg_type(0);let i=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(s,16);i.object_id=this.data.object_id,i.poa_idx=this.data.poa_idx,i.interface_idx=n,i.function_idx=12;let a=new Flat_server.server_M14_Direct(s,32);a._1=e,a._2=t,s.write_len(s.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},s,this.timeout);let _=nprpc.handle_standart_reply(s);if(1==_&&server_throw_exception(s),-1!=_)throw console.log("received an unusual reply for function with output arguments"),new nprpc.Exception("Unknown Error");let o=new Flat_server.server_M15_Direct(s,16);r.value=o._1}async ReadBlock(e,t,r,n){let s=4==arguments.length?0:arguments[arguments.length-1],i=nprpc.FlatBuffer.create();i.prepare(38),i.commit(38),i.write_msg_id(0),i.write_msg_type(0);let a=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(i,16);a.object_id=this.data.object_id,a.poa_idx=this.data.poa_idx,a.interface_idx=s,a.function_idx=13;let _=new Flat_server.server_M8_Direct(i,32);_._1=e,_._2=t,_._3=r,i.write_len(i.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},i,this.timeout);let o=nprpc.handle_standart_reply(i);if(1==o&&server_throw_exception(i),-1!=o)throw console.log("received an unusual reply for function with output arguments"),new nprpc.Exception("Unknown Error");{let e=new Flat_server.server_M5_Direct(i,16)._1_vd(),t=0;n.length=e.elements_size;for(let r of e)n[t]=r,++t}}async AVR_StopAlgorithm(e,t){let r=2==arguments.length?0:arguments[arguments.length-1],n=nprpc.FlatBuffer.create();n.prepare(36),n.commit(36),n.write_msg_id(0),n.write_msg_type(0);let s=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(n,16);s.object_id=this.data.object_id,s.poa_idx=this.data.poa_idx,s.interface_idx=r,s.function_idx=14;let i=new Flat_server.server_M14_Direct(n,32);i._1=e,i._2=t,n.write_len(n.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},n,this.timeout);let a,_=nprpc.handle_standart_reply(n);if(1==_&&server_throw_exception(n),-1!=_)throw console.log("received an unusual reply for function with output arguments"),new nprpc.Exception("Unknown Error");return a=new Flat_server.server_M16_Direct(n,16)._1,a}async AVR_ReinitIO(e){let t=1==arguments.length?0:arguments[arguments.length-1],r=nprpc.FlatBuffer.create();r.prepare(33),r.commit(33),r.write_msg_id(0),r.write_msg_type(0);let n=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(r,16);n.object_id=this.data.object_id,n.poa_idx=this.data.poa_idx,n.interface_idx=t,n.function_idx=15,new Flat_server.server_M15_Direct(r,32)._1=e,r.write_len(r.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},r,this.timeout);let s=nprpc.handle_standart_reply(r);1==s&&server_throw_exception(r),0!=s&&console.log("received an unusual reply for function with no output arguments")}async AVR_SendRemoteData(e,t,r){let n=3==arguments.length?0:arguments[arguments.length-1],s=nprpc.FlatBuffer.create();s.prepare(172),s.commit(44),s.write_msg_id(0),s.write_msg_type(0);let i=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(s,16);i.object_id=this.data.object_id,i.poa_idx=this.data.poa_idx,i.interface_idx=n,i.function_idx=16;let a=new Flat_server.server_M13_Direct(s,32);a._1=e,a._2=t,a._3(r.length),a._3_vd().copy_from_ts_array(r),s.write_len(s.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},s,this.timeout);let _=nprpc.handle_standart_reply(s);1==_&&server_throw_exception(s),0!=_&&console.log("received an unusual reply for function with no output arguments")}async AVR_SendPage(e,t,r){let n=3==arguments.length?0:arguments[arguments.length-1],s=nprpc.FlatBuffer.create();s.prepare(172),s.commit(44),s.write_msg_id(0),s.write_msg_type(0);let i=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(s,16);i.object_id=this.data.object_id,i.poa_idx=this.data.poa_idx,i.interface_idx=n,i.function_idx=17;let a=new Flat_server.server_M17_Direct(s,32);a._1=e,a._2=t,a._3(r.length),a._3_vd().copy_from_ts_array(r),s.write_len(s.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},s,this.timeout);let _=nprpc.handle_standart_reply(s);1==_&&server_throw_exception(s),0!=_&&console.log("received an unusual reply for function with no output arguments")}async AVR_RemoveAlgorithm(e,t){let r=2==arguments.length?0:arguments[arguments.length-1],n=nprpc.FlatBuffer.create();n.prepare(36),n.commit(36),n.write_msg_id(0),n.write_msg_type(0);let s=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(n,16);s.object_id=this.data.object_id,s.poa_idx=this.data.poa_idx,s.interface_idx=r,s.function_idx=18;let i=new Flat_server.server_M14_Direct(n,32);i._1=e,i._2=t,n.write_len(n.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},n,this.timeout);let a=nprpc.handle_standart_reply(n);1==a&&server_throw_exception(n),0!=a&&console.log("received an unusual reply for function with no output arguments")}async AVR_ReplaceAlgorithm(e,t,r){let n=3==arguments.length?0:arguments[arguments.length-1],s=nprpc.FlatBuffer.create();s.prepare(38),s.commit(38),s.write_msg_id(0),s.write_msg_type(0);let i=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(s,16);i.object_id=this.data.object_id,i.poa_idx=this.data.poa_idx,i.interface_idx=n,i.function_idx=19;let a=new Flat_server.server_M9_Direct(s,32);a._1=e,a._2=t,a._3=r,s.write_len(s.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},s,this.timeout);let _=nprpc.handle_standart_reply(s);1==_&&server_throw_exception(s),0!=_&&console.log("received an unusual reply for function with no output arguments")}async AVR_WriteEeprom(e,t,r){let n=3==arguments.length?0:arguments[arguments.length-1],s=nprpc.FlatBuffer.create();s.prepare(172),s.commit(44),s.write_msg_id(0),s.write_msg_type(0);let i=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(s,16);i.object_id=this.data.object_id,i.poa_idx=this.data.poa_idx,i.interface_idx=n,i.function_idx=20;let a=new Flat_server.server_M13_Direct(s,32);a._1=e,a._2=t,a._3(r.length),a._3_vd().copy_from_ts_array(r),s.write_len(s.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},s,this.timeout);let _=nprpc.handle_standart_reply(s);1==_&&server_throw_exception(s),0!=_&&console.log("received an unusual reply for function with no output arguments")}async AVR_WriteTwiTable(e,t,r){let n=3==arguments.length?0:arguments[arguments.length-1],s=nprpc.FlatBuffer.create();s.prepare(172),s.commit(44),s.write_msg_id(0),s.write_msg_type(0);let i=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(s,16);i.object_id=this.data.object_id,i.poa_idx=this.data.poa_idx,i.interface_idx=n,i.function_idx=21;let a=new Flat_server.server_M17_Direct(s,32);a._1=e,a._2=t,a._3(r.length),a._3_vd().copy_from_ts_array(r),s.write_len(s.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},s,this.timeout);let _=nprpc.handle_standart_reply(s);1==_&&server_throw_exception(s),0!=_&&console.log("received an unusual reply for function with no output arguments")}async AVR_V_GetFlash(e,t){let r=2==arguments.length?0:arguments[arguments.length-1],n=nprpc.FlatBuffer.create();n.prepare(40),n.commit(40),n.write_msg_id(0),n.write_msg_type(0);let s=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(n,16);s.object_id=this.data.object_id,s.poa_idx=this.data.poa_idx,s.interface_idx=r,s.function_idx=22,new Flat_server.server_M18_Direct(n,32)._1=e,n.write_len(n.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},n,this.timeout);let i=nprpc.handle_standart_reply(n);if(1==i&&server_throw_exception(n),-1!=i)throw console.log("received an unusual reply for function with output arguments"),new nprpc.Exception("Unknown Error");{let e=new Flat_server.server_M19_Direct(n,16)._1_vd(),r=0;t.length=e.elements_size;for(let n of e)t[r]=n,++r}}async AVR_V_StoreFlash(e){let t=1==arguments.length?0:arguments[arguments.length-1],r=nprpc.FlatBuffer.create();r.prepare(40),r.commit(40),r.write_msg_id(0),r.write_msg_type(0);let n=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(r,16);n.object_id=this.data.object_id,n.poa_idx=this.data.poa_idx,n.interface_idx=t,n.function_idx=23,new Flat_server.server_M18_Direct(r,32)._1=e,r.write_len(r.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},r,this.timeout);let s,i=nprpc.handle_standart_reply(r);if(1==i&&server_throw_exception(r),-1!=i)throw console.log("received an unusual reply for function with output arguments"),new nprpc.Exception("Unknown Error");return s=new Flat_server.server_M16_Direct(r,16)._1,s}async Notify_DeviceActivated(e){let t=1==arguments.length?0:arguments[arguments.length-1],r=nprpc.FlatBuffer.create();r.prepare(40),r.commit(40),r.write_msg_id(0),r.write_msg_type(0);let n,s=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(r,16);if(s.object_id=this.data.object_id,s.poa_idx=this.data.poa_idx,s.interface_idx=t,s.function_idx=24,new Flat_server.server_M18_Direct(r,32)._1=e,r.write_len(r.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},r,this.timeout),-1!=nprpc.handle_standart_reply(r))throw console.log("received an unusual reply for function with output arguments"),new nprpc.Exception("Unknown Error");return n=new Flat_server.server_M16_Direct(r,16)._1,n}async Notify_DeviceDeactivated(e){let t=1==arguments.length?0:arguments[arguments.length-1],r=nprpc.FlatBuffer.create();r.prepare(40),r.commit(40),r.write_msg_id(0),r.write_msg_type(0);let n,s=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(r,16);if(s.object_id=this.data.object_id,s.poa_idx=this.data.poa_idx,s.interface_idx=t,s.function_idx=25,new Flat_server.server_M18_Direct(r,32)._1=e,r.write_len(r.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},r,this.timeout),-1!=nprpc.handle_standart_reply(r))throw console.log("received an unusual reply for function with output arguments"),new nprpc.Exception("Unknown Error");return n=new Flat_server.server_M16_Direct(r,16)._1,n}async Notify_ParameterRemoved(e){let t=1==arguments.length?0:arguments[arguments.length-1],r=nprpc.FlatBuffer.create();r.prepare(40),r.commit(40),r.write_msg_id(0),r.write_msg_type(0);let n=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(r,16);n.object_id=this.data.object_id,n.poa_idx=this.data.poa_idx,n.interface_idx=t,n.function_idx=26,new Flat_server.server_M18_Direct(r,32)._1=e,r.write_len(r.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},r,this.timeout),0!=nprpc.handle_standart_reply(r)&&console.log("received an unusual reply for function with no output arguments")}async Notify_TypeOrVariableChanged(e){let t=1==arguments.length?0:arguments[arguments.length-1],r=nprpc.FlatBuffer.create();r.prepare(40),r.commit(40),r.write_msg_id(0),r.write_msg_type(0);let n=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(r,16);n.object_id=this.data.object_id,n.poa_idx=this.data.poa_idx,n.interface_idx=t,n.function_idx=27,new Flat_server.server_M18_Direct(r,32)._1=e,r.write_len(r.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},r,this.timeout),0!=nprpc.handle_standart_reply(r)&&console.log("received an unusual reply for function with no output arguments")}async History_AddParameter(e){let t=1==arguments.length?0:arguments[arguments.length-1],r=nprpc.FlatBuffer.create();r.prepare(40),r.commit(40),r.write_msg_id(0),r.write_msg_type(0);let n=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(r,16);n.object_id=this.data.object_id,n.poa_idx=this.data.poa_idx,n.interface_idx=t,n.function_idx=28,new Flat_server.server_M18_Direct(r,32)._1=e,r.write_len(r.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},r,this.timeout),0!=nprpc.handle_standart_reply(r)&&console.log("received an unusual reply for function with no output arguments")}async History_RemoveParameter(e){let t=1==arguments.length?0:arguments[arguments.length-1],r=nprpc.FlatBuffer.create();r.prepare(40),r.commit(40),r.write_msg_id(0),r.write_msg_type(0);let n=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(r,16);n.object_id=this.data.object_id,n.poa_idx=this.data.poa_idx,n.interface_idx=t,n.function_idx=29,new Flat_server.server_M18_Direct(r,32)._1=e,r.write_len(r.size-4),await nprpc.rpc.call({ip4:this.data.ip4,port:this.data.websocket_port},r,this.timeout),0!=nprpc.handle_standart_reply(r)&&console.log("received an unusual reply for function with no output arguments")}}class _IServer_Servant extends nprpc.ObjectServant{static _get_class(){return"server/nps.Server"}get_class=()=>_IServer_Servant._get_class();dispatch=(e,t,r)=>{_IServer_Servant._dispatch(this,e,t,r)};static _dispatch(e,t,r,n){let s=new nprpc.impl.Flat_nprpc_base.CallHeader_Direct(t,16);if(0==n)switch(s.interface_idx){case 0:break;case 1:return void _IPingable_Servant._dispatch(e,t,r,!0);default:throw"unknown interface"}switch(s.function_idx){case 0:{let r=t;r.consume(r.size),r.prepare(152),r.commit(24);let n=new Flat_server.server_M5_Direct(r,16);e.GetNetworkStatus(n._1_vd),r.write_len(r.size-4),r.write_msg_id(1),r.write_msg_type(1);break}case 1:{let r=t;r.consume(r.size),r.prepare(176),r.commit(48);let n=new Flat_server.server_M2_Direct(r,16);e.CreateItemManager(n._1),r.write_len(r.size-4),r.write_msg_id(1),r.write_msg_type(1);break}case 2:{let r=new Flat_server.server_M5_Direct(t,32);try{e.SendRawData(r._1_vd())}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 3:{let r=new Flat_server.server_M6_Direct(t,32);try{e.Write_1(r._1,r._2,r._3,r._4)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 4:{let r=new Flat_server.server_M7_Direct(t,32);try{e.Write_q1(r._1,r._2,r._3,r._4,r._5)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 5:{let r=new Flat_server.server_M8_Direct(t,32);try{e.Write_8(r._1,r._2,r._3)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 6:{let r=new Flat_server.server_M6_Direct(t,32);try{e.Write_q8(r._1,r._2,r._3,r._4)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 7:{let r=new Flat_server.server_M9_Direct(t,32);try{e.Write_16(r._1,r._2,r._3)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 8:{let r=new Flat_server.server_M10_Direct(t,32);try{e.Write_q16(r._1,r._2,r._3,r._4)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 9:{let r=new Flat_server.server_M11_Direct(t,32);try{e.Write_32(r._1,r._2,r._3)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 10:{let r=new Flat_server.server_M12_Direct(t,32);try{e.Write_q32(r._1,r._2,r._3,r._4)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 11:{let r=new Flat_server.server_M13_Direct(t,32);try{e.WriteBlock(r._1,r._2,r._3_vd())}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 12:{let r,n=new Flat_server.server_M14_Direct(t,32);try{e.ReadByte(n._1,n._2,r)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}let s=t;s.consume(s.size),s.prepare(17),s.commit(17),new Flat_server.server_M15_Direct(s,16)._1=r,s.write_len(s.size-4),s.write_msg_id(1),s.write_msg_type(1);break}case 13:{let r=new Flat_server.server_M8_Direct(t,32),n=t;n.consume(n.size),n.prepare(152),n.commit(24);let s=new Flat_server.server_M5_Direct(n,16);try{e.ReadBlock(r._1,r._2,r._3,s._1_vd)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}n.write_len(n.size-4),n.write_msg_id(1),n.write_msg_type(1);break}case 14:{let r,n=new Flat_server.server_M14_Direct(t,32);try{r=e.AVR_StopAlgorithm(n._1,n._2)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}let s=t;s.consume(s.size),s.prepare(17),s.commit(17),new Flat_server.server_M16_Direct(s,16)._1=r,s.write_len(s.size-4),s.write_msg_id(1),s.write_msg_type(1);break}case 15:{let r=new Flat_server.server_M15_Direct(t,32);try{e.AVR_ReinitIO(r._1)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 16:{let r=new Flat_server.server_M13_Direct(t,32);try{e.AVR_SendRemoteData(r._1,r._2,r._3_vd())}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 17:{let r=new Flat_server.server_M17_Direct(t,32);try{e.AVR_SendPage(r._1,r._2,r._3_vd())}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 18:{let r=new Flat_server.server_M14_Direct(t,32);try{e.AVR_RemoveAlgorithm(r._1,r._2)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 19:{let r=new Flat_server.server_M9_Direct(t,32);try{e.AVR_ReplaceAlgorithm(r._1,r._2,r._3)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 20:{let r=new Flat_server.server_M13_Direct(t,32);try{e.AVR_WriteEeprom(r._1,r._2,r._3_vd())}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 21:{let r=new Flat_server.server_M17_Direct(t,32);try{e.AVR_WriteTwiTable(r._1,r._2,r._3_vd())}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}nprpc.make_simple_answer(t,4);break}case 22:{let r=new Flat_server.server_M18_Direct(t,32),n=t;n.consume(n.size),n.prepare(152),n.commit(24);let s=new Flat_server.server_M19_Direct(n,16);try{e.AVR_V_GetFlash(r._1,s._1_vd)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}n.write_len(n.size-4),n.write_msg_id(1),n.write_msg_type(1);break}case 23:{let r,n=new Flat_server.server_M18_Direct(t,32);try{r=e.AVR_V_StoreFlash(n._1)}catch(e){let r=t;r.consume(r.size),r.prepare(24),r.commit(24);let n=new Flat_server.NPNetCommunicationError_Direct(r,16);return n.__ex_id=0,n.code=e.code,r.write_len(r.size-4),r.write_msg_id(5),void r.write_msg_type(1)}let s=t;s.consume(s.size),s.prepare(17),s.commit(17),new Flat_server.server_M16_Direct(s,16)._1=r,s.write_len(s.size-4),s.write_msg_id(1),s.write_msg_type(1);break}case 24:{let r,n=new Flat_server.server_M18_Direct(t,32);r=e.Notify_DeviceActivated(n._1);let s=t;s.consume(s.size),s.prepare(17),s.commit(17),new Flat_server.server_M16_Direct(s,16)._1=r,s.write_len(s.size-4),s.write_msg_id(1),s.write_msg_type(1);break}case 25:{let r,n=new Flat_server.server_M18_Direct(t,32);r=e.Notify_DeviceDeactivated(n._1);let s=t;s.consume(s.size),s.prepare(17),s.commit(17),new Flat_server.server_M16_Direct(s,16)._1=r,s.write_len(s.size-4),s.write_msg_id(1),s.write_msg_type(1);break}case 26:{let r=new Flat_server.server_M18_Direct(t,32);e.Notify_ParameterRemoved(r._1),nprpc.make_simple_answer(t,4);break}case 27:{let r=new Flat_server.server_M18_Direct(t,32);e.Notify_TypeOrVariableChanged(r._1),nprpc.make_simple_answer(t,4);break}case 28:{let r=new Flat_server.server_M18_Direct(t,32);e.History_AddParameter(r._1),nprpc.make_simple_answer(t,4);break}case 29:{let r=new Flat_server.server_M18_Direct(t,32);e.History_RemoveParameter(r._1),nprpc.make_simple_answer(t,4);break}default:nprpc.make_simple_answer(t,9)}}}function server_throw_exception(e){switch(e.read_exception_number()){case 0:{let t=new Flat_server.NPNetCommunicationError_Direct(e,16),r=new NPNetCommunicationError;throw r.code=t.code,r}default:throw"unknown rpc exception"}}!function(e){class t extends nprpc.Flat.Flat{_1(e){nprpc.Flat._alloc(this.buffer,this.offset+0,e,24,8)}_1_vd(){return new nprpc.Flat.Vector_Direct2(this.buffer,this.offset+0,24,e.server_value_Direct)}}e.server_M1_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get _1(){return new nprpc.detail.Flat_nprpc_base.ObjectId_Direct(this.buffer,this.offset+0)}}e.server_M2_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{_1(e){nprpc.Flat._alloc(this.buffer,this.offset+0,e,8,4)}_1_vd(){return new nprpc.Flat.Vector_Direct2(this.buffer,this.offset+0,8,e.DataDef_Direct)}}e.server_M3_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{_1(e){nprpc.Flat._alloc(this.buffer,this.offset+0,e,8,8)}_1_vd(){return new nprpc.Flat.Vector_Direct1_u64(this.buffer,this.offset+0)}}e.server_M4_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{_1(e){nprpc.Flat._alloc(this.buffer,this.offset+0,e,1,1)}_1_vd(){return new nprpc.Flat.Vector_Direct1_u8(this.buffer,this.offset+0)}}e.server_M5_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get _1(){return this.buffer.dv.getUint8(this.offset+0)}set _1(e){this.buffer.dv.setUint8(this.offset+0,e)}get _2(){return this.buffer.dv.getUint16(this.offset+2,!0)}set _2(e){this.buffer.dv.setUint16(this.offset+2,e,!0)}get _3(){return this.buffer.dv.getUint8(this.offset+4)}set _3(e){this.buffer.dv.setUint8(this.offset+4,e)}get _4(){return this.buffer.dv.getUint8(this.offset+5)}set _4(e){this.buffer.dv.setUint8(this.offset+5,e)}}e.server_M6_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get _1(){return this.buffer.dv.getUint8(this.offset+0)}set _1(e){this.buffer.dv.setUint8(this.offset+0,e)}get _2(){return this.buffer.dv.getUint16(this.offset+2,!0)}set _2(e){this.buffer.dv.setUint16(this.offset+2,e,!0)}get _3(){return this.buffer.dv.getUint8(this.offset+4)}set _3(e){this.buffer.dv.setUint8(this.offset+4,e)}get _4(){return this.buffer.dv.getUint8(this.offset+5)}set _4(e){this.buffer.dv.setUint8(this.offset+5,e)}get _5(){return this.buffer.dv.getUint8(this.offset+6)}set _5(e){this.buffer.dv.setUint8(this.offset+6,e)}}e.server_M7_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get _1(){return this.buffer.dv.getUint8(this.offset+0)}set _1(e){this.buffer.dv.setUint8(this.offset+0,e)}get _2(){return this.buffer.dv.getUint16(this.offset+2,!0)}set _2(e){this.buffer.dv.setUint16(this.offset+2,e,!0)}get _3(){return this.buffer.dv.getUint8(this.offset+4)}set _3(e){this.buffer.dv.setUint8(this.offset+4,e)}}e.server_M8_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get _1(){return this.buffer.dv.getUint8(this.offset+0)}set _1(e){this.buffer.dv.setUint8(this.offset+0,e)}get _2(){return this.buffer.dv.getUint16(this.offset+2,!0)}set _2(e){this.buffer.dv.setUint16(this.offset+2,e,!0)}get _3(){return this.buffer.dv.getUint16(this.offset+4,!0)}set _3(e){this.buffer.dv.setUint16(this.offset+4,e,!0)}}e.server_M9_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get _1(){return this.buffer.dv.getUint8(this.offset+0)}set _1(e){this.buffer.dv.setUint8(this.offset+0,e)}get _2(){return this.buffer.dv.getUint16(this.offset+2,!0)}set _2(e){this.buffer.dv.setUint16(this.offset+2,e,!0)}get _3(){return this.buffer.dv.getUint16(this.offset+4,!0)}set _3(e){this.buffer.dv.setUint16(this.offset+4,e,!0)}get _4(){return this.buffer.dv.getUint8(this.offset+6)}set _4(e){this.buffer.dv.setUint8(this.offset+6,e)}}e.server_M10_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get _1(){return this.buffer.dv.getUint8(this.offset+0)}set _1(e){this.buffer.dv.setUint8(this.offset+0,e)}get _2(){return this.buffer.dv.getUint16(this.offset+2,!0)}set _2(e){this.buffer.dv.setUint16(this.offset+2,e,!0)}get _3(){return this.buffer.dv.getUint32(this.offset+4,!0)}set _3(e){this.buffer.dv.setUint32(this.offset+4,e,!0)}}e.server_M11_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get _1(){return this.buffer.dv.getUint8(this.offset+0)}set _1(e){this.buffer.dv.setUint8(this.offset+0,e)}get _2(){return this.buffer.dv.getUint16(this.offset+2,!0)}set _2(e){this.buffer.dv.setUint16(this.offset+2,e,!0)}get _3(){return this.buffer.dv.getUint32(this.offset+4,!0)}set _3(e){this.buffer.dv.setUint32(this.offset+4,e,!0)}get _4(){return this.buffer.dv.getUint8(this.offset+8)}set _4(e){this.buffer.dv.setUint8(this.offset+8,e)}}e.server_M12_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get _1(){return this.buffer.dv.getUint8(this.offset+0)}set _1(e){this.buffer.dv.setUint8(this.offset+0,e)}get _2(){return this.buffer.dv.getUint16(this.offset+2,!0)}set _2(e){this.buffer.dv.setUint16(this.offset+2,e,!0)}_3(e){nprpc.Flat._alloc(this.buffer,this.offset+4,e,1,1)}_3_vd(){return new nprpc.Flat.Vector_Direct1_u8(this.buffer,this.offset+4)}}e.server_M13_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get _1(){return this.buffer.dv.getUint8(this.offset+0)}set _1(e){this.buffer.dv.setUint8(this.offset+0,e)}get _2(){return this.buffer.dv.getUint16(this.offset+2,!0)}set _2(e){this.buffer.dv.setUint16(this.offset+2,e,!0)}}e.server_M14_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get _1(){return this.buffer.dv.getUint8(this.offset+0)}set _1(e){this.buffer.dv.setUint8(this.offset+0,e)}}e.server_M15_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get _1(){return 1===this.buffer.dv.getUint8(this.offset+0)}set _1(e){this.buffer.dv.setUint8(this.offset+0,!0===e?1:0)}}e.server_M16_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get _1(){return this.buffer.dv.getUint8(this.offset+0)}set _1(e){this.buffer.dv.setUint8(this.offset+0,e)}get _2(){return this.buffer.dv.getUint8(this.offset+1)}set _2(e){this.buffer.dv.setUint8(this.offset+1,e)}_3(e){nprpc.Flat._alloc(this.buffer,this.offset+4,e,1,1)}_3_vd(){return new nprpc.Flat.Vector_Direct1_u8(this.buffer,this.offset+4)}}e.server_M17_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{get _1(){return this.buffer.dv.getBigUint64(this.offset+0,!0)}set _1(e){this.buffer.dv.setBigUint64(this.offset+0,e,!0)}}e.server_M18_Direct=t}(Flat_server||(Flat_server={})),function(e){class t extends nprpc.Flat.Flat{_1(e){nprpc.Flat._alloc(this.buffer,this.offset+0,e,2,2)}_1_vd(){return new nprpc.Flat.Vector_Direct1_u16(this.buffer,this.offset+0)}}e.server_M19_Direct=t}(Flat_server||(Flat_server={}));const subscriber_queue=[];function writable(e,t=noop){let r;const n=new Set;function s(t){if(safe_not_equal(e,t)&&(e=t,r)){const t=!subscriber_queue.length;for(const t of n)t[1](),subscriber_queue.push(t,e);if(t){for(let e=0;e<subscriber_queue.length;e+=2)subscriber_queue[e][0](subscriber_queue[e+1]);subscriber_queue.length=0}}}return{set:s,update:function(t){s(t(e))},subscribe:function(i,a=noop){const _=[i,a];return n.add(_),1===n.size&&(r=t(s)||noop),i(e),()=>{n.delete(_),0===n.size&&(r(),r=null)}}}}let webserver,server,poa,cats=new Array;const VQUALITY=8192,SIGNED=4096,SIZE_8=1,SIZE_16=2,SIZE_32=4,FLOAT_VALUE=16,BIT_VALUE=32,INT_VALUE=64,TYPE_MASK=BIT_VALUE|INT_VALUE|FLOAT_VALUE|SIGNED|SIZE_8|SIZE_16|SIZE_32;var VT;function is_vt_has_quality(e){return!!(e&VQUALITY)}!function(e){e[e.VT_UNDEFINE=0]="VT_UNDEFINE",e[e.VT_DISCRETE=SIZE_8|BIT_VALUE]="VT_DISCRETE",e[e.VT_BYTE=SIZE_8|INT_VALUE]="VT_BYTE",e[e.VT_SIGNED_BYTE=SIGNED|SIZE_8|INT_VALUE]="VT_SIGNED_BYTE",e[e.VT_WORD=SIZE_16|INT_VALUE]="VT_WORD",e[e.VT_SIGNED_WORD=SIGNED|SIZE_16|INT_VALUE]="VT_SIGNED_WORD",e[e.VT_DWORD=SIZE_32|INT_VALUE]="VT_DWORD",e[e.VT_SIGNED_DWORD=SIGNED|SIZE_32|INT_VALUE]="VT_SIGNED_DWORD",e[e.VT_FLOAT=SIGNED|SIZE_32|FLOAT_VALUE]="VT_FLOAT"}(VT||(VT={}));class online_value{type_;value;check_quality_8(e){return!is_vt_has_quality(this.type_)||1==e.get_val(1)}check_quality_16(e){return!is_vt_has_quality(this.type_)||1==e.get_val(2)}check_quality_32(e){return!is_vt_has_quality(this.type_)||1==e.get_val(4)}set_value(e){switch(e.s){case 2:return void this.value.set("unk");case 1:return void this.value.set("nc");case 0:break;default:console.error()}let t=e.data_vd();const r=this.type_&TYPE_MASK;switch(r){case VT.VT_DISCRETE:if(!this.check_quality_8(t)){this.value.set("x");break}this.value.set(255===t.data_view.getUint8(0)?"1":"0");break;case VT.VT_BYTE:case VT.VT_SIGNED_BYTE:if(!this.check_quality_8(t)){this.value.set("x");break}r==VT.VT_BYTE?this.value.set(t.data_view.getUint8(0).toString()):this.value.set(t.data_view.getInt8(0).toString());break;case VT.VT_WORD:case VT.VT_SIGNED_WORD:if(!this.check_quality_16(t)){this.value.set("x");break}r==VT.VT_WORD?this.value.set(t.data_view.getUint16(0,!0).toString()):this.value.set(t.data_view.getInt16(0,!0).toString());break;case VT.VT_DWORD:case VT.VT_SIGNED_DWORD:case VT.VT_FLOAT:if(!this.check_quality_32(t)){this.value.set("x");break}switch(r){case VT.VT_DWORD:this.value.set(t.data_view.getUint32(0,!0).toString());break;case VT.VT_SIGNED_DWORD:this.value.set(t.data_view.getInt32(0,!0).toString());break;case VT.VT_FLOAT:this.value.set(t.data_view.getFloat32(0,!0).toFixed(3))}break;default:console.error("Unknown type %d",this.type_&TYPE_MASK)}}constructor(e){this.type_=e,this.value=writable("unk")}}class OnDataCallbackImpl extends _IDataCallBack_Servant{items_;OnDataChanged(e){for(let t of e)this.items_.get(t.h).ov.set_value(t)}constructor(){super(),this.items_=new Map}}async function rpc_init(){let e=nprpc.init();poa=e.create_poa(32);let t=nprpc.get_nameserver("192.168.1.2");{let e=nprpc.make_ref();if(await t.Resolve("npsystem_webserver",e),webserver=nprpc.narrow(e.value,WebServer),!webserver)throw"WS.WebServer narrowing failed"}{let e=nprpc.make_ref();if(await t.Resolve("npsystem_server",e),server=nprpc.narrow(e.value,Server),!server)throw"SRV.Server narrowing failed"}await webserver.get_web_categories(cats);let r=null;{let e=nprpc.make_ref();if(await server.CreateItemManager(e),r=nprpc.narrow(e.value,ItemManager),!r)throw"SRV.ItemManager narrowing failed";r.add_ref()}let n=new OnDataCallbackImpl,s=poa.activate_object(n);await r.Activate(s);let i=new Array;for(let e of cats)for(let t of e.items){let e=new online_value(t.type);t.ov=e,255!=t.dev_addr&&i.push({desc:t,ov:e})}let a=new Array(i.length);for(let e=0;e<i.length;++e)a[e]={dev_addr:i[e].desc.dev_addr,mem_addr:i[e].desc.mem_addr,type:i[e].desc.type};let _=new Array;await r.Advise(a,_);for(let e=0;e<i.length;++e)n.items_.set(_[e],i[e])}function get_each_context(e,t,r){const n=e.slice();return n[0]=t[r],n}function create_default_slot(e){let t,r,n;return t=new Category({props:{cat:e[0]}}),{c(){create_component(t.$$.fragment),r=space()},m(e,s){mount_component(t,e,s),insert(e,r,s),n=!0},p:noop,i(e){n||(transition_in(t.$$.fragment,e),n=!0)},o(e){transition_out(t.$$.fragment,e),n=!1},d(e){destroy_component(t,e),e&&detach(r)}}}function create_each_block(e){let t,r;return t=new CollapsibleSection({props:{headerText:e[0].name,expanded:!0,$$slots:{default:[create_default_slot]},$$scope:{ctx:e}}}),{c(){create_component(t.$$.fragment)},m(e,n){mount_component(t,e,n),r=!0},p(e,r){const n={};8&r&&(n.$$scope={dirty:r,ctx:e}),t.$set(n)},i(e){r||(transition_in(t.$$.fragment,e),r=!0)},o(e){transition_out(t.$$.fragment,e),r=!1},d(e){destroy_component(t,e)}}}function create_fragment(e){let t,r,n=cats,s=[];for(let t=0;t<n.length;t+=1)s[t]=create_each_block(get_each_context(e,n,t));const i=e=>transition_out(s[e],1,1,(()=>{s[e]=null}));return{c(){t=element("main");for(let e=0;e<s.length;e+=1)s[e].c();attr(t,"class","svelte-vgipci")},m(e,n){insert(e,t,n);for(let e=0;e<s.length;e+=1)s[e].m(t,null);r=!0},p(e,[r]){if(0&r){let a;for(n=cats,a=0;a<n.length;a+=1){const i=get_each_context(e,n,a);s[a]?(s[a].p(i,r),transition_in(s[a],1)):(s[a]=create_each_block(i),s[a].c(),transition_in(s[a],1),s[a].m(t,null))}for(group_outros(),a=n.length;a<s.length;a+=1)i(a);check_outros()}},i(e){if(!r){for(let e=0;e<n.length;e+=1)transition_in(s[e]);r=!0}},o(e){s=s.filter(Boolean);for(let e=0;e<s.length;e+=1)transition_out(s[e]);r=!1},d(e){e&&detach(t),destroy_each(s,e)}}}class App extends SvelteComponent{constructor(e){super(),init(this,e,null,create_fragment,safe_not_equal,{})}}let app;rpc_init().then((()=>{app=new App({target:document.body,props:{}})})).catch((e=>console.log(e)));var app$1=app;return app$1}();
//# sourceMappingURL=bundle.js.map
