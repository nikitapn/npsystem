// Copyright (c) 2022 nikitapnn1@gmail.com
// This file is a part of npsystem (Distributed Control System) and covered by LICENSING file in the topmost directory

namespace test {

interface ServerControl {
	// All tests performed, safe to shutdown the server
	void Shutdown();
}

AAA: flat {
	a: u32;
	b: string;
	c: string;
}

interface TestBasic {
	boolean ReturnBoolean();
	boolean In(a: in u32, b: in boolean, c: in vector<u8>);
	void Out(a: out u32, b: out boolean, c: out vector<u8>);
}

using bytestream = vector<u8>;

Opt1 : flat {
	str: string;
	stream?: bytestream;
};

interface TestOptional {
	boolean InEmpty(a?: in u32);
	boolean In(a?: in u32, b?: in AAA);
//	boolean InVec(a?: in bytestream);

	void OutEmpty(a?: out u32);
	void Out(a?: out u32);

	Opt1 ReturnOpt1();
}


CCC : flat {
	a: string;
	b: string;
	c?: boolean;
}

BBB : flat {
	a: vector<AAA>;
	b: vector<CCC>;
}

Level2 : flat {
	x: string;
	y: vector<u8>;
	z: u64;
}

Level1 : flat {
	x: string;
	y: Level2;
	z: u64;
}

TopLevel : flat {
	x: string;
	y: Level1;
	z: u64;
}

interface TestNested {
	void Out(a?: out BBB);
	TopLevel ReturnNested();
}

[trusted=false]
interface TestBadInput {
	void In(a: in vector<u8>);
}

}